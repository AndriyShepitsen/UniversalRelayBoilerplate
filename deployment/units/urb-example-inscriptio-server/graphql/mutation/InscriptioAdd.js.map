{"version":3,"sources":["../../../../../units/urb-example-inscriptio-server/graphql/mutation/InscriptioAdd.js"],"names":["name","inputFields","Inscriptio_LocationLat","type","Inscriptio_LocationLon","Inscriptio_Notes","outputFields","InscriptiosEdge","edgeType","resolve","context","local_id","args","objectManager","rootValue","getOneObject","id","an_Object","getObjectList","Inscriptio_User_id","getViewerUserId","arr","cursor","cursorForObjectInConnection","node","Viewer","parent","mutateAndGetPayload","add"],"mappings":";;AAEA;AACA;;AAEA,oE;AACA,qF;;AAEe,+CAA6B;AAC1CA,KAAM,eADoC;;AAG1CC,YAAa;AACXC,uBAAwB,CAAEC,KAAM,mDAAR,CADb;AAEXC,uBAAwB,CAAED,KAAM,mDAAR,CAFb;AAGXE,iBAAkB,CAAEF,KAAM,mDAAR,CAHP,CAH6B;;;AAS1CG,aAAc;AACZC,gBAAiB;AACfJ,KAAM,gCAAsBK,QADb;AAEfC,QAAS;;;AAGPC,OAHO,WACLC,SADK,MACLA,QADK,IAEFC,KAFE;AAIMC,aAJN,OAILC,SAJK;;AAMiBD,cAAcE,YAAd,CAA4B,YAA5B,CAA0C;AAChEC,GAAIL,QAD4D,CAA1C,CANjB,SAMDM,SANC;;;AAUWJ,cAAcK,aAAd,CAA6B,YAA7B,CAA2C;AAC3DC,mBAAoBN,cAAcO,eAAd,EADuC,CAA3C,CAVX,SAUDC,GAVC;;;AAcA;AACLC,OAAQT,cAAcU,2BAAd;AACN,YADM;AAENF,GAFM;AAGNJ,SAHM,CADH;;AAMLO,KAAMP,SAND,CAdA,2DAFM,CADL;;;;;AA4BZQ,OAAQ;AACNtB,yBADM;AAENM,QAAS,iBAAEiB,MAAF,CAAUd,IAAV,CAAgBF,OAAhB,WAAsCG,cAAtC,OAA2BC,SAA3B;AACPD,cAAcE,YAAd,CAA4B,MAA5B,CAAoC;AAClCC,GAAIH,cAAcO,eAAd,EAD8B,CAApC,CADO,GAFH,CA5BI,CAT4B;;;;;AA8C1CO,oBAAqB;;AAEnBjB,OAFmB,WACjBR,uBADiB,OACjBA,sBADiB,CACOE,sBADP,OACOA,sBADP,CAC+BC,gBAD/B,OAC+BA,gBAD/B;AAGNQ,aAHM,OAGjBC,SAHiB;;AAKID,cAAce,GAAd,CAAmB,YAAnB,CAAiC;AACtDT,mBAAoBN,cAAcO,eAAd,EADkC;AAEtDlB,6CAFsD;AAGtDE,6CAHsD;AAItDC,iCAJsD,CAAjC,CALJ,SAKbM,QALa;;AAWZ,CAAEA,iBAAF,CAXY,4DA9CqB,CAA7B,C","file":"InscriptioAdd.js","sourcesContent":["// @flow weak\n\nimport { mutationWithClientMutationId } from 'graphql-relay'\nimport { GraphQLString, GraphQLNonNull } from 'graphql'\n\nimport InscriptiosConnection from '../type/InscriptiosConnection'\nimport ViewerType from '../../../../units/urb-base-server/graphql/type/ViewerType'\n\nexport default mutationWithClientMutationId({\n  name: 'InscriptioAdd',\n\n  inputFields: {\n    Inscriptio_LocationLat: { type: new GraphQLNonNull( GraphQLString ) },\n    Inscriptio_LocationLon: { type: new GraphQLNonNull( GraphQLString ) },\n    Inscriptio_Notes: { type: new GraphQLNonNull( GraphQLString ) },\n  },\n\n  outputFields: {\n    InscriptiosEdge: {\n      type: InscriptiosConnection.edgeType,\n      resolve: async(\n        { local_id },\n        { ...args },\n        context,\n        { rootValue: objectManager }\n      ) => {\n        const an_Object = await objectManager.getOneObject( 'Inscriptio', {\n          id: local_id,\n        })\n\n        const arr = await objectManager.getObjectList( 'Inscriptio', {\n          Inscriptio_User_id: objectManager.getViewerUserId(),\n        })\n\n        return {\n          cursor: objectManager.cursorForObjectInConnection(\n            'Inscriptio',\n            arr,\n            an_Object\n          ),\n          node: an_Object,\n        }\n      },\n    },\n\n    Viewer: {\n      type: ViewerType,\n      resolve: ( parent, args, context, { rootValue: objectManager }) =>\n        objectManager.getOneObject( 'User', {\n          id: objectManager.getViewerUserId(),\n        }),\n    },\n  },\n\n  mutateAndGetPayload: async(\n    { Inscriptio_LocationLat, Inscriptio_LocationLon, Inscriptio_Notes },\n    context,\n    { rootValue: objectManager }\n  ) => {\n    const local_id = await objectManager.add( 'Inscriptio', {\n      Inscriptio_User_id: objectManager.getViewerUserId(),\n      Inscriptio_LocationLat,\n      Inscriptio_LocationLon,\n      Inscriptio_Notes,\n    })\n    return { local_id }\n  },\n})\n"]}