{"version":3,"sources":["../../../../units/urb-example-ensayo-client/relay/EnsayoAddMutation.js"],"names":["mutation","sharedUpdater","store","user","EnsayosEdge","userProxy","get","id","connection","getConnection","insertEdgeAfter","nextClientMutationId","commit","environment","Ensayo_Title","Ensayo_Description","Ensayo_Content","clientMutationId","variables","input","updater","payload","getRootField","getLinkedRecord","optimisticUpdater","aEnsayo","create","setValue","setLinkedRecord"],"mappings":";;AAEA;AACA;;AAEA,GAAMA,2FAAN;;;;;;;;;;;;;;;;;;;AAmBA,QAASC,cAAT,CAAuBC,KAAvB,CAA8BC,IAA9B,CAAoCC,WAApC,CAAiD;AAC/C,GAAMC,WAAYH,MAAMI,GAAN,CAAUH,KAAKI,EAAf,CAAlB;;AAEA,GAAMC,YAAa,gCAAkBC,aAAlB,CAAgCJ,SAAhC,CAA2C,oBAA3C,CAAnB;AACA,GAAIG,UAAJ,CAAgB;AACd,gCAAkBE,eAAlB,CAAkCF,UAAlC,CAA8CJ,WAA9C;AACD;AACF;;AAED,GAAIO,sBAAuB,CAA3B;;AAEA,QAASC,OAAT,CAAgBC,WAAhB,CAA6BV,IAA7B,CAAmCW,YAAnC,CAAiDC,kBAAjD,CAAqEC,cAArE,CAAqF;AACnF,GAAMC,kBAAmBN,sBAAzB;;AAEA,MAAO,+BAAeE,WAAf,CAA4B;AACjCb,iBADiC;AAEjCkB,UAAW;AACTC,MAAO,CAAEL,yBAAF,CAAgBC,qCAAhB,CAAoCC,6BAApC,CAAoDC,iCAApD,CADE,CAFsB;;;AAMjCG,OANiC,kBAMzBlB,KANyB,CAMlB;AACb,GAAMmB,SAAUnB,MAAMoB,YAAN,CAAmB,WAAnB,CAAhB;AACArB,cAAcC,KAAd,CAAqBC,IAArB,CAA2BkB,QAAQE,eAAR,CAAwB,aAAxB,CAA3B;AACD,CATgC;;AAWjCC,iBAXiC,4BAWftB,KAXe,CAWR;AACvB,GAAMK,+BAAgCU,gBAAtC;AACA,GAAMQ,SAAUvB,MAAMwB,MAAN,CAAanB,EAAb,CAAiB,QAAjB,CAAhB;AACAkB,QAAQE,QAAR,CAAiBb,YAAjB,CAA+B,cAA/B;AACAW,QAAQE,QAAR,CAAiBZ,kBAAjB,CAAqC,oBAArC;AACAU,QAAQE,QAAR,CAAiBX,cAAjB,CAAiC,gBAAjC;AACAS,QAAQE,QAAR,CAAiBpB,EAAjB,CAAqB,IAArB;;AAEA,GAAMH,aAAcF,MAAMwB,MAAN;AACcT,gBADd;AAElB,aAFkB,CAApB;;AAIAb,YAAYwB,eAAZ,CAA4BH,OAA5B,CAAqC,MAArC;;AAEAxB,cAAcC,KAAd,CAAqBC,IAArB,CAA2BC,WAA3B;AACD,CA1BgC,CAA5B,CAAP;;AA4BD,C;;AAEc,CAAEQ,aAAF,C,oIA/DTZ,Q,wGAmBGC,a,6GASLU,oB,oHAEKC,M","file":"EnsayoAddMutation.js","sourcesContent":["// @flow weak\n\nimport { commitMutation, graphql } from 'react-relay'\nimport { ConnectionHandler } from 'relay-runtime'\n\nconst mutation = graphql`\n  mutation EnsayoAddMutation($input: EnsayoAddInput!) {\n    EnsayoAdd(input: $input) {\n      Viewer {\n        id\n      }\n      EnsayosEdge {\n        cursor\n        node {\n          id\n          Ensayo_Title\n          Ensayo_Description\n          Ensayo_Content\n        }\n      }\n    }\n  }\n`\n\nfunction sharedUpdater(store, user, EnsayosEdge) {\n  const userProxy = store.get(user.id)\n\n  const connection = ConnectionHandler.getConnection(userProxy, 'EnsayoList_Ensayos')\n  if (connection) {\n    ConnectionHandler.insertEdgeAfter(connection, EnsayosEdge)\n  }\n}\n\nlet nextClientMutationId = 0\n\nfunction commit(environment, user, Ensayo_Title, Ensayo_Description, Ensayo_Content) {\n  const clientMutationId = nextClientMutationId++\n\n  return commitMutation(environment, {\n    mutation,\n    variables: {\n      input: { Ensayo_Title, Ensayo_Description, Ensayo_Content, clientMutationId },\n    },\n\n    updater(store) {\n      const payload = store.getRootField('EnsayoAdd')\n      sharedUpdater(store, user, payload.getLinkedRecord('EnsayosEdge'))\n    },\n\n    optimisticUpdater(store) {\n      const id = `client:EnsayoAdd:Ensayo:${clientMutationId}`\n      const aEnsayo = store.create(id, 'Ensayo')\n      aEnsayo.setValue(Ensayo_Title, 'Ensayo_Title')\n      aEnsayo.setValue(Ensayo_Description, 'Ensayo_Description')\n      aEnsayo.setValue(Ensayo_Content, 'Ensayo_Content')\n      aEnsayo.setValue(id, 'id')\n\n      const EnsayosEdge = store.create(\n        `client:EnsayoAdd:EnsayosEdge:${clientMutationId}`,\n        'EnsayosEdge',\n      )\n      EnsayosEdge.setLinkedRecord(aEnsayo, 'node')\n\n      sharedUpdater(store, user, EnsayosEdge)\n    },\n  })\n}\n\nexport default { commit }\n"]}