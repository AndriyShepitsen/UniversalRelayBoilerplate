{"version":3,"sources":["../../../units/urb-base-tools/build-units.js"],"names":["currentPackageJson","JSON","parse","readFileSync","packageJson","dependencies","devDependencies","engines","scripts","addToPackageJson","fileName","newPackageJson","metadata","getPackages","directoryName","readdirSync","filter","statSync","unitName","isDirectory","packageJsonName","resolve","e","code","sortObject","object","t","Object","keys","sort","forEach","k","orderPackages","createPackageJson","version","name","console","log","writeFileSync","stringify","getMutations","mutationsImports","mutationsExports","mutationsDir","mutationName","endsWith","mutationNameNoJs","substring","length","push","createMutations","mutations","concat","join","getSchemas","schemasImports","schemasDir","replace","createSchemas","schemas","getViewerFields","viewerFieldsImports","viewerFieldsExports","viewerFieldsImportName","isFile","createViewerFields","viewerFields"],"mappings":"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","file":"build-units.js","sourcesContent":["// @flow weak\n\nimport fs from 'fs'\nimport path from 'path'\n\nconst currentPackageJson = JSON.parse(fs.readFileSync('./package.json'))\nconst packageJson = {\n  dependencies: {},\n  devDependencies: {},\n  engines: {},\n  scripts: {},\n}\n\nfunction addToPackageJson(fileName) {\n  const newPackageJson = JSON.parse(fs.readFileSync(fileName))\n\n  if (newPackageJson.dependencies)\n    Object.assign(packageJson.dependencies, newPackageJson.dependencies)\n  if (newPackageJson.devDependencies)\n    Object.assign(packageJson.devDependencies, newPackageJson.devDependencies)\n  if (newPackageJson.engines) Object.assign(packageJson.engines, newPackageJson.engines)\n  if (newPackageJson.metadata) Object.assign(packageJson.metadata, newPackageJson.metadata)\n  if (newPackageJson.scripts) Object.assign(packageJson.scripts, newPackageJson.scripts)\n}\n\nfunction getPackages(directoryName: string) {\n  fs.readdirSync(directoryName).filter(unitName => {\n    if (fs.statSync(directoryName + unitName).isDirectory()) {\n      const packageJsonName = path.resolve(directoryName, unitName, 'package.part.json')\n      try {\n        addToPackageJson(packageJsonName)\n      } catch (e) {\n        if (e.code === 'ENOENT') {\n          getPackages(directoryName + unitName + '/')\n          return false\n        } else throw e\n      }\n    }\n  })\n}\n\nfunction sortObject(object: Object) {\n  var t = {}\n  Object.keys(object).sort().forEach(function(k) {\n    t[k] = object[k]\n  })\n  return t\n}\n\nfunction orderPackages() {\n  packageJson.scripts = sortObject(packageJson.scripts)\n  packageJson.dependencies = sortObject(packageJson.dependencies)\n  packageJson.devDependencies = sortObject(packageJson.devDependencies)\n}\n\nfunction createPackageJson() {\n  // Make sure not to overwrite version information\n  packageJson.version = currentPackageJson.version\n  packageJson.name = currentPackageJson.name\n\n  getPackages('units/')\n  orderPackages()\n\n  console.log('Written: ' + path.resolve('./package.json'))\n  fs.writeFileSync('./package.json', JSON.stringify(packageJson, null, 2), 'utf8')\n}\n\nfunction getMutations(directoryName: String, mutationsImports: Array, mutationsExports: Array) {\n  fs.readdirSync(directoryName).filter(unitName => {\n    if (fs.statSync(directoryName + unitName).isDirectory()) {\n      const mutationsDir = path.resolve(directoryName, unitName, 'graphql/mutation')\n      try {\n        fs.readdirSync(mutationsDir).filter(mutationName => {\n          if (mutationName.endsWith('.js')) {\n            const mutationNameNoJs = mutationName.substring(0, mutationName.length - 3)\n            mutationsImports.push(\n              'import ' +\n                mutationNameNoJs +\n                \" from '../../../\" +\n                unitName +\n                '/graphql/mutation/' +\n                mutationNameNoJs +\n                \"'\",\n            )\n            mutationsExports.push('  ' + mutationNameNoJs + ',')\n          }\n        })\n      } catch (e) {\n        if (e.code === 'ENOENT') {\n          //getMutations(directoryName + unitName + '/', mutationsImports, mutationsExports)\n          return false\n        } else throw e\n      }\n    }\n  })\n}\n\nfunction createMutations() {\n  const mutationsImports = []\n  const mutationsExports = []\n\n  getMutations('units/', mutationsImports, mutationsExports)\n\n  let mutations = ['// @flow', '']\n  mutations = mutations.concat(mutationsImports)\n  mutations = mutations.concat(['', 'export default {'])\n  mutations = mutations.concat(mutationsExports)\n  mutations = mutations.concat(['}'])\n\n  console.log(\n    'Written: ' + path.resolve('./units/_configuration/urb-base-server/graphql/_mutations.js'),\n  )\n  fs.writeFileSync(\n    './units/_configuration/urb-base-server/graphql/_mutations.js',\n    mutations.join('\\r\\n'),\n    'utf8',\n  )\n}\n\nfunction getSchemas(schemasImports: Array) {\n  const directoryName = 'units/'\n  fs.readdirSync(directoryName).filter(unitName => {\n    if (fs.statSync(directoryName + unitName).isDirectory()) {\n      const schemasDir = path.resolve(directoryName, unitName, 'graphql/model')\n      try {\n        fs.readdirSync(schemasDir).filter(mutationName => {\n          if (mutationName.endsWith('.js')) {\n            const mutationNameNoJs = mutationName.substring(0, mutationName.length - 3)\n            schemasImports.push(\n              'import ' +\n                mutationNameNoJs.replace('.', '_') +\n                \" from '../../../\" +\n                unitName +\n                '/graphql/model/' +\n                mutationNameNoJs +\n                \"'\",\n            )\n          }\n        })\n      } catch (e) {\n        if (e.code === 'ENOENT') {\n          return false\n        } else throw e\n      }\n    }\n  })\n}\n\nfunction createSchemas() {\n  const schemasImports = []\n\n  getSchemas(schemasImports)\n\n  let schemas = ['// @flow', '']\n  schemas = schemas.concat(schemasImports)\n  schemas = schemas.concat(['', 'export default true'])\n\n  console.log(\n    'Written: ' + path.resolve('./units/_configuration/urb-base-server/graphql/_schemas.js'),\n  )\n  fs.writeFileSync(\n    './units/_configuration/urb-base-server/graphql/_schemas.js',\n    schemas.join('\\r\\n'),\n    'utf8',\n  )\n}\n\nfunction getViewerFields(\n  directoryName: String,\n  viewerFieldsImports: Array,\n  viewerFieldsExports: Array,\n) {\n  fs.readdirSync(directoryName).filter(unitName => {\n    if (fs.statSync(directoryName + unitName).isDirectory()) {\n      try {\n        const viewerFieldsImportName = unitName.replace(/-/g, '_')\n        if (fs.statSync(directoryName + unitName + '/graphql/type/_ViewerFields.js').isFile()) {\n          viewerFieldsImports.push(\n            'import ' +\n              viewerFieldsImportName +\n              \" from '../../../\" +\n              unitName +\n              \"/graphql/type/_ViewerFields'\",\n          )\n          viewerFieldsExports.push('  ...' + viewerFieldsImportName + ',')\n        }\n      } catch (e) {\n        if (e.code === 'ENOENT') {\n          //getViewerFields(directoryName + unitName + '/', viewerFieldsImports, viewerFieldsExports)\n          return false\n        } else throw e\n      }\n    }\n  })\n}\n\nfunction createViewerFields() {\n  const viewerFieldsImports = []\n  const viewerFieldsExports = []\n\n  getViewerFields('units/', viewerFieldsImports, viewerFieldsExports)\n\n  let viewerFields = ['// @flow', '']\n  viewerFields = viewerFields.concat(viewerFieldsImports)\n  viewerFields = viewerFields.concat(['', 'export default {'])\n  viewerFields = viewerFields.concat(viewerFieldsExports)\n  viewerFields = viewerFields.concat(['}'])\n\n  console.log(\n    'Written: ' + path.resolve('./units/_configuration/urb-base-server/graphql/_ViewerFields.js'),\n  )\n  fs.writeFileSync(\n    './units/_configuration/urb-base-server/graphql/_ViewerFields.js',\n    viewerFields.join('\\r\\n'),\n    'utf8',\n  )\n}\n\ncreatePackageJson()\ncreateMutations()\ncreateSchemas()\ncreateViewerFields()\n"]}