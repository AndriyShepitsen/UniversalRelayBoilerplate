{"version":3,"sources":["../../../units/urb-base-tools/build-schema.js"],"names":["file_schema_json","join","__dirname","file_schema_graphql","createJson","result","errors","console","error","JSON","stringify","writeFileSync","log"],"mappings":";;AAEA,sB;AACA,0B;AACA;AACA;;AAEA,yD;;AAEA,GAAIA,kBAAmB,eAAKC,IAAL;AACrBC,SADqB;AAErB,yDAFqB,CAAvB;;AAIA,GAAIC,qBAAsB,eAAKF,IAAL;AACxBC,SADwB;AAExB,4DAFwB,CAA1B;;;;AAMA,QAAeE,WAAf;AACqB,oEADrB,SACMC,MADN;AAEE,GAAIA,OAAOC,MAAX,CAAmB;AACjBC,QAAQC,KAAR,CAAc,SAAd;AACAD,QAAQC,KAAR,CAAc,8BAAd,CAA8CC,KAAKC,SAAL,CAAeL,OAAOC,MAAtB,CAA8B,IAA9B,CAAoC,CAApC,CAA9C;AACD,CAHD,IAGO;AACL,aAAGK,aAAH,CAAiBX,gBAAjB,CAAmCS,KAAKC,SAAL,CAAeL,MAAf,CAAuB,IAAvB,CAA6B,CAA7B,CAAnC;AACAE,QAAQK,GAAR,CAAY,YAAcZ,gBAA1B;AACD,CARH;;;;AAYA,aAAGW,aAAH,CAAiBR,mBAAjB,CAAsC,4CAAtC;AACAI,QAAQK,GAAR,CAAY,YAAcT,mBAA1B;;AAEAC,a,0GAzBIJ,gB,0FAIAG,mB,6FAMWC,U","file":"build-schema.js","sourcesContent":["// @flow\n\nimport fs from 'fs'\nimport path from 'path'\nimport { graphql } from 'graphql'\nimport { introspectionQuery, printSchema } from 'graphql/utilities'\n\nimport schema from '../urb-base-server/graphql/schema'\n\nlet file_schema_json = path.join(\n  __dirname,\n  '../../configuration/urb-base-server/graphql/schema.json',\n)\nlet file_schema_graphql = path.join(\n  __dirname,\n  '../../configuration/urb-base-server/graphql/schema.graphql',\n)\n\n// Save JSON of full schema introspection for Babel Relay Plugin to use\nasync function createJson() {\n  var result = await graphql(schema, introspectionQuery)\n  if (result.errors) {\n    console.error('ERROR! ')\n    console.error('ERROR introspecting schema: ', JSON.stringify(result.errors, null, 2))\n  } else {\n    fs.writeFileSync(file_schema_json, JSON.stringify(result, null, 2))\n    console.log('Written: ' + file_schema_json)\n  }\n}\n\n// Save user readable type system shorthand of schema\nfs.writeFileSync(file_schema_graphql, printSchema(schema))\nconsole.log('Written: ' + file_schema_graphql)\n\ncreateJson()\n"]}