{"version":3,"sources":["../../../units/urb-base-tools/build-bump-version.js"],"names":["require","load","console","log","process","env","npm_package_version","versionBuildNumber","split","newVersion","fileName","searchString","newContentOfLine","fileLines","readFileSync","index","length","indexOf","writeFileSync","join"],"mappings":"AAAA,sB;;;;;AAKA,qD,mFAFAA,QAAQ,QAAR,EAAkBC,IAAlB;;AAIAC,QAAQC,GAAR,CAAY,oCAAsCC,QAAQC,GAAR,CAAYC,mBAA9D;AACAJ,QAAQC,GAAR,CAAY,oDAAZ;;AAEA,GAAII,oBAAqB,iBAAQC,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAzB;AACA,GAAID,oBAAsB,IAA1B,CAAgCA,mBAAqB,CAArB;;;AAGhCA;AACA,GAAME,YAAaL,QAAQC,GAAR,CAAYC,mBAAZ,CAAkC,GAAlC,CAAwCC,kBAA3D;;AAEA,GAAMG,UAAW,mCAAjB;AACA,GAAMC,cAAe,yBAArB;AACA,GAAMC,kBAAmB,2BAA6BH,UAA7B,CAA0C,GAAnE;;AAEA,GAAII,WAAY,aAAGC,YAAH,CAAgBJ,QAAhB,CAA0B,MAA1B,EAAkCF,KAAlC,CAAwC,IAAxC,CAAhB;AACA,GAAIO,OAAQ,CAAZ;;AAEA,MAAOA,MAAQF,UAAUG,MAAzB,CAAiC;AAC/B,GAAIH,UAAUE,KAAV,EAAiBE,OAAjB,CAAyBN,YAAzB,EAAyC,CAAC,CAA9C,CAAiD;AAC/C,GAAIE,UAAUE,KAAV,GAAoBH,gBAAxB;AACEV,QAAQC,GAAR,CAAY,IAAMO,QAAN,CAAiB,yBAA7B,EADF;AAEK;AACHG,UAAUE,KAAV,EAAmBH,gBAAnB;AACA,aAAGM,aAAH,CAAiBR,QAAjB,CAA2BG,UAAUM,IAAV,CAAe,IAAf,CAA3B;;AAEAjB,QAAQC,GAAR,CAAY,oCAAsCM,UAAlD;AACD;AACD;AACD,CAVD,IAUOM;AACR","file":"build-bump-version.js","sourcesContent":["import fs from 'fs'\n\n// Read environment\nrequire('dotenv').load()\n\nimport { version } from '../_configuration/package.js'\n\nconsole.log('Current version in package.json: ' + process.env.npm_package_version)\nconsole.log('Current version in package.js:   ' + version)\n\nlet versionBuildNumber = version.split('.')[3]\nif (versionBuildNumber == null) versionBuildNumber = 1\n\n// Increment build\nversionBuildNumber++\nconst newVersion = process.env.npm_package_version + '.' + versionBuildNumber\n\nconst fileName = './units/_configuration/package.js'\nconst searchString = 'export const version = '\nconst newContentOfLine = \"export const version = '\" + newVersion + \"'\"\n\nlet fileLines = fs.readFileSync(fileName, 'utf8').split('\\n')\nlet index = 0\n\nwhile (index < fileLines.length) {\n  if (fileLines[index].indexOf(searchString) > -1) {\n    if (fileLines[index] == newContentOfLine)\n      console.log('[' + fileName + '] is already up to date')\n    else {\n      fileLines[index] = newContentOfLine\n      fs.writeFileSync(fileName, fileLines.join('\\n'))\n\n      console.log('New version in package.js:       ' + newVersion)\n    }\n    break\n  } else index++\n}\n"]}