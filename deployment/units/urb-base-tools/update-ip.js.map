{"version":3,"sources":["../../../units/urb-base-tools/update-ip.js"],"names":["require","load","port","process","env","PORT","Error","IPAddress","argv","undefined","console","log","updateIPInFile","fileName","searchString","newContentOfLine","fileLines","readFileSync","split","index","length","indexOf","writeFileSync","join","err"],"mappings":";;AAEA,sB;;AAEA,+E;AACA,yD;;;AAGAA,QAAQ,QAAR,EAAkBC,IAAlB;;AAEA,GAAMC,MAAOC,QAAQC,GAAR,CAAYC,IAAzB;AACA,GAAIH,MAAQ,IAAR,EAAgB,MAAOA,KAAP,GAAgB,QAApC;AACE,KAAM,IAAII,MAAJ,CAAU,gEAAV,CAAN;;AAEF,GAAIC,WAAYJ,QAAQK,IAAR,CAAa,CAAb,CAAhB;;AAEA,GAAID,WAAaE,SAAjB,CAA4BF,UAAY,0BAAZ;;AAE5B,GAAIA,WAAaE,SAAjB,CAA4B;AAC1BC,QAAQC,GAAR,CAAY,cAAgBJ,SAA5B;AACAK;AACE,mCAA6B,gBAD/B;AAEE,+CAFF;AAGE;AACEL,SADF;AAEE,iDALJ;AAMEA,SANF;;AAQAK;AACE,kDADF;AAEE,iBAFF;AAGE,6BAA+BL,SAA/B,CAA2C,GAA3C,CAAiDL,IAAjD,CAAwD,GAH1D;AAIEK,SAJF;;AAMAK,eAAe,QAAf,CAAyB,aAAzB,CAAwC,qBAAuBL,SAAvB,CAAmC,GAAnC,CAAyCL,IAAjF,CAAuFK,SAAvF;AACAK,eAAe,QAAf,CAAyB,OAAzB,CAAkC,QAAUL,SAA5C,CAAuDA,SAAvD;AACD,CAlBD,IAkBOG,SAAQC,GAAR,CAAY,iDAAZ;;AAEP,QAASC,eAAT,CAAwBC,QAAxB,CAAkCC,YAAlC,CAAgDC,gBAAhD,CAAkER,SAAlE,CAA6E;AAC3E,GAAI;AACF,GAAIS,WAAY,aAAGC,YAAH,CAAgBJ,QAAhB,CAA0B,MAA1B,EAAkCK,KAAlC,CAAwC,IAAxC,CAAhB;AACA,GAAIC,OAAQ,CAAZ;;AAEA,MAAOA,MAAQH,UAAUI,MAAzB,CAAiC;AAC/B,GAAIJ,UAAUG,KAAV,EAAiBE,OAAjB,CAAyBP,YAAzB,EAAyC,CAAC,CAA9C,CAAiD;AAC/C,GAAIE,UAAUG,KAAV,GAAoBJ,gBAAxB;AACEL,QAAQC,GAAR,CAAY,IAAME,QAAN,CAAiB,yBAA7B,EADF;AAEK;AACHG,UAAUG,KAAV,EAAmBJ,gBAAnB;AACA,aAAGO,aAAH,CAAiBT,QAAjB,CAA2BG,UAAUO,IAAV,CAAe,IAAf,CAA3B;;AAEAb,QAAQC,GAAR,CAAY,IAAME,QAAN,CAAiB,mCAAjB,CAAuDN,SAAnE;AACD;AACD;AACD,CAVD,IAUO;AACLY;AACD;AACF;AACF,CAAC,MAAOK,GAAP,CAAY;AACZd,QAAQC,GAAR,CAAY,IAAME,QAAN,CAAiB,oDAAjB,CAAwEW,GAApF;AACD;AACF","file":"update-ip.js","sourcesContent":["// @flow\n\nimport fs from 'fs'\n\nimport AppRegistryName from '../_configuration/urb-base-app/AppRegistryName'\nimport getLocalIP from '../urb-base-server/getLocalIP'\n\n// Read environment\nrequire('dotenv').load()\n\nconst port = process.env.PORT\nif (port == null || typeof port !== 'string')\n  throw new Error('ðŸ’”  update-ip requires the environment variable PORT to be set')\n\nlet IPAddress = process.argv[2]\n\nif (IPAddress == undefined) IPAddress = getLocalIP()\n\nif (IPAddress != undefined) {\n  console.log('IP Address:' + IPAddress)\n  updateIPInFile(\n    './ios/' + AppRegistryName + '/AppDelegate.m',\n    'jsCodeLocation = [NSURL URLWithString:@\"http:',\n    '  jsCodeLocation = [NSURL URLWithString:@\"http://' +\n      IPAddress +\n      ':8081/index.ios.bundle?platform=ios&dev=true\"];',\n    IPAddress,\n  )\n  updateIPInFile(\n    './units/_configuration/urb-base-app/publicURL.js',\n    'const publicURL',\n    \"const publicURL = 'http://\" + IPAddress + ':' + port + \"'\",\n    IPAddress,\n  )\n  updateIPInFile('./.env', 'PUBLIC_URL=', 'PUBLIC_URL=http://' + IPAddress + ':' + port, IPAddress)\n  updateIPInFile('./.env', 'HOST=', 'HOST=' + IPAddress, IPAddress)\n} else console.log('IP Address not specified and could not be found')\n\nfunction updateIPInFile(fileName, searchString, newContentOfLine, IPAddress) {\n  try {\n    let fileLines = fs.readFileSync(fileName, 'utf8').split('\\n')\n    let index = 0\n\n    while (index < fileLines.length) {\n      if (fileLines[index].indexOf(searchString) > -1) {\n        if (fileLines[index] == newContentOfLine)\n          console.log('[' + fileName + '] is already up to date')\n        else {\n          fileLines[index] = newContentOfLine\n          fs.writeFileSync(fileName, fileLines.join('\\n'))\n\n          console.log('[' + fileName + '] has been updated with local IP ' + IPAddress)\n        }\n        break\n      } else {\n        index++\n      }\n    }\n  } catch (err) {\n    console.log('[' + fileName + '] has not been been updated with local IP because ' + err)\n  }\n}\n"]}