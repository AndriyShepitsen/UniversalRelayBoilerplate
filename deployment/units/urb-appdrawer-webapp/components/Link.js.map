{"version":3,"sources":["../../../../units/urb-appdrawer-webapp/components/Link.jsx"],"names":["styles","root","color","textDecoration","primary","theme","palette","accent","A400","Link","props","ComponentProp","component","classes","className","variant","to","other","Component"],"mappings":";;AAEA,4B;AACA,sC;AACA;AACA,0C;;AAEA,GAAMA,QAAS,QAATA,OAAS,cAAU;AACvBC,KAAM;AACJC,MAAO,SADH;AAEJC,eAAgB,MAFZ;AAGJ,UAAW;AACTA,eAAgB,WADP,CAHP,CADiB;;;AAQvBC,QAAS;AACPF,MAAOG,MAAMC,OAAN,CAAcF,OAAd,CAAsB,GAAtB,CADA,CARc;;AAWvBG,OAAQ;AACNL,MAAOG,MAAMC,OAAN,CAAcC,MAAd,CAAqBC,IADtB,CAXe,CAAV,EAAf,C;;;;AAgBMC,I;;;;;;;AAOIC,K,CAAQ;;;;;;;;AAQV,KAAKA,KARK,CAEDC,aAFC,QAEZC,SAFY,CAGZC,OAHY,QAGZA,OAHY,CAIZC,SAJY,QAIZA,SAJY,CAKZC,OALY,QAKZA,OALY,CAMZC,EANY,QAMZA,EANY,CAOTC,KAPS;;AAUd,GAAIC,iBAAJ;;AAEA,GAAKP,aAAL,CAAqB;AACnBO,UAAYP,aAAZ;AACD,CAFD,IAEO,IAAKK,EAAL,CAAU;AACfE;AACD,CAFM,IAEA;AACLA,UAAY,GAAZ;AACD;;AAED;AACE,8BAAC,SAAD;AACE,GAAIF,EADN;AAEE,UAAW;AACTH,QAAQZ,IADC;;AAGNY,QAAQT,OAHF,CAGYW,UAAY,SAHxB;AAINF,QAAQN,MAJF,CAIWQ,UAAY,QAJvB;;AAMTD,SANS,CAFb;;AAUMG,KAVN,EADF;;;AAcD,C,kBAzCgB,gBAAMC,S;;;AA4CV,uBAAYlB,MAAZ,EAAsBS,IAAtB,C","file":"Link.js","sourcesContent":["// @flow\n\nimport React from 'react'\nimport classNames from 'classnames'\nimport { Link as LinkRouter } from 'found'\nimport { withStyles } from 'material-ui/styles'\n\nconst styles = theme => ({\n  root: {\n    color: 'inherit',\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n  primary: {\n    color: theme.palette.primary[500],\n  },\n  accent: {\n    color: theme.palette.accent.A400,\n  },\n})\n\nclass Link extends React.Component<{\n  classes: Object,\n  className: string,\n  component: string | Function,\n  to: string,\n  variant: 'primary' | 'accent'\n}> {\n  render( props ) {\n    const {\n      component: ComponentProp,\n      classes,\n      className,\n      variant,\n      to,\n      ...other\n    } = this.props\n\n    let Component\n\n    if ( ComponentProp ) {\n      Component = ComponentProp\n    } else if ( to ) {\n      Component = LinkRouter\n    } else {\n      Component = 'a'\n    }\n\n    return (\n      <Component\n        to={to}\n        className={classNames(\n          classes.root,\n          {\n            [classes.primary]: variant === 'primary',\n            [classes.accent]: variant === 'accent',\n          },\n          className\n        )}\n        {...other}\n      />\n    )\n  }\n}\n\nexport default withStyles( styles )( Link )\n"]}