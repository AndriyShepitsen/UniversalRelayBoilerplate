{"version":3,"sources":["../../../../../units/urb-example-translaticiarum-server/graphql/mutation/TranslaticiarumUpdate.js"],"names":["name","inputFields","id","type","Translaticiarum_Start","Translaticiarum_Stop","Translaticiarum_Description","outputFields","Translaticiarum","resolve","context","local_id","args","objectManager","rootValue","getOneObject","mutateAndGetPayload","update"],"mappings":";;AAEA;AACA;;AAEA,gE;;AAEe,+CAA6B;AAC1CA,KAAM,uBADoC;;AAG1CC,YAAa;AACXC,GAAI,CAAEC,KAAM,+CAAR,CADO;AAEXC,sBAAuB,CAAED,KAAM,mDAAR,CAFZ;AAGXE,qBAAsB,CAAEF,KAAM,mDAAR,CAHX;AAIXG,4BAA6B,CAAEH,KAAM,mDAAR,CAJlB,CAH6B;;;AAU1CI,aAAc;AACZC,gBAAiB;AACfL,kCADe;AAEfM,QAAS;;;AAGPC,OAHO,WACLC,SADK,MACLA,QADK,IAEFC,KAFE;AAIMC,aAJN,OAILC,SAJK;AAKJD,cAAcE,YAAd,CAA2B,iBAA3B,CAA8C,CAAEb,GAAIS,QAAN,CAA9C,CALI,GAFM,CADL,CAV4B;;;;AAsB1CK,oBAAqB;;;;;;;AAOnBN,OAPmB,WAEjBR,GAFiB,OAEjBA,EAFiB,CAGjBE,qBAHiB,OAGjBA,qBAHiB,CAIjBC,oBAJiB,OAIjBA,oBAJiB,CAKjBC,2BALiB,OAKjBA,2BALiB;AAQNO,aARM,OAQjBC,SARiB;;AAUbH,QAVa,CAUF,+BAAaT,EAAb,EAAiBA,EAVf;;AAYbW,cAAcI,MAAd,CAAqB,iBAArB,CAAwC;AAC5Cf,GAAIS,QADwC;AAE5CP,2CAF4C;AAG5CC,yCAH4C;AAI5CC,uDAJ4C,CAAxC,CAZa;;;AAmBZ,CAAEK,iBAAF,CAnBY,2DAtBqB,CAA7B,C","file":"TranslaticiarumUpdate.js","sourcesContent":["// @flow weak\n\nimport { fromGlobalId, mutationWithClientMutationId } from 'graphql-relay'\nimport { GraphQLString, GraphQLID, GraphQLNonNull } from 'graphql'\n\nimport TranslaticiarumType from '../type/TranslaticiarumType'\n\nexport default mutationWithClientMutationId({\n  name: 'TranslaticiarumUpdate',\n\n  inputFields: {\n    id: { type: new GraphQLNonNull(GraphQLID) },\n    Translaticiarum_Start: { type: new GraphQLNonNull(GraphQLString) },\n    Translaticiarum_Stop: { type: new GraphQLNonNull(GraphQLString) },\n    Translaticiarum_Description: { type: new GraphQLNonNull(GraphQLString) },\n  },\n\n  outputFields: {\n    Translaticiarum: {\n      type: TranslaticiarumType,\n      resolve: (\n        { local_id },\n        { ...args },\n        context,\n        { rootValue: objectManager }\n      ) => objectManager.getOneObject('Translaticiarum', { id: local_id }),\n    },\n  },\n\n  mutateAndGetPayload: async(\n    {\n      id,\n      Translaticiarum_Start,\n      Translaticiarum_Stop,\n      Translaticiarum_Description,\n    },\n    context,\n    { rootValue: objectManager }\n  ) => {\n    const local_id = fromGlobalId(id).id\n\n    await objectManager.update('Translaticiarum', {\n      id: local_id,\n      Translaticiarum_Start,\n      Translaticiarum_Stop,\n      Translaticiarum_Description,\n    })\n\n    return { local_id }\n  },\n})\n"]}