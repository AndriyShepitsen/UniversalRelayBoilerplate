{"version":3,"sources":["../../../../units/sv-home-screen-webapp/components/HomeScreen.jsx"],"names":["styles","card","minWidth","minHeight","HomeScreen","props","classes","Viewer","Agents","edges","map","node","agent","key","FirstName","LastName","UserId","Component","contextTypes","rbCtx","object"],"mappings":";;AAEA,sC;AACA;AACA,qC;AACA,4B;AACA;;AAEA,6F;;AAEA,GAAMA,QAAS;AACbC,KAAM;AACJC,SAAU,GADN;AAEJC,UAAW,GAFP,CADO,CAAf,C;;;;AAOMC,U;;;;;;;;AAQK;AACqB,KAAKC,KAD1B,CACCC,OADD,QACCA,OADD,CACUC,MADV,QACUA,MADV;;AAGP,GAAIC,QAASD,OAAOC,MAAP,CAAcC,KAAd,CAAoBC,GAApB,CAAwB,cAAc,IAAXC,KAAW,MAAXA,IAAW;AACjD,MAAOA,KAAP;AACD,CAFY,CAAb;;AAIA;AACE;AACE,8CAAM,UAAWL,QAAQL,IAAzB;AACE,gDAAY,MAAM,MAAlB,EADF;AAEE;AACE,wDADF;AAEE,wCAFF;AAGE;AACGO,OAAOE,GAAP,CAAW,SAACE,KAAD,CAAQC,GAAR,CAAgB;AAC1B;AACE,oCAAI,IAAKA,GAAT;AACE,8CAAQD,MAAME,SAAd,KADF;AAEE,8CAAQF,MAAMG,QAAd,CAFF;AAGE,8CAAQH,MAAMI,MAAd,CAHF,CADF;;;AAOD,CARA,CADH,CAHF,CAFF,CADF,CADF;;;;;;AAsBD,C,wBArCsB,gBAAMC,S,EAAzBb,U,CAIGc,Y,CAAe,CACpBC,MAAO,oBAAUC,MADG,C;;;AAoCT;AACb,uBAAWpB,MAAX,EAAmBI,UAAnB,CADa,0F","file":"HomeScreen.js","sourcesContent":["// @flow\n\nimport Card, { CardContent, CardHeader } from 'material-ui/Card'\nimport { withStyles } from 'material-ui/styles'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport ResponsiveContentArea from '../../urb-base-webapp/components/ResponsiveContentArea'\n\nconst styles = {\n  card: {\n    minWidth: 275,\n    minHeight: 400,\n  },\n}\n\nclass HomeScreen extends React.Component<\n  { classes: Object, Viewer: Object },\n  Object\n> {\n  static contextTypes = {\n    rbCtx: PropTypes.object,\n  }\n\n  render() {\n    const { classes, Viewer } = this.props\n\n    let Agents = Viewer.Agents.edges.map(({ node }) => {\n      return node\n    })\n\n    return (\n      <ResponsiveContentArea>\n        <Card className={classes.card}>\n          <CardHeader title=\"Home\" />\n          <CardContent>\n            <h3>Office Agents</h3>\n            <hr />\n            <ol>\n              {Agents.map((agent, key) => {\n                return (\n                  <li key={key}>\n                    <span> {agent.FirstName} </span>\n                    <span> {agent.LastName}</span>\n                    <span> {agent.UserId}</span>\n                  </li>\n                )\n              })}\n            </ol>\n          </CardContent>\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles(styles)(HomeScreen),\n  graphql`\n    fragment HomeScreen_Viewer on Viewer {\n      Agents(first: 5) {\n        edges {\n          node {\n            id\n            FirstName\n            LastName\n            UserId\n          }\n        }\n      }\n    }\n  `\n)\n"]}