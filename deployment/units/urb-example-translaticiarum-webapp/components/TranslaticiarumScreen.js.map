{"version":3,"sources":["../../../../units/urb-example-translaticiarum-webapp/components/TranslaticiarumScreen.jsx"],"names":["momentLocalizer","styles","card","minWidth","TranslaticiarumScreen","props","context","_handle_onView","setState","calendarView","view","_handle_onSelectSlot","slotInfo","console","log","state","classes","Viewer","translaticiarumEdges","Translaticiarums","edges","calendarEvents","map","translaticiarum","translaticiarumEdge","node","title","Translaticiarum_Description","start","Translaticiarum_Start","toDate","end","Translaticiarum_Stop","Component","contextTypes","router","object","isRequired"],"mappings":";;AAEA,sC;AACA;AACA,8B;AACA,qC;AACA,4B;AACA,oD;AACA;;AAEA,6F;;AAEA,2BAAYA,eAAZ;;AAEA,GAAMC,QAAS;AACbC,KAAM;AACJC,SAAU,GADN,CADO,CAAf,C;;;;;;;;AAUMC,qB;;;;;;AAMJ,+BAAYC,KAAZ,CAA2BC,OAA3B,CAA4C;AACpCD,KADoC,CAC7BC,OAD6B;;;;;;;AAQ5CC,cAR4C,CAQ3B,cAAQ;AACvB,MAAKC,QAAL,CAAc,CAAEC,aAAcC,IAAhB,CAAd;AACD,CAV2C;;AAY5CC,oBAZ4C,CAYrB,SAACC,QAAD,CAA8D;AACnFC,QAAQC,GAAR,CAAYF,QAAZ;AACD,CAd2C,CAG1C,MAAKG,KAAL,CAAa,CACXN,aAAc,MADH,CAAb,CAH0C,aAM3C,C;;AAUQ;AACqB,KAAKJ,KAD1B,CACCW,OADD,QACCA,OADD,CACUC,MADV,QACUA,MADV;;AAGP,GAAMC,sBAAuBD,OAAOE,gBAAP,CAAwBC,KAArD;;AAEA,GAAMC,gBAAiBH,qBAAqBI,GAArB,CAAyB,6BAAuB;AACrE,GAAMC,iBAAkBC,oBAAoBC,IAA5C;;AAEA,MAAO;AACLC,MAAOH,gBAAgBI,2BADlB;AAELC,MAAO,qBAAOL,gBAAgBM,qBAAvB,EAA8CC,MAA9C,EAFF;AAGLC,IAAK,qBAAOR,gBAAgBS,oBAAvB,EAA6CF,MAA7C,EAHA,CAAP;;AAKD,CARsB,CAAvB;;AAUAjB,QAAQC,GAAR,CAAY,KAAKC,KAAL,CAAWN,YAAvB;AACAI,QAAQC,GAAR,CAAYO,cAAZ;;AAEA;AACE;AACE,8CAAM,UAAWL,QAAQd,IAAzB;AACE,gDAAY,MAAM,iBAAlB,EADF;;AAGE;AACE;AACE,OAAQmB,cADV;AAEE,KAAM,KAAKN,KAAL,CAAWN,YAFnB;AAGE,OAAQ,KAAKF,cAHf;AAIE,WAAY,IAJd;AAKE,aAAc,KAAKI,oBALrB,EADF,CAHF,CADF,CADF;;;;;;AAiBD,C,mCAzDiC,gBAAMsB,S;;;AA4D1C7B,sBAAsB8B,YAAtB,CAAqC;AACnCC,OAAQ,oBAAUC,MAAV,CAAiBC,UADU,CAArC,C;;;AAIe;AACb,uBAAWpC,MAAX,EAAmBG,qBAAnB,CADa,qG","file":"TranslaticiarumScreen.js","sourcesContent":["// @flow\n\nimport Card, { CardContent, CardHeader } from 'material-ui/Card'\nimport { withStyles } from 'material-ui/styles'\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport BigCalendar from 'react-big-calendar'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport ResponsiveContentArea from '../../urb-base-webapp/components/ResponsiveContentArea'\n\nBigCalendar.momentLocalizer(moment)\n\nconst styles = {\n  card: {\n    minWidth: 275,\n  },\n}\n\n// truncate \"Translaticiarum\";\n// insert into \"Translaticiarum\"(id, \"Translaticiarum_User_id\", \"Translaticiarum_Description\",\"Translaticiarum_Start\", \"Translaticiarum_Stop\") values(0dba9aae-e84f-484a-9dc8-1a2be761c0ea, 00000000-0000-0000-0000-000000000000, 'item', '2017-09-09 10:00-0700', '2017-09-09 11:30-0700');\n// select * from \"Translaticiarum\";\n\nclass TranslaticiarumScreen extends React.Component<\n  any,\n  {\n    calendarView: 'month' | 'week' | 'day' | 'agenda',\n  },\n> {\n  constructor(props: Object, context: Object) {\n    super(props, context)\n\n    this.state = {\n      calendarView: 'week',\n    }\n  }\n\n  _handle_onView = view => {\n    this.setState({ calendarView: view })\n  }\n\n  _handle_onSelectSlot = (slotInfo: { start: Date, end: Date, slots: Array<Date> }) => {\n    console.log(slotInfo)\n  }\n\n  render() {\n    const { classes, Viewer } = this.props\n\n    const translaticiarumEdges = Viewer.Translaticiarums.edges\n\n    const calendarEvents = translaticiarumEdges.map(translaticiarumEdge => {\n      const translaticiarum = translaticiarumEdge.node\n\n      return {\n        title: translaticiarum.Translaticiarum_Description,\n        start: moment(translaticiarum.Translaticiarum_Start).toDate(),\n        end: moment(translaticiarum.Translaticiarum_Stop).toDate(),\n      }\n    })\n\n    console.log(this.state.calendarView)\n    console.log(calendarEvents)\n\n    return (\n      <ResponsiveContentArea>\n        <Card className={classes.card}>\n          <CardHeader title=\"Translaticiarum\" />\n\n          <CardContent>\n            <BigCalendar\n              events={calendarEvents}\n              view={this.state.calendarView}\n              onView={this._handle_onView}\n              selectable={true}\n              onSelectSlot={this._handle_onSelectSlot}\n            />\n          </CardContent>\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nTranslaticiarumScreen.contextTypes = {\n  router: PropTypes.object.isRequired,\n}\n\nexport default createFragmentContainer(\n  withStyles(styles)(TranslaticiarumScreen),\n  graphql`\n    fragment TranslaticiarumScreen_Viewer on Viewer {\n      Translaticiarums(first: 2147483647)\n        @connection(key: \"TranslaticiarumScreen_Translaticiarums\") {\n        edges {\n          node {\n            id\n            Translaticiarum_Description\n            Translaticiarum_Start\n            Translaticiarum_Stop\n          }\n        }\n      }\n    }\n  `,\n)\n"]}