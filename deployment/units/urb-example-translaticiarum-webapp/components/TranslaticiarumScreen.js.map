{"version":3,"sources":["../../../../units/urb-example-translaticiarum-webapp/components/TranslaticiarumScreen.jsx"],"names":["momentLocalizer","styles","card","minWidth","TranslaticiarumScreen","props","context","_handle_onView","setState","calendarView","view","_handle_onSelectSlot","slotInfo","console","log","state","classes","Viewer","translaticiarumEdges","Translaticiarums","edges","calendarEvents","map","translaticiarum","translaticiarumEdge","node","title","Translaticiarum_Description","start","Translaticiarum_Start","toDate","end","Translaticiarum_Stop","Component","contextTypes","router","object"],"mappings":";;AAEA,sC;AACA;AACA,8B;AACA,qC;AACA,4B;AACA,oD;AACA;;AAEA,6F;;AAEA,2BAAYA,eAAZ;;AAEA,GAAMC,QAAS;AACbC,KAAM;AACJC,SAAU,GADN,CADO,CAAf,C;;;;;;;;AAUMC,qB;;;;;;;;;;AAUJ,+BAAaC,KAAb,CAA4BC,OAA5B,CAA8C;AACrCD,KADqC,CAC9BC,OAD8B;;;;;;;AAQ9CC,cAR8C,CAQ7B,cAAQ;AACvB,MAAKC,QAAL,CAAc,CAAEC,aAAcC,IAAhB,CAAd;AACD,CAV6C;;AAY9CC,oBAZ8C,CAYvB,SAAEC,QAAF;;;;AAIjB;AACJC,QAAQC,GAAR,CAAaF,QAAb;AACD,CAlB6C,CAG5C,MAAKG,KAAL,CAAa,CACXN,aAAc,MADH,CAAb,CAH4C,aAM7C,C;;AAcQ;AACqB,KAAKJ,KAD1B,CACCW,OADD,QACCA,OADD,CACUC,MADV,QACUA,MADV;;AAGP,GAAMC,sBAAuBD,OAAOE,gBAAP,CAAwBC,KAArD;;AAEA,GAAMC,gBAAiBH,qBAAqBI,GAArB,CAA0B,6BAAuB;AACtE,GAAMC,iBAAkBC,oBAAoBC,IAA5C;;AAEA,MAAO;AACLC,MAAOH,gBAAgBI,2BADlB;AAELC,MAAO,qBAAQL,gBAAgBM,qBAAxB,EAAgDC,MAAhD,EAFF;AAGLC,IAAK,qBAAQR,gBAAgBS,oBAAxB,EAA+CF,MAA/C,EAHA,CAAP;;AAKD,CARsB,CAAvB;;AAUAjB,QAAQC,GAAR,CAAa,KAAKC,KAAL,CAAWN,YAAxB;AACAI,QAAQC,GAAR,CAAaO,cAAb;;AAEA;AACE;AACE,8CAAM,UAAWL,QAAQd,IAAzB;AACE,gDAAY,MAAM,iBAAlB,EADF;;AAGE;AACE;AACE,OAAQmB,cADV;AAEE,KAAM,KAAKN,KAAL,CAAWN,YAFnB;AAGE,OAAQ,KAAKF,cAHf;AAIE,WAAY,IAJd;AAKE,aAAc,KAAKI,oBALrB,EADF,CAHF,CADF,CADF;;;;;;AAiBD,C,mCAjEiC,gBAAMsB,S,EAApC7B,qB,CAMG8B,Y,CAAe,CACpBC,OAAQ,oBAAUC,MADE,C;;;AA8DT;AACb,uBAAYnC,MAAZ,EAAsBG,qBAAtB,CADa,qG","file":"TranslaticiarumScreen.js","sourcesContent":["// @flow\n\nimport Card, { CardContent, CardHeader } from 'material-ui/Card'\nimport { withStyles } from 'material-ui/styles'\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport BigCalendar from 'react-big-calendar'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport ResponsiveContentArea from '../../urb-base-webapp/components/ResponsiveContentArea'\n\nBigCalendar.momentLocalizer( moment )\n\nconst styles = {\n  card: {\n    minWidth: 275,\n  },\n}\n\n// truncate \"Translaticiarum\";\n// insert into \"Translaticiarum\"(id, \"Translaticiarum_User_id\", \"Translaticiarum_Description\",\"Translaticiarum_Start\", \"Translaticiarum_Stop\") values(0dba9aae-e84f-484a-9dc8-1a2be761c0ea, 00000000-0000-0000-0000-000000000000, 'item', '2017-09-09 10:00-0700', '2017-09-09 11:30-0700');\n// select * from \"Translaticiarum\";\n\nclass TranslaticiarumScreen extends React.Component<\n  any,\n  {\n    calendarView: 'month' | 'week' | 'day' | 'agenda'\n  }\n> {\n  static contextTypes = {\n    router: PropTypes.object,\n  }\n\n  constructor( props: Object, context: Object ) {\n    super( props, context )\n\n    this.state = {\n      calendarView: 'week',\n    }\n  }\n\n  _handle_onView = view => {\n    this.setState({ calendarView: view })\n  }\n\n  _handle_onSelectSlot = ( slotInfo: {\n    start: Date,\n    end: Date,\n    slots: Array<Date>\n  }) => {\n    console.log( slotInfo )\n  }\n\n  render() {\n    const { classes, Viewer } = this.props\n\n    const translaticiarumEdges = Viewer.Translaticiarums.edges\n\n    const calendarEvents = translaticiarumEdges.map( translaticiarumEdge => {\n      const translaticiarum = translaticiarumEdge.node\n\n      return {\n        title: translaticiarum.Translaticiarum_Description,\n        start: moment( translaticiarum.Translaticiarum_Start ).toDate(),\n        end: moment( translaticiarum.Translaticiarum_Stop ).toDate(),\n      }\n    })\n\n    console.log( this.state.calendarView )\n    console.log( calendarEvents )\n\n    return (\n      <ResponsiveContentArea>\n        <Card className={classes.card}>\n          <CardHeader title=\"Translaticiarum\" />\n\n          <CardContent>\n            <BigCalendar\n              events={calendarEvents}\n              view={this.state.calendarView}\n              onView={this._handle_onView}\n              selectable={true}\n              onSelectSlot={this._handle_onSelectSlot}\n            />\n          </CardContent>\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles( styles )( TranslaticiarumScreen ),\n  graphql`\n    fragment TranslaticiarumScreen_Viewer on Viewer {\n      Translaticiarums(first: 2147483647)\n        @connection(key: \"TranslaticiarumScreen_Translaticiarums\") {\n        edges {\n          node {\n            id\n            Translaticiarum_Description\n            Translaticiarum_Start\n            Translaticiarum_Stop\n          }\n        }\n      }\n    }\n  `\n)\n"]}