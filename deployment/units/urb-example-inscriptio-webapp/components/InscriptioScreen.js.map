{"version":3,"sources":["../../../../units/urb-example-inscriptio-webapp/components/InscriptioScreen.jsx"],"names":["MapComponent","props","defaultZoom","center","markers","map","marker","index","position","styles","card","minWidth","minHeight","InscriptioScreen","context","isUnmounted","state","lat","lng","classes","Viewer","console","log","rbCtx","appData","googleMapURL","api","googleMapsJavascriptAPI","xxx","height","Component","contextTypes","object"],"mappings":";;AAEA,sC;AACA;AACA,qC;AACA,4B;AACA;AACA,sE;AACA;;AAEA,6F;;AAEA,GAAMA,cAAe;AACnB,mCAAc;AACZ,0DAAW,YAAaC,MAAMC,WAA9B,CAA2C,OAAQD,MAAME,MAAzD;AACGF,MAAMG,OAAN,CAAcC,GAAd,CAAkB,SAACC,MAAD,CAASC,KAAT,QAAmB,wDAAQ,IAAKA,KAAb,CAAoB,SAAUD,OAAOE,QAArC,EAAnB,EAAlB,CADH,CADY,GAAd,CADmB,CAArB;;;;;AAQA,GAAMC,QAAS;AACbC,KAAM;AACJC,SAAU,GADN;AAEJC,UAAW,GAFP,CADO,CAAf,C;;;;AAOMC,gB;;;;;AAKJ,0BAAYZ,KAAZ,CAA2Ba,OAA3B,CAA4C;AACpCb,KADoC,CAC7Ba,OAD6B;;;;;;;;;;;AAY5CC,WAZ4C,CAY9B,KAZ8B,CAG1C,MAAKC,KAAL,CAAa,CACXb,OAAQ,CACNc,IAAK,OADC,CAENC,IAAK,CAAC,OAFA,CADG,CAKXd,QAAS,EALE,CAAb,CAH0C,aAU3C,C;;AAIQ;AACqB,KAAKH,KAD1B,CACCkB,OADD,QACCA,OADD,CACUC,MADV,QACUA,MADV;AAEPC,QAAQC,GAAR,CAAY,KAAKR,OAAL,CAAaS,KAAb,CAAmBC,OAA/B;;AAEA,GAAMC;AACJ;AACA,KAAKX,OAAL,CAAaS,KAAb,CAAmBC,OAAnB,CAA2BE,GAA3B,CAA+BC,uBAFjC;;AAIAN,QAAQC,GAAR,CAAYG,YAAZ;;AAEA,GAAMrB,SAAU,EAAhB;;AAEA,GAAMwB,KAAM,IAAZ;;AAEA;AACE;AACE,8CAAM,UAAWT,QAAQT,IAAzB;AACE,gDAAY,MAAM,YAAlB,EADF;AAEE;AACE,8BAAC,YAAD;AACE,YAAa,EADf;AAEE,OAAQ,KAAKM,KAAL,CAAWb,MAFrB;AAGE,QAAQ,cAHV;AAIE,aAAcsB,YAJhB;AAKE,QAAS,KAAKT,KAAL,CAAWZ,OALtB;AAME,eAAgB,sDANlB;AAOE,iBAAkB,qCAAK,MAAO,CAAEyB,OAAQ,GAAV,CAAZ,EAPpB;AAQE,WAAY,qCAAK,MAAO,CAAEA,OAAQ,GAAV,CAAZ,EARd,EADF,CAFF,CADF,CADF;;;;;;AAmBD,C,8BApD4B,gBAAMC,S,EAA/BjB,gB,CACGkB,Y,CAAe,CACpBR,MAAO,oBAAUS,MADG,C;;;AAsDT;AACb,uBAAWvB,MAAX,EAAmBI,gBAAnB,CADa,gG","file":"InscriptioScreen.js","sourcesContent":["// @flow\n\nimport Card, { CardContent, CardHeader } from 'material-ui/Card'\nimport { withStyles } from 'material-ui/styles'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withGoogleMap, GoogleMap, Marker } from 'react-google-maps'\nimport withScriptjs from 'react-google-maps/lib/async/withScriptjs'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport ResponsiveContentArea from '../../urb-base-webapp/components/ResponsiveContentArea'\n\nconst MapComponent = withScriptjs(\n  withGoogleMap(props =>\n    <GoogleMap defaultZoom={props.defaultZoom} center={props.center}>\n      {props.markers.map((marker, index) => <Marker key={index} position={marker.position} />)}\n    </GoogleMap>,\n  ),\n)\n\nconst styles = {\n  card: {\n    minWidth: 275,\n    minHeight: 400,\n  },\n}\n\nclass InscriptioScreen extends React.Component<{ classes: Object, Viewer: Object }, Object> {\n  static contextTypes = {\n    rbCtx: PropTypes.object,\n  }\n\n  constructor(props: Object, context: Object) {\n    super(props, context)\n\n    this.state = {\n      center: {\n        lat: 34.0522,\n        lng: -118.243,\n      },\n      markers: [],\n    }\n  }\n\n  isUnmounted = false\n\n  render() {\n    const { classes, Viewer } = this.props\n    console.log(this.context.rbCtx.appData)\n\n    const googleMapURL =\n      'https://maps.googleapis.com/maps/api/js?v=3.28&libraries=places,geometry&key=' +\n      this.context.rbCtx.appData.api.googleMapsJavascriptAPI\n\n    console.log(googleMapURL)\n\n    const markers = []\n\n    const xxx = this\n\n    return (\n      <ResponsiveContentArea>\n        <Card className={classes.card}>\n          <CardHeader title=\"Inscriptio\" />\n          <CardContent>\n            <MapComponent\n              defaultZoom={16}\n              center={this.state.center}\n              content=\"Content here\"\n              googleMapURL={googleMapURL}\n              markers={this.state.markers}\n              loadingElement={<div>Loading...</div>}\n              containerElement={<div style={{ height: 400 }} />}\n              mapElement={<div style={{ height: 400 }} />}\n            />\n          </CardContent>\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles(styles)(InscriptioScreen),\n  graphql`\n    fragment InscriptioScreen_Viewer on Viewer {\n      Inscriptios(first: 2147483647) @connection(key: \"InscriptioScreen_Inscriptios\") {\n        edges {\n          node {\n            id\n            Inscriptio_LocationLat\n            Inscriptio_LocationLon\n          }\n        }\n      }\n    }\n  `,\n)\n"]}