{"version":3,"sources":["../../../../units/urb-example-inscriptio-webapp/components/InscriptioScreen.jsx"],"names":["MapComponent","props","defaultZoom","center","markers","map","marker","index","position","styles","card","minWidth","minHeight","InscriptioScreen","context","isUnmounted","state","lat","lng","classes","googleMapURL","rbCtx","appData","api","googleMapsJavascriptAPI","console","log","height","Component","contextTypes","object"],"mappings":";;AAEA,sC;AACA;AACA,qC;AACA,4B;AACA;AACA,sE;AACA;;AAEA,yE;AACA,6E;AACA,6F;;AAEA,GAAMA,cAAe;AACnB,mCAAc;AACZ,0DAAW,YAAaC,MAAMC,WAA9B,CAA2C,OAAQD,MAAME,MAAzD;AACGF,MAAMG,OAAN,CAAcC,GAAd,CAAkB,SAACC,MAAD,CAASC,KAAT;AACjB,uDAAQ,IAAKA,KAAb,CAAoB,SAAUD,OAAOE,QAArC,EADiB,GAAlB,CADH,CADY,GAAd,CADmB,CAArB;;;;;;AAUA,GAAMC,QAAS;AACbC,KAAM;AACJC,SAAU,GADN;AAEJC,UAAW,GAFP,CADO,CAAf,C;;;;AAOMC,gB;;;;;;;;AAQJ,0BAAYZ,KAAZ,CAA2Ba,OAA3B,CAA4C;AACpCb,KADoC,CAC7Ba,OAD6B;;;;;;;;;;;AAY5CC,WAZ4C,CAY9B,KAZ8B,CAG1C,MAAKC,KAAL,CAAa,CACXb,OAAQ,CACNc,IAAK,OADC,CAENC,IAAK,CAAC,OAFA,CADG,CAKXd,QAAS,EALE,CAAb,CAH0C,aAU3C,C;;AAIQ;AACCe,OADD,CACa,KAAKlB,KADlB,CACCkB,OADD;;AAGP,GAAMC;AACJ;AACA,KAAKN,OAAL,CAAaO,KAAb,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,uBAFjC;;AAIAC,QAAQC,GAAR,CAAYN,YAAZ;;AAEA;AACE;AACE,8CAAM,UAAWD,QAAQT,IAAzB;AACE,6DADF,CADF;;AAIE,wCAJF;AAKE,8CAAM,UAAWS,QAAQT,IAAzB;AACE,2DADF,CALF;;AAQE,wCARF;AASE,8CAAM,UAAWS,QAAQT,IAAzB;AACE,gDAAY,MAAM,YAAlB,EADF;AAEE;AACE,8BAAC,YAAD;AACE,YAAa,EADf;AAEE,OAAQ,KAAKM,KAAL,CAAWb,MAFrB;AAGE,QAAQ,cAHV;AAIE,aAAciB,YAJhB;AAKE,QAAS,KAAKJ,KAAL,CAAWZ,OALtB;AAME,eAAgB,sDANlB;AAOE,iBAAkB,qCAAK,MAAO,CAAEuB,OAAQ,GAAV,CAAZ,EAPpB;AAQE,WAAY,qCAAK,MAAO,CAAEA,OAAQ,GAAV,CAAZ,EARd,EADF,CAFF,CATF,CADF;;;;;;AA2BD,C,8BA1D4B,gBAAMC,S,EAA/Bf,gB,CAIGgB,Y,CAAe,CACpBR,MAAO,oBAAUS,MADG,C;;;AAyDT;AACb,uBAAWrB,MAAX,EAAmBI,gBAAnB,CADa,gG","file":"InscriptioScreen.js","sourcesContent":["// @flow\n\nimport Card, { CardContent, CardHeader } from 'material-ui/Card'\nimport { withStyles } from 'material-ui/styles'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withGoogleMap, GoogleMap, Marker } from 'react-google-maps'\nimport withScriptjs from 'react-google-maps/lib/async/withScriptjs'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport ImagesGallery from '../../urb-galleries-examples/ImagesGallery'\nimport ProductGallery from '../../urb-galleries-examples/ProductsGallery'\nimport ResponsiveContentArea from '../../urb-base-webapp/components/ResponsiveContentArea'\n\nconst MapComponent = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap defaultZoom={props.defaultZoom} center={props.center}>\n      {props.markers.map((marker, index) => (\n        <Marker key={index} position={marker.position} />\n      ))}\n    </GoogleMap>\n  ))\n)\n\nconst styles = {\n  card: {\n    minWidth: 275,\n    minHeight: 400,\n  },\n}\n\nclass InscriptioScreen extends React.Component<\n  { classes: Object, Viewer: Object },\n  Object\n> {\n  static contextTypes = {\n    rbCtx: PropTypes.object,\n  }\n\n  constructor(props: Object, context: Object) {\n    super(props, context)\n\n    this.state = {\n      center: {\n        lat: 34.0522,\n        lng: -118.243,\n      },\n      markers: [],\n    }\n  }\n\n  isUnmounted = false\n\n  render() {\n    const { classes } = this.props\n\n    const googleMapURL =\n      'https://maps.googleapis.com/maps/api/js?v=3.28&libraries=places,geometry&key=' +\n      this.context.rbCtx.appData.api.googleMapsJavascriptAPI\n\n    console.log(googleMapURL)\n\n    return (\n      <ResponsiveContentArea>\n        <Card className={classes.card}>\n          <ProductGallery />\n        </Card>\n        <br />\n        <Card className={classes.card}>\n          <ImagesGallery />\n        </Card>\n        <br />\n        <Card className={classes.card}>\n          <CardHeader title=\"Inscriptio\" />\n          <CardContent>\n            <MapComponent\n              defaultZoom={16}\n              center={this.state.center}\n              content=\"Content here\"\n              googleMapURL={googleMapURL}\n              markers={this.state.markers}\n              loadingElement={<div>Loading...</div>}\n              containerElement={<div style={{ height: 400 }} />}\n              mapElement={<div style={{ height: 400 }} />}\n            />\n          </CardContent>\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles(styles)(InscriptioScreen),\n  graphql`\n    fragment InscriptioScreen_Viewer on Viewer {\n      Inscriptios(first: 2147483647)\n        @connection(key: \"InscriptioScreen_Inscriptios\") {\n        edges {\n          node {\n            id\n            Inscriptio_LocationLat\n            Inscriptio_LocationLon\n          }\n        }\n      }\n    }\n  `\n)\n"]}