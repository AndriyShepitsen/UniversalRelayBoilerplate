{"version":3,"sources":["../../../../units/sv-house-webapp/components/HousesScreen.jsx"],"names":["styles","card","minWidth","minHeight","HousesScreen","props","classes","Viewer","Houses","edges","map","node","house","key","Mls","Street","Price","OfficeId","Component","contextTypes","rbCtx","object"],"mappings":";;AAEA,sC;AACA;AACA,qC;AACA,4B;AACA;;AAEA,6F;;AAEA,GAAMA,QAAS;AACbC,KAAM;AACJC,SAAU,GADN;AAEJC,UAAW,GAFP,CADO,CAAf,C;;;;AAOMC,Y;;;;;;;;AAQK;AACqB,KAAKC,KAD1B,CACCC,OADD,QACCA,OADD,CACUC,MADV,QACUA,MADV;;AAGP,GAAIC,QAASD,OAAOC,MAAP,CAAcC,KAAd,CAAoBC,GAApB,CAAwB,cAAc,IAAXC,KAAW,MAAXA,IAAW;AACjD,MAAOA,KAAP;AACD,CAFY,CAAb;;AAIA;AACE;AACE,8CAAM,UAAWL,QAAQL,IAAzB;AACE,gDAAY,MAAM,QAAlB,EADF;AAEE,wDAFF;AAGE;AACGO,OAAOE,GAAP,CAAW,SAACE,KAAD,CAAQC,GAAR,CAAgB;AAC1B;AACE,oCAAI,IAAKA,GAAT;AACE,8CAAQD,MAAME,GAAd,KADF;AAEE,8CAAQF,MAAMG,MAAd,CAFF;AAGE,8CAAQH,MAAMI,KAAd,CAHF;AAIE,8CAAQJ,MAAMK,QAAd,CAJF,CADF;;;AAQD,CATA,CADH,CAHF;;;AAgBE,qDAhBF,CADF,CADF;;;;AAsBD,C,0BArCwB,gBAAMC,S,EAA3Bd,Y,CAIGe,Y,CAAe,CACpBC,MAAO,oBAAUC,MADG,C;;;AAoCT;AACb,uBAAWrB,MAAX,EAAmBI,YAAnB,CADa,4F","file":"HousesScreen.js","sourcesContent":["// @flow\n\nimport Card, { CardContent, CardHeader } from 'material-ui/Card'\nimport { withStyles } from 'material-ui/styles'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport ResponsiveContentArea from '../../urb-base-webapp/components/ResponsiveContentArea'\n\nconst styles = {\n  card: {\n    minWidth: 275,\n    minHeight: 400,\n  },\n}\n\nclass HousesScreen extends React.Component<\n  { classes: Object, Viewer: Object },\n  Object\n> {\n  static contextTypes = {\n    rbCtx: PropTypes.object,\n  }\n\n  render() {\n    const { classes, Viewer } = this.props\n\n    let Houses = Viewer.Houses.edges.map(({ node }) => {\n      return node\n    })\n\n    return (\n      <ResponsiveContentArea>\n        <Card className={classes.card}>\n          <CardHeader title=\"Houses\" />\n          <h3>Office Houses</h3>\n          <ol>\n            {Houses.map((house, key) => {\n              return (\n                <li key={key}>\n                  <span> {house.Mls} </span>\n                  <span> {house.Street}</span>\n                  <span> {house.Price}</span>\n                  <span> {house.OfficeId}</span>\n                </li>\n              )\n            })}\n          </ol>\n\n          <CardContent />\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles(styles)(HousesScreen),\n  graphql`\n    fragment HousesScreen_Viewer on Viewer {\n      Houses(first: 5) @connection(key: \"HousesScreen_Houses\") {\n        edges {\n          node {\n            id\n            Mls\n            OfficeId\n            Street\n            Price\n          }\n        }\n      }\n    }\n  `\n)\n"]}