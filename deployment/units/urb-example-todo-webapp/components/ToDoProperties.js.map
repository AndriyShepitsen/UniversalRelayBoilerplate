{"version":3,"sources":["../../../../units/urb-example-todo-webapp/components/ToDoProperties.jsx"],"names":["styleSheet","container","display","flexWrap","formControl","margin","theme","spacing","unit","ToDo_Properties","props","context","ToDo_Text","state","handlerClose","handlerUpdate","open","_handle_Close","setState","event","target","value","_handle_OK","Component","propTypes","string","isRequired","bool","func"],"mappings":";;AAEA,0C;AACA,0C;AACA,yD;AACA,qC;AACA,4B;AACA;AACA,gD;;AAEA,GAAMA,YAAa,6BAAiB,sBAAU;AAC5CC,UAAW;AACTC,QAAS,MADA;AAETC,SAAU,MAFD,CADiC;;AAK5CC,YAAa;AACXC,OAAQC,MAAMC,OAAN,CAAcC,IADX,CAL+B,CAAV,EAAjB,CAAnB,C;;;;AAUMC,e;;;;;;;;;;;;AAYJ,yBAAYC,KAAZ,CAA2BC,OAA3B,CAA4C;AACpCD,KADoC,CAC7BC,OAD6B;;AAGlCC,SAHkC,CAGpB,MAAKF,KAHe,CAGlCE,SAHkC;;AAK1C,MAAKC,KAAL,CAAa;AACXD,mBADW,CAAb,CAL0C;;AAQ3C,C;;AAEqB;AACpB,KAAKF,KAAL,CAAWI,YAAX;AACD,C;;AAEkB;AACjB,KAAKJ,KAAL,CAAWK,aAAX,CAAyB,CAAEH,UAAW,KAAKC,KAAL,CAAWD,SAAxB,CAAzB;;AAEA,KAAKF,KAAL,CAAWI,YAAX;AACD,C;;AAEQ;AACCF,SADD,CACe,KAAKC,KADpB,CACCD,SADD;;AAGP;AACE;AACE,gDAAQ,KAAM,KAAKF,KAAL,CAAWM,IAAzB,CAA+B,eAAgB,KAAKC,aAApD;AACE,0GADF;AAEE;AACE;AACE,MAAM,OADR;AAEE,UAAW,IAFb;AAGE,MAAOL,SAHT;AAIE,SAAU,+BAAS,QAAKM,QAAL,CAAc,CAAEN,UAAWO,MAAMC,MAAN,CAAaC,KAA1B,CAAd,CAAT,EAJZ,iDADF,CAFF;;;AAUE;AACE,gDAAQ,QAAS,KAAKJ,aAAtB,0DADF;AAEE,gDAAQ,QAAS,KAAKK,UAAtB,CAAkC,MAAM,SAAxC,sDAFF,CAVF,CADF,CADF;;;;;;;AAqBD,C,6BAxD2B,gBAAMC,S,EAA9Bd,e,CACGe,S,CAAY,CACjBZ,UAAW,oBAAUa,MAAV,CAAiBC,UADX,CAEjBV,KAAM,oBAAUW,IAAV,CAAeD,UAFJ,CAGjBX,cAAe,oBAAUa,IAAV,CAAeF,UAHb,CAIjBZ,aAAc,oBAAUc,IAAV,CAAeF,UAJZ,C,uEAqBnBT,a,6FAIAK,U;;;AAiCa,uBAAWtB,UAAX,EAAuBS,eAAvB,C,oIArETT,U,2GAUAS,e","file":"ToDoProperties.js","sourcesContent":["// @flow\n\nimport Button from 'material-ui/Button'\nimport Dialog, { DialogActions, DialogContent, DialogTitle } from 'material-ui/Dialog'\nimport FormControl from 'material-ui/Form/FormControl'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withStyles, createStyleSheet } from 'material-ui/styles'\nimport TextField from 'material-ui/TextField'\n\nconst styleSheet = createStyleSheet(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n  },\n}))\n\nclass ToDo_Properties extends React.Component {\n  static propTypes = {\n    ToDo_Text: PropTypes.string.isRequired,\n    open: PropTypes.bool.isRequired,\n    handlerUpdate: PropTypes.func.isRequired,\n    handlerClose: PropTypes.func.isRequired,\n  }\n\n  state: {\n    ToDo_Text: string,\n  }\n\n  constructor(props: Object, context: Object) {\n    super(props, context)\n\n    const { ToDo_Text } = this.props\n\n    this.state = {\n      ToDo_Text,\n    }\n  }\n\n  _handle_Close = () => {\n    this.props.handlerClose()\n  }\n\n  _handle_OK = () => {\n    this.props.handlerUpdate({ ToDo_Text: this.state.ToDo_Text })\n\n    this.props.handlerClose()\n  }\n\n  render() {\n    const { ToDo_Text } = this.state\n\n    return (\n      <div>\n        <Dialog open={this.props.open} onRequestClose={this._handle_Close}>\n          <DialogTitle>ToDo</DialogTitle>\n          <DialogContent>\n            <TextField\n              label=\"To Do\"\n              fullWidth={true}\n              value={ToDo_Text}\n              onChange={event => this.setState({ ToDo_Text: event.target.value })}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this._handle_Close}>Cancel</Button>\n            <Button onClick={this._handle_OK} color=\"primary\">\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styleSheet)(ToDo_Properties)\n"]}