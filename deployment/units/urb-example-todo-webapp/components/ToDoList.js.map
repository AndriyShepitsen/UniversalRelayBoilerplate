{"version":3,"sources":["../../../../units/urb-example-todo-webapp/components/ToDoList.jsx"],"names":["styles","root","width","maxWidth","background","theme","palette","paper","ToDoList","_handle_onClick_MarkAll","event","checked","props","relay","Viewer","variables","context","ToDo_Complete","commit","environment","ToDos","status","_handle_onChange","tabsValue","url","router","push","ToDo_TotalCount","ToDo_CompletedCount","renderTabs","edges","map","node","id","Component","contextTypes","object"],"mappings":";;AAEA,8C;AACA;AACA,sC;AACA;AACA,qC;AACA,4B;AACA;AACA,sC;;AAEA,gH;;AAEA,oC;;AAEA,GAAMA,QAAS,QAATA,OAAS,cAAU;AACvBC,KAAM;AACJC,MAAO,MADH;AAEJC,SAAU,GAFN;AAGJC,WAAYC,MAAMC,OAAN,CAAcF,UAAd,CAAyBG,KAHjC,CADiB,CAAV,EAAf,C;;;;AAQMC,Q;;;;;;;;;;;;AAYJC,uB,CAA0B,SAACC,KAAD,CAAQC,OAAR,CAAoB;AAClB,MAAKC,KADa,CACpCC,KADoC,aACpCA,KADoC,CAC7BC,MAD6B,aAC7BA,MAD6B;AAEpCC,SAFoC,CAEtB,MAAKC,OAAL,CAAaH,KAFS,CAEpCE,SAFoC;AAG5C,GAAME,eAAgBN,OAAtB;;AAEA,wCAA8BO,MAA9B;AACEL,MAAMM,WADR;AAEEL,MAFF;AAGEA,OAAOM,KAHT;AAIEH,aAJF;AAKEF,UAAUM,MALZ;;AAOD,C;;AAEDC,gB,CAAmB,SAACZ,KAAD,CAAQa,SAAR,CAAsB;AACvC,GAAMC;AACJD,YAAc,CAAd;AACI,iBADJ;AAEIA,YAAc,CAAd,CAAkB,cAAlB,CAAmC,OAHzC;AAIA,MAAKP,OAAL,CAAaS,MAAb,CAAoBC,IAApB,CAAyBF,GAAzB;AACD,C;;AAEY;AACX,GAAMH,QAAS,KAAKL,OAAL,CAAaH,KAAb,CAAmBE,SAAnB,CAA6BM,MAA5C;AACA,GAAME,WAAYF,SAAW,QAAX,CAAsB,CAAtB,CAA0BA,SAAW,WAAX,CAAyB,CAAzB,CAA6B,CAAzE;;AAEA;AACE,8CAAM,MAAOE,SAAb,CAAwB,SAAU,KAAKD,gBAAvC;AACE,yCAAK,MAAM,KAAX,EADF;AAEE,yCAAK,MAAM,QAAX,EAFF;AAGE,yCAAK,MAAM,WAAX,EAHF,CADF;;;AAOD,C;;AAEQ;AACCR,MADD,CACY,KAAKF,KADjB,CACCE,MADD;AAECM,KAFD,CAEiDN,MAFjD,CAECM,KAFD,CAEQO,eAFR,CAEiDb,MAFjD,CAEQa,eAFR,CAEyBC,mBAFzB,CAEiDd,MAFjD,CAEyBc,mBAFzB;;AAIP,GAAI,CAACD,eAAL,CAAsB;AACpB,MAAO,KAAP;AACD;;AAED;AACE;AACG,KAAKE,UAAL,EADH;AAEE,+CAAW,QAAX;AACE;AACE;AACE;AACE,QAASF,kBAAoBC,mBAD/B;AAEE,SAAU,KAAKnB,uBAFjB,EAFJ;;;AAOE,MAAM,sBAPR,EADF,CAFF;;;AAaE;AACGW,MAAMU,KAAN,CAAYC,GAAZ,CAAgB,mBAAGC,KAAH,OAAGA,IAAH;AACf,kDAAU,IAAKA,KAAKC,EAApB,CAAwB,OAAQnB,MAAhC,CAAwC,KAAMkB,IAA9C,EADe,GAAhB,CADH,CAbF,CADF;;;;;AAqBD,C,sBA5EoB,gBAAME,S,EAAvB1B,Q,CAOG2B,Y,CAAe,CACpBtB,MAAO,oBAAUuB,MADG,CAEpBX,OAAQ,oBAAUW,MAFE,C;;;AAwET;AACb,uBAAWpC,MAAX,EAAmBQ,QAAnB,CADa,wF","file":"ToDoList.js","sourcesContent":["// @flow\n\nimport Checkbox from 'material-ui/Checkbox'\nimport { FormGroup, FormControlLabel } from 'material-ui/Form'\nimport List from 'material-ui/List'\nimport { withStyles } from 'material-ui/styles'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\nimport Tabs, { Tab } from 'material-ui/Tabs'\n\nimport ToDoListUpdateMarkAllMutation from '../../urb-example-todo-client/relay/ToDoListUpdateMarkAllMutation'\n\nimport ToDoItem from './ToDoItem'\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    background: theme.palette.background.paper,\n  },\n})\n\nclass ToDoList extends React.Component<\n  {\n    Viewer: Object,\n    relay: Object\n  },\n  null\n> {\n  static contextTypes = {\n    relay: PropTypes.object,\n    router: PropTypes.object,\n  }\n\n  _handle_onClick_MarkAll = (event, checked) => {\n    const { relay, Viewer } = this.props\n    const { variables } = this.context.relay\n    const ToDo_Complete = checked\n\n    ToDoListUpdateMarkAllMutation.commit(\n      relay.environment,\n      Viewer,\n      Viewer.ToDos,\n      ToDo_Complete,\n      variables.status\n    )\n  }\n\n  _handle_onChange = (event, tabsValue) => {\n    const url =\n      tabsValue === 2\n        ? '/todo/completed'\n        : tabsValue === 1 ? '/todo/active' : '/todo'\n    this.context.router.push(url)\n  }\n\n  renderTabs() {\n    const status = this.context.relay.variables.status\n    const tabsValue = status === 'active' ? 1 : status === 'completed' ? 2 : 0\n\n    return (\n      <Tabs value={tabsValue} onChange={this._handle_onChange}>\n        <Tab label=\"All\" />\n        <Tab label=\"Active\" />\n        <Tab label=\"Completed\" />\n      </Tabs>\n    )\n  }\n\n  render() {\n    const { Viewer } = this.props\n    const { ToDos, ToDo_TotalCount, ToDo_CompletedCount } = Viewer\n\n    if (!ToDo_TotalCount) {\n      return null\n    }\n\n    return (\n      <div>\n        {this.renderTabs()}\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={ToDo_TotalCount === ToDo_CompletedCount}\n                onChange={this._handle_onClick_MarkAll}\n              />\n            }\n            label=\"Mark all as complete\"\n          />\n        </FormGroup>\n        <List>\n          {ToDos.edges.map(({ node }) => (\n            <ToDoItem key={node.id} Viewer={Viewer} ToDo={node} />\n          ))}\n        </List>\n      </div>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles(styles)(ToDoList),\n  graphql`\n    fragment ToDoList_Viewer on Viewer {\n      ToDos(status: $status, first: 2147483647)\n        @connection(key: \"ToDoList_ToDos\") {\n        edges {\n          node {\n            id\n            ToDo_Complete\n            ...ToDoItem_ToDo\n          }\n        }\n      }\n      id\n      ToDo_TotalCount\n      ToDo_CompletedCount\n      ...ToDoItem_Viewer\n    }\n  `\n)\n"]}