{"version":3,"sources":["../../../../units/urb-example-todo-webapp/components/ToDoList.jsx"],"names":["styleSheet","root","width","maxWidth","background","theme","palette","paper","contextTypes","relay","shape","variables","status","string","isRequired","router","object","ToDoList","_handle_onClick_MarkAll","_handle_onChange","event","checked","props","Viewer","context","ToDo_Complete","commit","environment","ToDos","index","url","push","ToDo_TotalCount","ToDo_CompletedCount","renderTabs","edges","map","node","id","Component","propTypes"],"mappings":";;AAEA,8C;AACA;AACA,sC;AACA;AACA,qC;AACA,4B;AACA;AACA,sC;;AAEA,gH;AACA,oC;;AAEA,GAAMA,YAAa,6BAAiB,sBAAU;AAC5CC,KAAM;AACJC,MAAO,MADH;AAEJC,SAAU,GAFN;AAGJC,WAAYC,MAAMC,OAAN,CAAcF,UAAd,CAAyBG,KAHjC,CADsC,CAAV,EAAjB,CAAnB;;;;AAQA,GAAMC,cAAe;AACnBC,MAAO,oBAAUC,KAAV,CAAgB;AACrBC,UAAW,oBAAUD,KAAV,CAAgB;AACzBE,OAAQ,oBAAUC,MAAV,CAAiBC,UADA,CAAhB;AAERA,UAHkB,CAAhB;AAIJA,UALgB;AAMnBC,OAAQ,oBAAUC,MAAV,CAAiBF,UANN,CAArB,C;;;AASMG,Q;;;;;;AAMJC,uB;;;;;;;;;;;;;;AAcAC,gB,qSAd2BC,K,CAAOC,O,CAAY,YAClB,KAAKC,KADa,CACpCb,KADoC,QACpCA,KADoC,CAC7Bc,MAD6B,QAC7BA,MAD6B,IAEpCZ,UAFoC,CAEtB,KAAKa,OAAL,CAAaf,KAFS,CAEpCE,SAFoC,CAG5C,GAAMc,eAAgBJ,OAAtB,CAEA,wCAA8BK,MAA9B,CACEjB,MAAMkB,WADR,CAEEJ,MAFF,CAGEA,OAAOK,KAHT,CAIEH,aAJF,CAKEd,UAAUC,MALZ,EAOD,C,sGAEmBQ,K,CAAOS,K,CAAU;AACnC,GAAMC,KAAMD,QAAU,CAAV,CAAc,iBAAd,CAAkCA,QAAU,CAAV,CAAc,cAAd,CAA+B,OAA7E;AACA,KAAKL,OAAL,CAAaT,MAAb,CAAoBgB,IAApB,CAAyBD,GAAzB;AACD,C;;AAEY;AACX,GAAMlB,QAAS,KAAKY,OAAL,CAAaf,KAAb,CAAmBE,SAAnB,CAA6BC,MAA5C;AACA,GAAMiB,OAAQjB,SAAW,QAAX,CAAsB,CAAtB,CAA0BA,SAAW,WAAX,CAAyB,CAAzB,CAA6B,CAArE;;AAEA;AACE,8CAAM,MAAOiB,KAAb,CAAoB,SAAU,KAAKV,gBAAnC;AACE,yCAAK,MAAM,KAAX,iDADF;AAEE,yCAAK,MAAM,QAAX,iDAFF;AAGE,yCAAK,MAAM,WAAX,iDAHF,CADF;;;AAOD,C;;AAEQ;AACCI,MADD,CACY,KAAKD,KADjB,CACCC,MADD;AAECK,KAFD,CAEiDL,MAFjD,CAECK,KAFD,CAEQI,eAFR,CAEiDT,MAFjD,CAEQS,eAFR,CAEyBC,mBAFzB,CAEiDV,MAFjD,CAEyBU,mBAFzB;;AAIP,GAAI,CAACD,eAAL,CAAsB;AACpB,MAAO,KAAP;AACD;;AAED;AACE;AACG,KAAKE,UAAL,EADH;AAEE,+CAAW,QAAX;AACE;AACE;AACE;AACE,QAASF,kBAAoBC,mBAD/B;AAEE,SAAU,KAAKf,uBAFjB,iDAFJ;;;AAOE,MAAM,sBAPR,iDADF,CAFF;;;AAaE;AACGU,MAAMO,KAAN,CAAYC,GAAZ,CAAgB,mBAAGC,KAAH,OAAGA,IAAH,OAAc,mDAAU,IAAKA,KAAKC,EAApB,CAAwB,OAAQf,MAAhC,CAAwC,KAAMc,IAA9C,iDAAd,EAAhB,CADH,CAbF,CADF;;;;AAmBD,C,sBAjEoB,gBAAME,S,EAAvBtB,Q,CACGuB,S,CAAY,CACjBjB,OAAQ,oBAAUP,MAAV,CAAiBF,UADR,CAEjBL,MAAO,oBAAUO,MAAV,CAAiBF,UAFP,C;;;AAmErBG,SAAST,YAAT,CAAwBA,YAAxB,C;;AAEe;AACb,uBAAWR,UAAX,EAAuBiB,QAAvB,CADa,wF,qIAvFTjB,U,qGAQAQ,Y,uGASAS,Q","file":"ToDoList.js","sourcesContent":["// @flow\n\nimport Checkbox from 'material-ui/Checkbox'\nimport { FormGroup, FormControlLabel } from 'material-ui/Form'\nimport List from 'material-ui/List'\nimport { withStyles, createStyleSheet } from 'material-ui/styles'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\nimport Tabs, { Tab } from 'material-ui/Tabs'\n\nimport ToDoListUpdateMarkAllMutation from '../../urb-example-todo-client/relay/ToDoListUpdateMarkAllMutation'\nimport ToDoItem from './ToDoItem'\n\nconst styleSheet = createStyleSheet(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    background: theme.palette.background.paper,\n  },\n}))\n\nconst contextTypes = {\n  relay: PropTypes.shape({\n    variables: PropTypes.shape({\n      status: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  router: PropTypes.object.isRequired,\n}\n\nclass ToDoList extends React.Component {\n  static propTypes = {\n    Viewer: PropTypes.object.isRequired,\n    relay: PropTypes.object.isRequired,\n  }\n\n  _handle_onClick_MarkAll = (event, checked) => {\n    const { relay, Viewer } = this.props\n    const { variables } = this.context.relay\n    const ToDo_Complete = checked\n\n    ToDoListUpdateMarkAllMutation.commit(\n      relay.environment,\n      Viewer,\n      Viewer.ToDos,\n      ToDo_Complete,\n      variables.status,\n    )\n  }\n\n  _handle_onChange = (event, index) => {\n    const url = index === 2 ? '/todo/completed' : index === 1 ? '/todo/active' : '/todo'\n    this.context.router.push(url)\n  }\n\n  renderTabs() {\n    const status = this.context.relay.variables.status\n    const index = status === 'active' ? 1 : status === 'completed' ? 2 : 0\n\n    return (\n      <Tabs index={index} onChange={this._handle_onChange}>\n        <Tab label=\"All\" />\n        <Tab label=\"Active\" />\n        <Tab label=\"Completed\" />\n      </Tabs>\n    )\n  }\n\n  render() {\n    const { Viewer } = this.props\n    const { ToDos, ToDo_TotalCount, ToDo_CompletedCount } = Viewer\n\n    if (!ToDo_TotalCount) {\n      return null\n    }\n\n    return (\n      <div>\n        {this.renderTabs()}\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={ToDo_TotalCount === ToDo_CompletedCount}\n                onChange={this._handle_onClick_MarkAll}\n              />\n            }\n            label=\"Mark all as complete\"\n          />\n        </FormGroup>\n        <List>\n          {ToDos.edges.map(({ node }) => <ToDoItem key={node.id} Viewer={Viewer} ToDo={node} />)}\n        </List>\n      </div>\n    )\n  }\n}\n\nToDoList.contextTypes = contextTypes\n\nexport default createFragmentContainer(\n  withStyles(styleSheet)(ToDoList),\n  graphql`\n    fragment ToDoList_Viewer on Viewer {\n      ToDos(status: $status, first: 2147483647) @connection(key: \"ToDoList_ToDos\") {\n        edges {\n          node {\n            id\n            ToDo_Complete\n            ...ToDoItem_ToDo\n          }\n        }\n      }\n      id\n      ToDo_TotalCount\n      ToDo_CompletedCount\n      ...ToDoItem_Viewer\n    }\n  `,\n)\n"]}