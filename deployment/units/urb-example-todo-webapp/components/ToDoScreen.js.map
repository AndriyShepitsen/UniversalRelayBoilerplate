{"version":3,"sources":["../../../../units/urb-example-todo-webapp/components/ToDoScreen.jsx"],"names":["styles","card","minWidth","ToDoScreen","props","context","_handle_onKeyDown_AddToDo","e","keyCode","relay","Viewer","commit","environment","state","ToDo_Text_New","setState","_handle_OnChange","event","target","value","classes","children","marginLeft","marginRight","Component"],"mappings":";;AAEA,sC;AACA;AACA,4B;AACA;AACA,gD;;AAEA,6F;AACA,oF;;AAEA,GAAMA,QAAS,QAATA,OAAS,cAAU;AACvBC,KAAM;AACJC,SAAU,GADN,CADiB,CAAV,EAAf,C;;;;AAMMC,U;;;;;;;;;;;AAWJ,oBAAaC,KAAb,CAAoBC,OAApB,CAA8B;AACrBD,KADqB,CACdC,OADc;;;;;;;AAQ9BC,yBAR8B,CAQF,WAAK;AAC/B,GAAKC,EAAEC,OAAF,GAAc,EAAnB,CAAwB;AACI,MAAKJ,KADT,CACdK,MADc,aACdA,KADc,CACPC,OADO,aACPA,MADO;;AAGtB,0BAAgBC,MAAhB;AACEF,OAAMG,WADR;AAEEF,OAFF;AAGE,MAAKG,KAAL,CAAWC,aAHb;;;AAMA,MAAKC,QAAL,CAAc;AACZD,cAAe,EADH,CAAd;;AAGD;AACF,CAtB6B;;AAwB9BE,gBAxB8B,CAwBX,eAAS;AAC1B,MAAKD,QAAL,CAAc;AACZD,cAAeG,MAAMC,MAAN,CAAaC,KADhB,CAAd;;AAGD,CA5B6B,CAG5B,MAAKN,KAAL,CAAa,CACXC,cAAe,EADJ,CAAb,CAH4B,aAM7B,C;;AAwBQ;AACCM,OADD,CACa,KAAKhB,KADlB,CACCgB,OADD;;AAGP;AACE;AACE,8CAAM,UAAWA,QAAQnB,IAAzB;AACE,gDAAY,MAAM,QAAlB,CAA2B,UAAU,yBAArC,EADF;AAEG,KAAKG,KAAL,CAAWiB,QAFd;AAGE,qCAAK,MAAO,CAAEC,WAAY,CAAd,CAAiBC,YAAa,CAA9B,CAAZ,EAHF;AAIE;AACE,MAAM,wBADR;AAEE,MAAO,KAAKV,KAAL,CAAWC,aAFpB;AAGE,UAAW,IAHb;AAIE,UAAW,KAAKR,yBAJlB;AAKE,SAAU,KAAKU,gBALjB,EAJF,CADF,CADF;;;;;AAgBD,C,wBA5DsB,gBAAMQ,S;;;AA+DhB;AACb,uBAAYxB,MAAZ,EAAsBG,UAAtB,CADa,0F","file":"ToDoScreen.js","sourcesContent":["// @flow\n\nimport Card, { CardHeader } from 'material-ui/Card'\nimport { withStyles } from 'material-ui/styles'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\nimport TextField from 'material-ui/TextField'\n\nimport ResponsiveContentArea from '../../urb-base-webapp/components/ResponsiveContentArea'\nimport ToDoAddMutation from '../../urb-example-todo-client/relay/ToDoAddMutation'\n\nconst styles = theme => ({\n  card: {\n    minWidth: 275,\n  },\n})\n\nclass ToDoScreen extends React.Component<\n  {\n    classes: Object,\n    Viewer: {},\n    children: Object,\n    relay: Object\n  },\n  {\n    ToDo_Text_New: string\n  }\n> {\n  constructor( props, context ) {\n    super( props, context )\n\n    this.state = {\n      ToDo_Text_New: '',\n    }\n  }\n\n  _handle_onKeyDown_AddToDo = e => {\n    if ( e.keyCode === 13 ) {\n      const { relay, Viewer } = this.props\n\n      ToDoAddMutation.commit(\n        relay.environment,\n        Viewer,\n        this.state.ToDo_Text_New\n      )\n\n      this.setState({\n        ToDo_Text_New: '',\n      })\n    }\n  }\n\n  _handle_OnChange = event => {\n    this.setState({\n      ToDo_Text_New: event.target.value,\n    })\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <ResponsiveContentArea>\n        <Card className={classes.card}>\n          <CardHeader title=\"TO DOs\" subheader=\"List of TO DOs for user\" />\n          {this.props.children}\n          <div style={{ marginLeft: 4, marginRight: 4 }} />\n          <TextField\n            label=\"What needs to be done?\"\n            value={this.state.ToDo_Text_New}\n            fullWidth={true}\n            onKeyDown={this._handle_onKeyDown_AddToDo}\n            onChange={this._handle_OnChange}\n          />\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles( styles )( ToDoScreen ),\n  graphql`\n    fragment ToDoScreen_Viewer on Viewer {\n      id\n    }\n  `\n)\n"]}