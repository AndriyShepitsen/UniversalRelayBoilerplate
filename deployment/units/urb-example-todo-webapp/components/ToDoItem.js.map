{"version":3,"sources":["../../../../units/urb-example-todo-webapp/components/ToDoItem.jsx"],"names":["ToDoItem","props","context","_handle_onClickCheckbox","_handle_handlerUpdate_Properties","_handle_handlerClose_Properties","handleClickListItem","_handle_Menu_onClick_Edit","_handle_Menu_onClick_Delete","handleRequestClose","state","anchorEl","undefined","menuIsOpen","propertiesIsOpen","event","ToDo_Complete","relay","Viewer","ToDo","commit","environment","ToDo_properties","ToDo_Text","setState","currentTarget","Component","propTypes","object","isRequired"],"mappings":"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","file":"ToDoItem.js","sourcesContent":["// @flow\n\nimport Checkbox from 'material-ui/Checkbox'\nimport IconButton from 'material-ui/IconButton'\nimport { ListItem, ListItemSecondaryAction, ListItemText } from 'material-ui/List'\nimport Menu, { MenuItem } from 'material-ui/Menu'\nimport { MoreVert } from 'material-ui-icons'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport ToDoUpdateStatusMutation from '../../urb-example-todo-client/relay/ToDoUpdateStatusMutation'\nimport ToDoDeleteMutation from '../../urb-example-todo-client/relay/ToDoDeleteMutation'\nimport ToDoUpdateRenameMutation from '../../urb-example-todo-client/relay/ToDoUpdateRenameMutation'\nimport ToDoProperties from './ToDoProperties'\n\nclass ToDoItem extends React.Component {\n  static propTypes = {\n    Viewer: PropTypes.object.isRequired,\n    ToDo: PropTypes.object.isRequired,\n    relay: PropTypes.object.isRequired,\n  }\n\n  state: {\n    anchorEl: ?Object,\n    menuIsOpen: boolean,\n    propertiesIsOpen: boolean,\n  }\n\n  constructor(props: Object, context: Object) {\n    super(props, context)\n\n    this.state = {\n      anchorEl: undefined,\n      menuIsOpen: false,\n      propertiesIsOpen: false,\n    }\n  }\n\n  _handle_onClickCheckbox = (event, ToDo_Complete) => {\n    const { relay, Viewer, ToDo } = this.props\n\n    ToDoUpdateStatusMutation.commit(relay.environment, Viewer, ToDo, ToDo_Complete)\n  }\n\n  _handle_handlerUpdate_Properties = ToDo_properties => {\n    const { relay, ToDo } = this.props\n\n    ToDoUpdateRenameMutation.commit(relay.environment, ToDo, ToDo_properties.ToDo_Text)\n  }\n\n  _handle_handlerClose_Properties = () => {\n    this.setState({ propertiesIsOpen: false })\n  }\n\n  handleClickListItem = event => {\n    this.setState({ menuIsOpen: true, anchorEl: event.currentTarget })\n  }\n\n  _handle_Menu_onClick_Edit = event => {\n    this.setState({ menuIsOpen: false, propertiesIsOpen: true })\n  }\n\n  _handle_Menu_onClick_Delete = event => {\n    this.setState({ menuIsOpen: false })\n\n    const { relay, Viewer, ToDo } = this.props\n\n    ToDoDeleteMutation.commit(relay.environment, Viewer, ToDo)\n  }\n\n  handleRequestClose = () => {\n    this.setState({ menuIsOpen: false })\n  }\n\n  render() {\n    const { ToDo_Complete, ToDo_Text } = this.props.ToDo\n\n    return (\n      <div>\n        <ListItem\n          button\n          aria-haspopup=\"true\"\n          aria-controls=\"lock-menu\"\n          onClick={event => this._handle_onClickCheckbox(event, !ToDo_Complete)}\n        >\n          <Checkbox checked={ToDo_Complete} />\n          <ListItemText primary={ToDo_Text} />\n          <ListItemSecondaryAction>\n            <IconButton onClick={this.handleClickListItem}>\n              <MoreVert />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Menu\n          id=\"lock-menu\"\n          anchorEl={this.state.anchorEl}\n          open={this.state.menuIsOpen}\n          onRequestClose={this.handleRequestClose}\n        >\n          <MenuItem key=\"edit\" onClick={event => this._handle_Menu_onClick_Edit(event)}>\n            Edit\n          </MenuItem>\n          <MenuItem key=\"delete\" onClick={event => this._handle_Menu_onClick_Delete(event)}>\n            Delete\n          </MenuItem>\n        </Menu>\n        <ToDoProperties\n          ToDo_Text={ToDo_Text}\n          handlerUpdate={this._handle_handlerUpdate_Properties}\n          handlerClose={this._handle_handlerClose_Properties}\n          open={this.state.propertiesIsOpen}\n        />\n      </div>\n    )\n  }\n}\n\nexport default createFragmentContainer(ToDoItem, {\n  Viewer: graphql`\n    fragment ToDoItem_Viewer on Viewer {\n      id\n    }\n  `,\n  ToDo: graphql`\n    fragment ToDoItem_ToDo on ToDo {\n      id\n      ToDo_Complete\n      ToDo_Text\n    }\n  `,\n})\n"]}