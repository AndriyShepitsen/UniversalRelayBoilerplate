{"version":3,"sources":["../../../../units/urb-example-todo-webapp/components/ToDoItem.jsx"],"names":["ToDoItem","props","context","_handle_onClickCheckbox","event","ToDo_Complete","relay","Viewer","ToDo","commit","environment","_handle_Update_Properties","ToDo_properties","ToDo_Text","_handle_Close_Properties","setState","propertiesIsOpen","handleClickListItem","menuIsOpen","anchorEl","currentTarget","_handle_Menu_onClick_Edit","_handle_Menu_onClick_Delete","handleRequestClose","state","undefined","Component"],"mappings":"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","file":"ToDoItem.js","sourcesContent":["// @flow\n\nimport Checkbox from 'material-ui/Checkbox'\nimport IconButton from 'material-ui/IconButton'\nimport {\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n} from 'material-ui/List'\nimport Menu, { MenuItem } from 'material-ui/Menu'\nimport { MoreVert } from 'material-ui-icons'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport ToDoUpdateStatusMutation from '../../urb-example-todo-client/relay/ToDoUpdateStatusMutation'\nimport ToDoDeleteMutation from '../../urb-example-todo-client/relay/ToDoDeleteMutation'\nimport ToDoUpdateRenameMutation from '../../urb-example-todo-client/relay/ToDoUpdateRenameMutation'\n\nimport ToDoProperties from './ToDoProperties'\n\nclass ToDoItem extends React.Component<\n  {\n    Viewer: PropTypes.object.isRequired,\n    ToDo: PropTypes.object.isRequired,\n    relay: PropTypes.object.isRequired\n  },\n  {\n    anchorEl: ?Object,\n    menuIsOpen: boolean,\n    propertiesIsOpen: boolean\n  }\n> {\n  constructor( props: Object, context: Object ) {\n    super( props, context )\n\n    this.state = {\n      anchorEl: undefined,\n      menuIsOpen: false,\n      propertiesIsOpen: false,\n    }\n  }\n\n  _handle_onClickCheckbox = ( event, ToDo_Complete ) => {\n    const { relay, Viewer, ToDo } = this.props\n\n    ToDoUpdateStatusMutation.commit(\n      relay.environment,\n      Viewer,\n      ToDo,\n      ToDo_Complete\n    )\n  }\n\n  _handle_Update_Properties = ToDo_properties => {\n    const { relay, ToDo } = this.props\n\n    ToDoUpdateRenameMutation.commit(\n      relay.environment,\n      ToDo,\n      ToDo_properties.ToDo_Text\n    )\n  }\n\n  _handle_Close_Properties = () => {\n    this.setState({ propertiesIsOpen: false })\n  }\n\n  handleClickListItem = event => {\n    this.setState({ menuIsOpen: true, anchorEl: event.currentTarget })\n  }\n\n  _handle_Menu_onClick_Edit = event => {\n    this.setState({ menuIsOpen: false, propertiesIsOpen: true })\n  }\n\n  _handle_Menu_onClick_Delete = event => {\n    this.setState({ menuIsOpen: false })\n\n    const { relay, Viewer, ToDo } = this.props\n\n    ToDoDeleteMutation.commit( relay.environment, Viewer, ToDo )\n  }\n\n  handleRequestClose = () => {\n    this.setState({ menuIsOpen: false })\n  }\n\n  render() {\n    const { ToDo_Complete, ToDo_Text } = this.props.ToDo\n\n    return (\n      <div>\n        <ListItem\n          button\n          aria-haspopup=\"true\"\n          aria-controls=\"lock-menu\"\n          onClick={event => this._handle_onClickCheckbox( event, !ToDo_Complete )}\n        >\n          <Checkbox checked={ToDo_Complete} />\n          <ListItemText primary={ToDo_Text} />\n          <ListItemSecondaryAction>\n            <IconButton onClick={this.handleClickListItem}>\n              <MoreVert />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Menu\n          id=\"lock-menu\"\n          anchorEl={this.state.anchorEl}\n          open={this.state.menuIsOpen}\n          onRequestClose={this.handleRequestClose}\n        >\n          <MenuItem\n            key=\"edit\"\n            onClick={event => this._handle_Menu_onClick_Edit( event )}\n          >\n            Edit\n          </MenuItem>\n          <MenuItem\n            key=\"delete\"\n            onClick={event => this._handle_Menu_onClick_Delete( event )}\n          >\n            Delete\n          </MenuItem>\n        </Menu>\n        <ToDoProperties\n          ToDo_Text={ToDo_Text}\n          handlerUpdate={this._handle_Update_Properties}\n          handlerClose={this._handle_Close_Properties}\n          open={this.state.propertiesIsOpen}\n        />\n      </div>\n    )\n  }\n}\n\nexport default createFragmentContainer( ToDoItem, {\n  Viewer: graphql`\n    fragment ToDoItem_Viewer on Viewer {\n      id\n    }\n  `,\n  ToDo: graphql`\n    fragment ToDoItem_ToDo on ToDo {\n      id\n      ToDo_Complete\n      ToDo_Text\n    }\n  `,\n})\n"]}