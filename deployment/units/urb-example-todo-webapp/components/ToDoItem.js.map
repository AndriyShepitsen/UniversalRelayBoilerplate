{"version":3,"sources":["../../../../units/urb-example-todo-webapp/components/ToDoItem.jsx"],"names":["ToDoItem","props","context","_handle_onClickCheckbox","event","ToDo_Complete","relay","Viewer","ToDo","commit","environment","_handle_Update_Properties","ToDo_properties","ToDo_Text","_handle_Close_Properties","setState","propertiesIsOpen","handleClickListItem","menuIsOpen","anchorEl","currentTarget","_handle_Menu_onClick_Edit","_handle_Menu_onClick_Delete","handleRequestClose","state","undefined","Component","propTypes","object","isRequired"],"mappings":"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","file":"ToDoItem.js","sourcesContent":["// @flow\n\nimport Checkbox from 'material-ui/Checkbox'\nimport IconButton from 'material-ui/IconButton'\nimport { ListItem, ListItemSecondaryAction, ListItemText } from 'material-ui/List'\nimport Menu, { MenuItem } from 'material-ui/Menu'\nimport { MoreVert } from 'material-ui-icons'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport ToDoUpdateStatusMutation from '../../urb-example-todo-client/relay/ToDoUpdateStatusMutation'\nimport ToDoDeleteMutation from '../../urb-example-todo-client/relay/ToDoDeleteMutation'\nimport ToDoUpdateRenameMutation from '../../urb-example-todo-client/relay/ToDoUpdateRenameMutation'\nimport ToDoProperties from './ToDoProperties'\n\nclass ToDoItem extends React.Component {\n  static propTypes = {\n    Viewer: PropTypes.object.isRequired,\n    ToDo: PropTypes.object.isRequired,\n    relay: PropTypes.object.isRequired,\n  }\n\n  state: {\n    anchorEl: ?Object,\n    menuIsOpen: boolean,\n    propertiesIsOpen: boolean,\n  }\n\n  constructor(props: Object, context: Object) {\n    super(props, context)\n\n    this.state = {\n      anchorEl: undefined,\n      menuIsOpen: false,\n      propertiesIsOpen: false,\n    }\n  }\n\n  _handle_onClickCheckbox = (event, ToDo_Complete) => {\n    const { relay, Viewer, ToDo } = this.props\n\n    ToDoUpdateStatusMutation.commit(relay.environment, Viewer, ToDo, ToDo_Complete)\n  }\n\n  _handle_Update_Properties = ToDo_properties => {\n    const { relay, ToDo } = this.props\n\n    ToDoUpdateRenameMutation.commit(relay.environment, ToDo, ToDo_properties.ToDo_Text)\n  }\n\n  _handle_Close_Properties = () => {\n    this.setState({ propertiesIsOpen: false })\n  }\n\n  handleClickListItem = event => {\n    this.setState({ menuIsOpen: true, anchorEl: event.currentTarget })\n  }\n\n  _handle_Menu_onClick_Edit = event => {\n    this.setState({ menuIsOpen: false, propertiesIsOpen: true })\n  }\n\n  _handle_Menu_onClick_Delete = event => {\n    this.setState({ menuIsOpen: false })\n\n    const { relay, Viewer, ToDo } = this.props\n\n    ToDoDeleteMutation.commit(relay.environment, Viewer, ToDo)\n  }\n\n  handleRequestClose = () => {\n    this.setState({ menuIsOpen: false })\n  }\n\n  render() {\n    const { ToDo_Complete, ToDo_Text } = this.props.ToDo\n\n    return (\n      <div>\n        <ListItem\n          button\n          aria-haspopup=\"true\"\n          aria-controls=\"lock-menu\"\n          onClick={event => this._handle_onClickCheckbox(event, !ToDo_Complete)}\n        >\n          <Checkbox checked={ToDo_Complete} />\n          <ListItemText primary={ToDo_Text} />\n          <ListItemSecondaryAction>\n            <IconButton onClick={this.handleClickListItem}>\n              <MoreVert />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Menu\n          id=\"lock-menu\"\n          anchorEl={this.state.anchorEl}\n          open={this.state.menuIsOpen}\n          onRequestClose={this.handleRequestClose}\n        >\n          <MenuItem key=\"edit\" onClick={event => this._handle_Menu_onClick_Edit(event)}>\n            Edit\n          </MenuItem>\n          <MenuItem key=\"delete\" onClick={event => this._handle_Menu_onClick_Delete(event)}>\n            Delete\n          </MenuItem>\n        </Menu>\n        <ToDoProperties\n          ToDo_Text={ToDo_Text}\n          handlerUpdate={this._handle_Update_Properties}\n          handlerClose={this._handle_Close_Properties}\n          open={this.state.propertiesIsOpen}\n        />\n      </div>\n    )\n  }\n}\n\nexport default createFragmentContainer(ToDoItem, {\n  Viewer: graphql`\n    fragment ToDoItem_Viewer on Viewer {\n      id\n    }\n  `,\n  ToDo: graphql`\n    fragment ToDoItem_ToDo on ToDo {\n      id\n      ToDo_Complete\n      ToDo_Text\n    }\n  `,\n})\n"]}