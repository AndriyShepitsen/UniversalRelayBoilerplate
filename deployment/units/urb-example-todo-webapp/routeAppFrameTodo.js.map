{"version":3,"sources":["../../../units/urb-example-todo-webapp/routeAppFrameTodo.jsx"],"names":["ToDoListQuery","params","status"],"mappings":";;AAEA;AACA,4B;AACA,sC;;AAEA,mD;AACA,+C;;AAEA,GAAMA,oHAAN,C;;;;;;;;;AASE;AACE,IAAI,MADN;AAEE,KAAK,MAFP;AAGE,8BAHF;AAIE,qGAJF;;;;;;;;AAYE;AACE,4BADF;AAEE,MAAOA,aAFT;AAGE,iBAAkB,qDAAgBC,MAAhB,EAAwBC,OAAQ,KAAhC,IAHpB,EAZF;;AAiBE,+CAAO,KAAK,SAAZ,CAAsB,4BAAtB,CAA2C,MAAOF,aAAlD,EAjBF,C","file":"routeAppFrameTodo.js","sourcesContent":["// @flow\n\nimport { graphql } from 'react-relay'\nimport React from 'react'\nimport Route from 'found/lib/Route'\n\nimport ToDoScreen from './components/ToDoScreen'\nimport ToDoList from './components/ToDoList'\n\nconst ToDoListQuery = graphql`\n  query routeAppFrameTodo_ToDoList_Query($status: String!) {\n    Viewer {\n      ...ToDoList_Viewer\n    }\n  }\n`\n\nexport default (\n  <Route\n    key=\"todo\"\n    path=\"todo\"\n    Component={ToDoScreen}\n    query={graphql`\n      query routeAppFrameTodo_ToDoScreen_Query {\n        Viewer {\n          ...ToDoScreen_Viewer\n        }\n      }\n    `}\n  >\n    <Route\n      Component={ToDoList}\n      query={ToDoListQuery}\n      prepareVariables={params => ({ ...params, status: 'any' })}\n    />\n    <Route path=\":status\" Component={ToDoList} query={ToDoListQuery} />\n  </Route>\n)\n"]}