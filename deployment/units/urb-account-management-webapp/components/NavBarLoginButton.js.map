{"version":3,"sources":["../../../../units/urb-account-management-webapp/components/NavBarLoginButton.jsx"],"names":["styles","NavBarLoginButton","props","context","_handle_onClick_Login","setState","loginDialogIsOpen","userMenuIsOpen","_handle_onClick_Profile","_handle_Login_Close","_handle_onClick_UserMenu","anchorEl","event","currentTarget","_handle_UserMenu_Close","_handle_onClick_Logout","router","push","_handle_Login_NewUser","state","undefined","Viewer","User_IsAnonymous","User_DisplayName","Component","contextTypes","object","isRequired"],"mappings":";;AAEA,0C;AACA,sC;AACA;AACA,qC;AACA,4B;AACA;;AAEA,0C;;AAEA,GAAMA,QAAS,QAATA,OAAS,cAAU,EAAV,EAAf,C;;AAEMC,iB;;;;;;;;;;;;;;;AAeJ,2BAAYC,KAAZ,CAA2BC,OAA3B,CAA4C;AACpCD,KADoC,CAC7BC,OAD6B;;;;;;;;;AAU5CC,qBAV4C,CAUpB,UAAM;AAC5B,MAAKC,QAAL,CAAc,CAAEC,kBAAmB,IAArB,CAA2BC,eAAgB,KAA3C,CAAd;AACD,CAZ2C;;AAc5CC,uBAd4C,CAclB,UAAM;AAC9B,MAAKH,QAAL,CAAc,CAAEE,eAAgB,KAAlB,CAAd;AACD,CAhB2C;;AAkB5CE,mBAlB4C,CAkBtB,UAAM;AAC1B,MAAKJ,QAAL,CAAc,CAAEC,kBAAmB,KAArB,CAAd;AACD,CApB2C;;AAsB5CI,wBAtB4C,CAsBjB,eAAS;AAClC,MAAKL,QAAL,CAAc,CAAEE,eAAgB,IAAlB,CAAwBI,SAAUC,MAAMC,aAAxC,CAAd;AACD,CAxB2C;;AA0B5CC,sBA1B4C,CA0BnB,UAAM;AAC7B,MAAKT,QAAL,CAAc,CAAEE,eAAgB,KAAlB,CAAd;AACD,CA5B2C;;AA8B5CQ,sBA9B4C,CA8BnB,UAAM;AAC7B,MAAKV,QAAL,CAAc,CAAEE,eAAgB,KAAlB,CAAd;AACA,MAAKJ,OAAL,CAAaa,MAAb,CAAoBC,IAApB,CAAyB,cAAzB;AACD,CAjC2C;;AAmC5CC,qBAnC4C,CAmCpB,UAAM;AAC5B,MAAKb,QAAL,CAAc,CAAEC,kBAAmB,KAArB,CAAd;;AAEA,MAAKH,OAAL,CAAaa,MAAb,CAAoBC,IAApB,CAAyB,WAAzB;AACD,CAvC2C,CAG1C,MAAKE,KAAL,CAAa,CACXR,SAAUS,SADC,CAEXd,kBAAmB,KAFR,CAGXC,eAAgB,KAHL,CAAb,CAH0C,aAQ3C,C;;AAiCQ;AACwC,KAAKL,KAAL,CAAWmB,MADnD,CACCC,gBADD,eACCA,gBADD,CACmBC,gBADnB,eACmBA,gBADnB;AAEuC,KAAKJ,KAF5C,CAECb,iBAFD,QAECA,iBAFD,CAEoBC,cAFpB,QAEoBA,cAFpB;;AAIP;AACE;AACGe;AACC,gDAAQ,MAAM,UAAd,CAAyB,QAAS,KAAKlB,qBAAvC,UAFJ;;;AAKG,CAACkB,gBAAD;AACC,gDAAQ,MAAM,UAAd,CAAyB,QAAS,KAAKZ,wBAAvC;AACGa,gBADH,CANJ;;AASE;AACE,KAAMjB,iBADR;AAEE,aAAc,KAAKG,mBAFrB;AAGE,eAAgB,KAAKS,qBAHvB,EATF;;AAcE;AACE,GAAG,WADL;AAEE,SAAU,KAAKC,KAAL,CAAWR,QAFvB;AAGE,KAAMJ,cAHR;AAIE,eAAgB,KAAKO,sBAJvB;;AAME,8CAAU,IAAI,SAAd,CAAwB,QAAS,KAAKN,uBAAtC,YANF;;;AASE,8CAAU,IAAI,OAAd,CAAsB,QAAS,KAAKJ,qBAApC,8BATF;;;AAYE,8CAAU,IAAI,QAAd,CAAuB,QAAS,KAAKW,sBAArC,YAZF,CAdF,CADF;;;;;;AAiCD,C,+BA7F6B,gBAAMS,S,EAAhCvB,iB,CAWGwB,Y,CAAe,CACpBT,OAAQ,oBAAUU,MAAV,CAAiBC,UADL,C;;;AAqFT;AACb,uBAAW3B,MAAX,EAAmBC,iBAAnB,CADa,iG","file":"NavBarLoginButton.js","sourcesContent":["// @flow\n\nimport Button from 'material-ui/Button'\nimport Menu, { MenuItem } from 'material-ui/Menu'\nimport { withStyles } from 'material-ui/styles'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport LoginDialog from './LoginDialog'\n\nconst styles = theme => ({})\n\nclass NavBarLoginButton extends React.Component<\n  {\n    Viewer: PropTypes.object.isRequired,\n    relay: PropTypes.object.isRequired,\n  },\n  {\n    anchorEl: ?Object,\n    loginDialogIsOpen: boolean,\n    userMenuIsOpen: boolean,\n  },\n> {\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n  }\n\n  constructor(props: Object, context: Object) {\n    super(props, context)\n\n    this.state = {\n      anchorEl: undefined,\n      loginDialogIsOpen: false,\n      userMenuIsOpen: false,\n    }\n  }\n\n  _handle_onClick_Login = () => {\n    this.setState({ loginDialogIsOpen: true, userMenuIsOpen: false })\n  }\n\n  _handle_onClick_Profile = () => {\n    this.setState({ userMenuIsOpen: false })\n  }\n\n  _handle_Login_Close = () => {\n    this.setState({ loginDialogIsOpen: false })\n  }\n\n  _handle_onClick_UserMenu = event => {\n    this.setState({ userMenuIsOpen: true, anchorEl: event.currentTarget })\n  }\n\n  _handle_UserMenu_Close = () => {\n    this.setState({ userMenuIsOpen: false })\n  }\n\n  _handle_onClick_Logout = () => {\n    this.setState({ userMenuIsOpen: false })\n    this.context.router.push('/user/logout')\n  }\n\n  _handle_Login_NewUser = () => {\n    this.setState({ loginDialogIsOpen: false })\n\n    this.context.router.push('/user/new')\n  }\n\n  render() {\n    const { User_IsAnonymous, User_DisplayName } = this.props.Viewer\n    const { loginDialogIsOpen, userMenuIsOpen } = this.state\n\n    return (\n      <div>\n        {User_IsAnonymous &&\n          <Button color=\"contrast\" onClick={this._handle_onClick_Login}>\n            Login\n          </Button>}\n        {!User_IsAnonymous &&\n          <Button color=\"contrast\" onClick={this._handle_onClick_UserMenu}>\n            {User_DisplayName}\n          </Button>}\n        <LoginDialog\n          open={loginDialogIsOpen}\n          handlerClose={this._handle_Login_Close}\n          handlerNewUser={this._handle_Login_NewUser}\n        />\n        <Menu\n          id=\"lock-menu\"\n          anchorEl={this.state.anchorEl}\n          open={userMenuIsOpen}\n          onRequestClose={this._handle_UserMenu_Close}\n        >\n          <MenuItem key=\"profile\" onClick={this._handle_onClick_Profile}>\n            Profile\n          </MenuItem>\n          <MenuItem key=\"login\" onClick={this._handle_onClick_Login}>\n            Login as a different user\n          </MenuItem>\n          <MenuItem key=\"logout\" onClick={this._handle_onClick_Logout}>\n            Log out\n          </MenuItem>\n        </Menu>\n      </div>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles(styles)(NavBarLoginButton),\n  graphql`\n    fragment NavBarLoginButton_Viewer on Viewer {\n      User_IsAnonymous\n      User_DisplayName\n    }\n  `,\n)\n"]}