{"version":3,"sources":["../../../../units/urb-account-management-webapp/components/LogoutScreen.jsx"],"names":["styles","card","minWidth","LogoutScreen","props","context","_handle_onClick_Logout","setState","currentOperation","loc","window","location","host","protocol","hostname","port","fetch","method","credentials","headers","body","response","json","responseData","console","log","success","errorMessage","error","message","_handle_onClick_CancelLogout","_handle_onClick_TryAgain","_handle_onClick_Continue","replace","state","classes","renderPrompt","renderCreating","renderSuccess","renderFailure","Component"],"mappings":"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","file":"LogoutScreen.js","sourcesContent":["// @flow\n\nimport Button from 'material-ui/Button'\nimport Card, { CardActions, CardHeader } from 'material-ui/Card'\nimport { LinearProgress } from 'material-ui/Progress'\nimport { withStyles } from 'material-ui/styles'\nimport Typography from 'material-ui/Typography'\nimport React from 'react'\n\nimport ResponsiveContentArea from '../../urb-base-webapp/components/ResponsiveContentArea'\n\nconst styles = theme => ({\n  card: {\n    minWidth: 275,\n  },\n})\n\nclass LogoutScreen extends React.Component<\n  {\n    classes: Object\n  },\n  {\n    currentOperation: 'confirm' | 'logging out' | 'success' | 'failure',\n    errorMessage: string\n  }\n> {\n  constructor( props: Object, context: Object ) {\n    super( props, context )\n\n    this.state = {\n      currentOperation: 'confirm',\n      errorMessage: '',\n    }\n  }\n\n  _handle_onClick_Logout = async() => {\n    this.setState({ currentOperation: 'logging out' })\n\n    try {\n      const loc = window.location\n      const host = loc.protocol + '//' + loc.hostname + ':' + loc.port\n\n      const response = await fetch( host + '/auth/logout', {\n        method: 'POST',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: '{}',\n      })\n\n      const responseData = await response.json()\n\n      console.log( 'LOGOUT USER RESPONSE' )\n      console.log( responseData )\n\n      if ( responseData.success ) {\n        // In case of success, notify user\n        this.setState({ currentOperation: 'success' })\n      } else {\n        // In case of error, tell user what the error is\n        this.setState({\n          currentOperation: 'failure',\n          errorMessage: responseData.error,\n        })\n      }\n    } catch ( err ) {\n      // In case response could not be received properly, tell the user\n      // In case of error, tell user what the error is\n      this.setState({\n        currentOperation: 'failure',\n        errorMessage:\n          'Did not receive proper response from server. Please try again. Message:' +\n          err.message,\n      })\n    }\n  }\n\n  _handle_onClick_CancelLogout = () => {\n    this.setState({\n      currentOperation: 'failure',\n      errorMessage: 'User log out has been canceled',\n    })\n  }\n\n  _handle_onClick_TryAgain = () => {\n    this.setState({\n      currentOperation: 'confirm',\n      errorMessage: '',\n    })\n  }\n\n  _handle_onClick_Continue = () => {\n    window.location.replace( '/' )\n  }\n\n  renderCreating() {\n    const { classes } = this.props\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"Creating user\" />\n        <Typography component=\"p\">Logging out. Please wait.</Typography>\n        <LinearProgress mode=\"query\" />\n        <CardActions>\n          <Button onClick={this._handle_onClick_CancelLogout}>Cancel</Button>\n        </CardActions>\n      </Card>\n    )\n  }\n\n  renderSuccess() {\n    const { classes } = this.props\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"Logout\" />\n        <Typography component=\"p\">You have been logged out</Typography>\n        <CardActions>\n          <Button onClick={this._handle_onClick_Continue}>Continue</Button>\n        </CardActions>\n      </Card>\n    )\n  }\n\n  renderFailure() {\n    const { classes } = this.props\n    const { errorMessage } = this.state\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"Creating user\" />\n        <Typography component=\"p\">\n          Failed logging out.\n          <br />\n          Reason: {errorMessage}\n        </Typography>\n        <CardActions>\n          <Button onClick={this._handle_onClick_TryAgain}>Try Again</Button>\n        </CardActions>\n      </Card>\n    )\n  }\n\n  renderPrompt() {\n    const { classes } = this.props\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"Log Out\" />\n        <Typography component=\"p\">\n          You are currently logged in. Are you sure you want to log out?\n        </Typography>\n        <CardActions>\n          <Button onClick={this._handle_onClick_Logout}>Yes, Log Out</Button>\n        </CardActions>\n      </Card>\n    )\n  }\n\n  render() {\n    const { currentOperation } = this.state\n\n    return (\n      <ResponsiveContentArea>\n        {currentOperation === 'confirm' && this.renderPrompt()}\n        {currentOperation === 'logging out' && this.renderCreating()}\n        {currentOperation === 'success' && this.renderSuccess()}\n        {currentOperation === 'failure' && this.renderFailure()}\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default withStyles( styles )( LogoutScreen )\n"]}