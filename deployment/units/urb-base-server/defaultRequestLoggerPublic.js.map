{"version":3,"sources":["../../../units/urb-base-server/defaultRequestLoggerPublic.js"],"names":["defaultrequestLoggerPublic","require","load","condition","JSON","parse","process","env","TRACE_CONDITION_REQUEST_PUBLIC","requestAndResponse","logLevel","log"],"mappings":";;;;;;;;;;;;;;AAcwBA,0B,CAZxB,0B,uCACA,4C,4IAGAC,QAAQ,QAAR,EAAkBC,IAAlB,GAEA,GAAMC,WAAYC,KAAKC,KAAL,CAAWC,QAAQC,GAAR,CAAYC,8BAAvB,CAAlB,CAMe,QAASR,2BAAT,CAAoCS,kBAApC,CAAwD;AACrE,GAAIC,UAAW,IAAf;;;;;;;;AAQA,GAAI,2BAAaD,kBAAb,CAAiCN,SAAjC,CAAJ,CAAiDO,SAAW,MAAX;;AAEjD,GAAIA,QAAJ,CAAc,cAAIC,GAAJ,CAAQD,QAAR,CAAkB,gBAAlB,CAAoCD,kBAApC;AACf,C,0GAlBKN,S,kGAMkBH,0B","file":"defaultRequestLoggerPublic.js","sourcesContent":["// @flow weak\n\nimport log from './log'\nimport matchInDepth from './matchInDepth'\n\n// Read environment\nrequire('dotenv').load()\n\nconst condition = JSON.parse(process.env.TRACE_CONDITION_REQUEST_PUBLIC)\n\n// Example for logging requests that:\n// { \"trace\" : \"none\" } - do not trace any requests\n// { \"clientIP\": \"127.0.0.1\" } - trace requests coming from localhost\n\nexport default function defaultrequestLoggerPublic(requestAndResponse) {\n  let logLevel = null\n\n  // TODO: Whhat errors for Auth should be logged? definitily not 401.\n  // // If there is an error, log it as an error\n  // if( requestAndResponse.response.indexOf( '\"errors\": [' ) > 0 )\n  //   logLevel = 'error'\n  // Otherwise, if it is a trace, log it as info\n  //else\n  if (matchInDepth(requestAndResponse, condition)) logLevel = 'info'\n\n  if (logLevel) log.log(logLevel, 'Public request', requestAndResponse)\n}\n"]}