{"version":3,"sources":["../../../units/urb-base-server/defaultRequestLoggerGraphQL.js"],"names":["defaultRequestLoggerGraphQL","requestAndResponse","logLevel","response","indexOf","log"],"mappings":";;;;;;AAMwBA,2B,CAJxB,8CACA,0B,uCACA,4C,4IAEe,QAASA,4BAAT,CAAqCC,kBAArC,CAAyD;AACtE,GAAIC,UAAW,IAAf;;;AAGA,GAAID,mBAAmBE,QAAnB,CAA4BC,OAA5B,CAAoC,aAApC,EAAqD,CAAzD,CAA4DF,SAAW,OAAX,CAA5D;AACK,GAAI,2BAAaD,kBAAb,4CAAJ;;AAEHC,SAAW,MAAX;;AAEF,GAAIA,QAAJ,CAAc,cAAIG,GAAJ,CAAQH,QAAR,CAAkB,iBAAlB,CAAqCD,kBAArC;AACf","file":"defaultRequestLoggerGraphQL.js","sourcesContent":["// @flow weak\n\nimport { debugWriteToLogServerRequestGraphQL } from '../_configuration/debug'\nimport log from './log'\nimport matchInDepth from './matchInDepth'\n\nexport default function defaultRequestLoggerGraphQL(requestAndResponse) {\n  let logLevel = null\n\n  // If there is an error, log it as an error\n  if (requestAndResponse.response.indexOf('\"errors\": [') > 0) logLevel = 'error'\n  else if (matchInDepth(requestAndResponse, debugWriteToLogServerRequestGraphQL))\n    // Otherwise, if it is a trace, log it as info\n    logLevel = 'info'\n\n  if (logLevel) log.log(logLevel, 'GraphQL request', requestAndResponse)\n}\n"]}