{"version":3,"sources":["../../../units/urb-base-server/defaultRequestLoggerGraphQL.js"],"names":["defaultRequestLoggerGraphQL","require","load","condition","JSON","parse","process","env","TRACE_CONDITION_REQUEST_GRAPHQL","requestAndResponse","logLevel","response","indexOf","log"],"mappings":";;;;;;;;;;;;;;;AAewBA,2B,CAbxB,0B,uCACA,4C,4IAGAC,QAAQ,QAAR,EAAkBC,IAAlB,GAEA,GAAMC,WAAYC,KAAKC,KAAL,CAAWC,QAAQC,GAAR,CAAYC,+BAAvB,CAAlB,CAOe,QAASR,4BAAT,CAAqCS,kBAArC,CAAyD;AACtE,GAAIC,UAAW,IAAf;;;AAGA,GAAID,mBAAmBE,QAAnB,CAA4BC,OAA5B,CAAoC,aAApC,EAAqD,CAAzD,CAA4DF,SAAW,OAAX,CAA5D;AACK,GAAI,2BAAaD,kBAAb,CAAiCN,SAAjC,CAAJ;;AAEHO,SAAW,MAAX;;AAEF,GAAIA,QAAJ,CAAc,cAAIG,GAAJ,CAAQH,QAAR,CAAkB,iBAAlB,CAAqCD,kBAArC;AACf","file":"defaultRequestLoggerGraphQL.js","sourcesContent":["// @flow weak\n\nimport log from './log'\nimport matchInDepth from './matchInDepth'\n\n// Read environment\nrequire('dotenv').load()\n\nconst condition = JSON.parse(process.env.TRACE_CONDITION_REQUEST_GRAPHQL)\n\n// Example for logging requests that:\n// { \"trace\" : \"none\" } - do not trace any requests\n// { \"clientIP\": \"127.0.0.1\" } - trace requests coming from localhost\n// { \"user\": { \"User_AccountName\": \"jack\" } } - trace requests for user account named 'jack'\n\nexport default function defaultRequestLoggerGraphQL(requestAndResponse) {\n  let logLevel = null\n\n  // If there is an error, log it as an error\n  if (requestAndResponse.response.indexOf('\"errors\": [') > 0) logLevel = 'error'\n  else if (matchInDepth(requestAndResponse, condition))\n    // Otherwise, if it is a trace, log it as info\n    logLevel = 'info'\n\n  if (logLevel) log.log(logLevel, 'GraphQL request', requestAndResponse)\n}\n"]}