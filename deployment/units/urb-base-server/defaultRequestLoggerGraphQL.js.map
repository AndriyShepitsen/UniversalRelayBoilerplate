{"version":3,"sources":["../../../units/urb-base-server/defaultRequestLoggerGraphQL.js"],"names":["defaultRequestLoggerGraphQL","requestAndResponse","logLevel","response","indexOf","log"],"mappings":";;;;;;;AAOwBA,2B,CALxB,8CAEA,0B,uCACA,4C,4IAEe,QAASA,4BAAT,CAAsCC,kBAAtC,CAA2D;AACxE,GAAIC,UAAW,IAAf;;;AAGA,GAAKD,mBAAmBE,QAAnB,CAA4BC,OAA5B,CAAqC,aAArC,EAAuD,CAA5D,CAAgEF,SAAW,OAAX,CAAhE;AACK;AACH,2BAAcD,kBAAd,4CADG;;;AAIHC,SAAW,MAAX;;AAEF,GAAKA,QAAL,CAAgB,cAAIG,GAAJ,CAASH,QAAT,CAAmB,iBAAnB,CAAsCD,kBAAtC;AACjB","file":"defaultRequestLoggerGraphQL.js","sourcesContent":["// @flow weak\n\nimport { debugWriteToLogServerRequestGraphQL } from '../_configuration/debug'\n\nimport log from './log'\nimport matchInDepth from './matchInDepth'\n\nexport default function defaultRequestLoggerGraphQL( requestAndResponse ) {\n  let logLevel = null\n\n  // If there is an error, log it as an error\n  if ( requestAndResponse.response.indexOf( '\"errors\": [' ) > 0 ) logLevel = 'error'\n  else if (\n    matchInDepth( requestAndResponse, debugWriteToLogServerRequestGraphQL )\n  )\n    // Otherwise, if it is a trace, log it as info\n    logLevel = 'info'\n\n  if ( logLevel ) log.log( logLevel, 'GraphQL request', requestAndResponse )\n}\n"]}