{"version":3,"sources":["../../../units/urb-base-server/checkCredentials.js"],"names":["getUserByUserToken1","verifyUserAuthToken","serveAuthenticationFailed","require","load","get_user_id","req","UserToken1","cookies","headers","usertoken1","length","decoded","decode","process","env","JWT_SECRET","uuidFromString","user_id","err","Promise","reject","uuidNull","objectManager","getOneObject","id","User_site_id","siteInformation","site_id","a_User","console","log","setViewerUserId","request_UserToken2","get","UserToken2","USER_TOKEN_2_BYPASS_IP","ip","resolve","httpError403FileName","__dirname","res","error","respondWithJSON","connection","remoteAddress","requestDetails","query","body","cookie","httpOnly","expires","Date","status","send","sendFile"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBsBA,mB,CAAAA,mB;;;;;;;;;;;;;;;;;;AAkBNC,mB,CAAAA,mB;;;;;;;;;;;;;;;;;;;;;AAqBAC,yB,CAAAA,yB,CA9DhB,qC,mDACA,0B,yCAEA,4F,iEACA,0B,0HAGAC,QAAQ,QAAR,EAAkBC,IAAlB,GAEA,QAASC,YAAT,CAAqBC,GAArB,CAA0B,CACxB,GAAMC,YAAaD,IAAIE,OAAJ,CAAYD,UAAZ,EAA0BD,IAAIG,OAAJ,CAAYC,UAAzD,CACA,GAAIH,UAAJ,CACE,GAAI,CACF,GAAIA,WAAWI,MAAX,CAAoB,EAAxB,CAA4B,CAC1B,GAAMC,SAAU,oBAAIC,MAAJ,CAAWN,UAAX,CAAuBO,QAAQC,GAAR,CAAYC,UAAnC,CAAhB,CACA,MAAO,4BAAiBC,cAAjB,CAAgCL,QAAQM,OAAxC,CAAP,CACD,CACF,CAAC,MAAOC,GAAP,CAAY,CACZ,MAAOC,SAAQC,MAAR,CAAe,mCAAqCF,GAApD,CAAP,CACD,CACH,MAAO,4BAAiBG,QAAjB,EAAP,CACD,CAEM,QAAetB,oBAAf,CAAmCuB,aAAnC,CAAkDjB,GAAlD,iJACCY,OADD,CACWb,YAAYC,GAAZ,CADX,iDAGgBiB,cAAcC,YAAd,CAA2B,MAA3B,CAAmC,CACtDC,GAAIP,OADkD,CAEtDQ,aAAcH,cAAcI,eAAd,CAA8BC,OAFU,CAAnC,CAHhB,SAGCC,MAHD,eAQLC,QAAQC,GAAR,CAAYF,MAAZ,EARK,IAUDA,MAVC,0BAWHN,cAAcS,eAAd,CAA8Bd,OAA9B,EAXG,gCAYIW,MAZJ,eAcG,oBAdH,0DAkBA,QAAS5B,oBAAT,CAA6B4B,MAA7B,CAAqCvB,GAArC,CAA0C,CAC/C,GAAI,CAACuB,MAAL,CAAa,MAAOT,SAAQC,MAAR,CAAe,oBAAf,CAAP,CAAb,IACK,CACH,GAAMY,oBAAqB3B,IAAI4B,GAAJ,CAAQ,YAAR,CAA3B,CACA,GAAID,oBAAsBJ,OAAOM,UAA7B,EAA2CrB,QAAQC,GAAR,CAAYqB,sBAAZ,EAAsC9B,IAAI+B,EAAzF,CACE,MAAOjB,SAAQkB,OAAR,CAAgBT,OAAOJ,EAAvB,CAAP,CADF,IAGE,OAAOL,SAAQC,MAAR,CACL,sCACEQ,OAAOM,UADT,CAEE,aAFF,CAGEF,kBAJG,CAAP,CAMH,CACF,CAED,GAAMM,sBAAuB,eAAKD,OAAL,CAC3BE,SAD2B,CAE3B,sDAF2B,CAA7B,CAKO,QAAStC,0BAAT,CAAmCI,GAAnC,CAAwCmC,GAAxC,CAA6CC,KAA7C,CAAoDC,eAApD,CAAqE;;AAE1E,GAAIN,IAAK/B,IAAIG,OAAJ,CAAY,WAAZ,GAA4BH,IAAIsC,UAAJ,CAAeC,aAApD;;AAEA,GAAMC,gBAAiB;AACrBrC,QAASH,IAAIG,OADQ;AAErBD,QAASF,IAAIE,OAFQ;AAGrB6B,GAAIA,EAHiB;AAIrBU,MAAOzC,IAAI0C,IAJU,CAAvB;;;AAOA,cAAIjB,GAAJ,CAAQ,MAAR,CAAgB,6BAAhB,CAA+C,CAAEW,WAAF,CAASI,6BAAT,CAA/C;;;AAGAL,IAAIQ,MAAJ,CAAW,YAAX,CAAyB,EAAzB,CAA6B,CAAEC,SAAU,IAAZ,CAAkBC,QAAS,GAAIC,KAAJ,CAAS,CAAT,CAA3B,CAA7B;;AAEA,GAAIT,eAAJ,CAAqBF,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,0CAArB,EAArB;AACKb,IAAIY,MAAJ,CAAW,GAAX,EAAgBE,QAAhB,CAAyBhB,oBAAzB;AACN","file":"checkCredentials.js","sourcesContent":["// @flow weak\n\nimport jwt from 'jwt-simple'\nimport path from 'path'\n\nimport defaultPersister from '../_configuration/urb-base-server/graphql/defaultPersister'\nimport log from './log'\n\n// Read environment\nrequire('dotenv').load()\n\nfunction get_user_id(req) {\n  const UserToken1 = req.cookies.UserToken1 || req.headers.usertoken1\n  if (UserToken1)\n    try {\n      if (UserToken1.length > 10) {\n        const decoded = jwt.decode(UserToken1, process.env.JWT_SECRET)\n        return defaultPersister.uuidFromString(decoded.user_id)\n      }\n    } catch (err) {\n      return Promise.reject('ðŸ’”  Could not read auth cookie. ' + err)\n    }\n  return defaultPersister.uuidNull() // Anonymous, unless cookie is passed\n}\n\nexport async function getUserByUserToken1(objectManager, req) {\n  const user_id = get_user_id(req)\n\n  const a_User = await objectManager.getOneObject('User', {\n    id: user_id,\n    User_site_id: objectManager.siteInformation.site_id,\n  })\n\n  console.log(a_User)\n\n  if (a_User) {\n    objectManager.setViewerUserId(user_id)\n    return a_User\n  } else {\n    throw 'ðŸ’”  User not found'\n  }\n}\n\nexport function verifyUserAuthToken(a_User, req) {\n  if (!a_User) return Promise.reject('ðŸ’”  User not found')\n  else {\n    const request_UserToken2 = req.get('UserToken2')\n    if (request_UserToken2 == a_User.UserToken2 || process.env.USER_TOKEN_2_BYPASS_IP == req.ip)\n      return Promise.resolve(a_User.id)\n    else\n      return Promise.reject(\n        'ðŸ’”  Authentication token expected: ' +\n          a_User.UserToken2 +\n          ', provided:' +\n          request_UserToken2,\n      )\n  }\n}\n\nconst httpError403FileName = path.resolve(\n  __dirname,\n  '../_configuration/urb-base-server/httpError/403.html',\n)\n\nexport function serveAuthenticationFailed(req, res, error, respondWithJSON) {\n  // Collect information about the request\n  var ip = req.headers['x-real-ip'] || req.connection.remoteAddress\n\n  const requestDetails = {\n    headers: req.headers,\n    cookies: req.cookies,\n    ip: ip,\n    query: req.body,\n  }\n\n  log.log('warn', 'Checking credentials failed', { error, requestDetails })\n\n  // Expire cookie. This is the only way to 'delete' a cookie\n  res.cookie('UserToken1', '', { httpOnly: true, expires: new Date(1) })\n\n  if (respondWithJSON) res.status(403).send('{ \"error\": \"ðŸ’”  Authentication Failed\" }')\n  else res.status(403).sendFile(httpError403FileName)\n}\n"]}