{"version":3,"sources":["../../../units/urb-base-server/defaultRequestLoggerAuth.js"],"names":["defaultrequestLoggerAuth","require","load","condition","JSON","parse","process","env","TRACE_CONDITION_REQUEST_AUTH","requestAndResponse","logLevel","log"],"mappings":";;;;;;;;;;;;;;AAcwBA,wB,CAZxB,0B,uCACA,4C,4IAGAC,QAAQ,QAAR,EAAkBC,IAAlB,GAEA,GAAMC,WAAYC,KAAKC,KAAL,CAAWC,QAAQC,GAAR,CAAYC,4BAAvB,CAAlB,CAMe,QAASR,yBAAT,CAAkCS,kBAAlC,CAAsD;AACnE,GAAIC,UAAW,IAAf;;;;;;;;AAQA,GAAI,2BAAaD,kBAAb,CAAiCN,SAAjC,CAAJ,CAAiDO,SAAW,MAAX;;AAEjD,GAAIA,QAAJ,CAAc,cAAIC,GAAJ,CAAQD,QAAR,CAAkB,cAAlB,CAAkCD,kBAAlC;AACf","file":"defaultRequestLoggerAuth.js","sourcesContent":["// @flow weak\n\nimport log from './log'\nimport matchInDepth from './matchInDepth'\n\n// Read environment\nrequire('dotenv').load()\n\nconst condition = JSON.parse(process.env.TRACE_CONDITION_REQUEST_AUTH)\n\n// Example for logging requests that:\n// { \"trace\" : \"none\" } - do not trace any requests\n// { \"clientIP\": \"127.0.0.1\" } - trace requests coming from localhost\n\nexport default function defaultrequestLoggerAuth(requestAndResponse) {\n  let logLevel = null\n\n  // TODO: Whhat errors for Auth should be logged? definitily not 401.\n  // // If there is an error, log it as an error\n  // if( requestAndResponse.response.indexOf( '\"errors\": [' ) > 0 )\n  //   logLevel = 'error'\n  // Otherwise, if it is a trace, log it as info\n  //else\n  if (matchInDepth(requestAndResponse, condition)) logLevel = 'info'\n\n  if (logLevel) log.log(logLevel, 'Auth request', requestAndResponse)\n}\n"]}