{"version":3,"sources":["../../../../units/urb-base-webapp/scripts/ViewportDimensions.js"],"names":["ViewportDimensions","removeComponent","component","subscribedComponents","delete","handle_onResize","totalWidth","window","innerWidth","totalHeight","innerHeight","changesMade","viewportDimensions","viewportDimensionsVersion","componentsToUpdate","dimensionsSubscribed","mustUpdate","dimension","push","setTimeout","forceUpdate","err","Map","dimensionName","subscriptionInfo","get","set","self","componentWillUnmount","currentFunction","bind","dimensionValue","Error"],"mappings":";;AAEqBA,kB;;;;;AAKnB,6BAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDdC,eAlDc,CAkDI,SAACC,SAAD,CAAuB;AACvC,MAAKC,oBAAL,CAA0BC,MAA1B,CAAiCF,SAAjC;AACD,CApDa;;AAsDdG,eAtDc,CAsDI,UAAM;AACtB,GAAMC,YAAaC,OAAOC,UAA1B;AACA,GAAMC,aAAcF,OAAOG,WAA3B;;;AAGA,GAAMC,aAAc,EAApB;;AAEA,GAAIL,aAAe,MAAKM,kBAAL,CAAwBN,UAA3C,CAAuD;AACrDK,YAAYL,UAAZ,CAAyB,IAAzB;AACA,MAAKM,kBAAL,CAAwBN,UAAxB,CAAqCA,UAArC;AACD;;AAED,GAAIG,cAAgB,MAAKG,kBAAL,CAAwBH,WAA5C,CAAyD;AACvDE,YAAYF,WAAZ,CAA0B,IAA1B;AACA,MAAKG,kBAAL,CAAwBH,WAAxB,CAAsCA,WAAtC;AACD;;;AAGD,GAAMI,2BAA4B,EAAE,MAAKA,yBAAzC;;AAEA,GAAMC,oBAAqB,EAA3B;;;AAGA,kBAAgD,MAAKX,oBAArD,oLAA2E,0LAAhED,UAAgE,aAArDa,qBAAqD;AACzE,GAAIb,UAAUW,yBAAV,GAAwCA,yBAA5C,CAAuE;AACrEX,UAAUW,yBAAV,CAAsCA,yBAAtC;;;AAGA,GAAIG,YAAa,KAAjB;AACA,IAAK,GAAIC,UAAT,GAAsBF,qBAAtB;AACE,GAAIJ,YAAYM,SAAZ,CAAJ,CAA4B;AAC1BD,WAAa,IAAb;AACA;AACD,CAJH;;;AAOA,GAAIA,UAAJ,CAAgBF,mBAAmBI,IAAnB,CAAwBhB,SAAxB;AACjB;AACF;;;AAGD,GAAIK,QAAUA,OAAOY,UAArB;AACEZ,OAAOY,UAAP,CAAkB,UAAW;AAC3B,mBAAsBL,kBAAtB,8UAASZ,WAAT;AACE,GAAI;AACFA,WAAUkB,WAAV;AACD,CAAC,MAAOC,GAAP,CAAY;;;AAGb,CANH;AAOD,CARD;AASH,CAzGa,CACZ,KAAKlB,oBAAL,CAA4B,GAAImB,IAAJ,EAA5B,CAEA,KAAKT,yBAAL,CAAiC,CAAjC,CACA,KAAKD,kBAAL,CAA0B,CACxBN,WAAY,CADY,CAExBG,YAAa,CAFW,CAA1B,CAID,C,+DAEGP,S,CAAmBqB,a,CAAuB,CAE5CrB,UAAUW,yBAAV,CAAsC,KAAKA,yBAA3C,CAGA,GAAIW,kBAAmB,KAAKrB,oBAAL,CAA0BsB,GAA1B,CAA8BvB,SAA9B,CAAvB,CACA,GAAIsB,kBAAoB,IAAxB,CAA8B,CAE5BA,iBAAmB,EAAnB,CACA,KAAKrB,oBAAL,CAA0BuB,GAA1B,CAA8BxB,SAA9B,CAAyCsB,gBAAzC,EAEA,GAAMG,MAAO,IAAb,CAGA,GAAIzB,UAAU0B,oBAAd,CAAoC,CAClC,GAAMC,iBAAkB3B,UAAU0B,oBAAV,CAA+BE,IAA/B,CAAoC5B,SAApC,CAAxB,CAEAA,UAAU0B,oBAAV,CAAiC,UAAM,CACrCD,KAAK1B,eAAL,CAAqBC,SAArB,EACA2B,kBACD,CAHD,CAID,CAPD,IAQE3B,WAAU0B,oBAAV,CAAiC,UAAM,CACrCD,KAAK1B,eAAL,CAAqBC,SAArB,EACD,CAFD,CAGH,CAGDsB,iBAAiBD,aAAjB,EAAkC,IAAlC,CAGA,GAAIQ,gBAAiB,KAAKnB,kBAAL,CAAwBW,aAAxB,CAArB,CACA,GAAIQ,gBAAkB,IAAtB,CACE,KAAM,IAAIC,MAAJ,CACJ,2CAA6CT,aADzC,CAAN,CAIF,MAAOQ,eAAP,CACD,C,kDArDkB/B,kB","file":"ViewportDimensions.js","sourcesContent":["// @flow\n\nexport default class ViewportDimensions {\n  subscribedComponents: Map<Object, Object>\n  viewportDimensionsVersion: number\n  viewportDimensions: Object\n\n  constructor() {\n    this.subscribedComponents = new Map()\n\n    this.viewportDimensionsVersion = 1\n    this.viewportDimensions = {\n      totalWidth: 0,\n      totalHeight: 0,\n    }\n  }\n\n  get(component: Object, dimensionName: string) {\n    // Mark that the component is being rendered with the current version\n    component.viewportDimensionsVersion = this.viewportDimensionsVersion\n\n    // Is the object subscribed? If not, it should be\n    let subscriptionInfo = this.subscribedComponents.get(component)\n    if (subscriptionInfo == null) {\n      // Add component to subscriptions dictionary\n      subscriptionInfo = {}\n      this.subscribedComponents.set(component, subscriptionInfo)\n\n      const self = this\n\n      // Make sure component unsubscribes when destroyed\n      if (component.componentWillUnmount) {\n        const currentFunction = component.componentWillUnmount.bind(component)\n\n        component.componentWillUnmount = () => {\n          self.removeComponent(component)\n          currentFunction()\n        }\n      } else\n        component.componentWillUnmount = () => {\n          self.removeComponent(component)\n        }\n    }\n\n    // Make sure it is subscribed for the right setting\n    subscriptionInfo[dimensionName] = true\n\n    // Now that the configuration is current, get the setting value\n    let dimensionValue = this.viewportDimensions[dimensionName]\n    if (dimensionValue == null)\n      throw new Error(\n        'Could not find viewport dimension named ' + dimensionName\n      )\n\n    return dimensionValue\n  }\n\n  removeComponent = (component: Object) => {\n    this.subscribedComponents.delete(component)\n  }\n\n  handle_onResize = () => {\n    const totalWidth = window.innerWidth\n    const totalHeight = window.innerHeight\n\n    // Record what changes were made to only notify the necessary components\n    const changesMade = {}\n\n    if (totalWidth !== this.viewportDimensions.totalWidth) {\n      changesMade.totalWidth = true\n      this.viewportDimensions.totalWidth = totalWidth\n    }\n\n    if (totalHeight !== this.viewportDimensions.totalHeight) {\n      changesMade.totalHeight = true\n      this.viewportDimensions.totalHeight = totalHeight\n    }\n\n    // Insrease the version of the dimensions to track what has been set to be updated already\n    const viewportDimensionsVersion = ++this.viewportDimensionsVersion\n\n    const componentsToUpdate = []\n\n    // Update all subscribed components\n    for (let [ component, dimensionsSubscribed ] of this.subscribedComponents) {\n      if (component.viewportDimensionsVersion !== viewportDimensionsVersion) {\n        component.viewportDimensionsVersion = viewportDimensionsVersion\n\n        // Did the component subscribe to the changes that were actually made?\n        let mustUpdate = false\n        for (let dimension in dimensionsSubscribed)\n          if (changesMade[dimension]) {\n            mustUpdate = true\n            break\n          }\n\n        // Re-render component if it subscribed to any of the changes\n        if (mustUpdate) componentsToUpdate.push(component)\n      }\n    }\n\n    // Delayed force update\n    if (window && window.setTimeout)\n      window.setTimeout(function() {\n        for (let component of componentsToUpdate)\n          try {\n            component.forceUpdate()\n          } catch (err) {\n            // ZZZ not sure why it fails maybe some of them do not exist?\n            // This did not use to happen in the old boilerplate\n          }\n      })\n  }\n}\n"]}