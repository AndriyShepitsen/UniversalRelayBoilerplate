{"version":3,"sources":["../../../units/urb-base-webapp/fetcherServer.js"],"names":["FetcherServer","url","UserToken1","UserToken2","payloads","args","i","length","push","payload"],"mappings":";;AAEA,0C;;AAEqBA,a;;;AAGnB,uBAAaC,GAAb,CAA0BC,UAA1B,CAA+CC,UAA/C,CAAoE;AAC3DF,GAD2D,CACtDC,UADsD,CAC1CC,UAD0C;;AAGlE,MAAKC,QAAL,CAAgB,EAAhB,CAHkE;AAInE,C;;AAEeC,I,sCAAAA,I;AACRC,C,CAAI,KAAKF,QAAL,CAAcG,M;AACxB,KAAKH,QAAL,CAAcI,IAAd,CAAoB,IAApB,E;AACsCH,I,YAAhCI,O;AACN,KAAKL,QAAL,CAAcE,CAAd,EAAmBG,OAAnB,C;AACOA,O;;;AAGA;AACP,MAAO,MAAKL,QAAZ;AACD,C,kEAnBkBJ,a","file":"fetcherServer.js","sourcesContent":["// @flow\n\nimport FetcherBase from './fetcherBase'\n\nexport default class FetcherServer extends FetcherBase {\n  payloads: Array<any>\n\n  constructor( url: string, UserToken1: ?string, UserToken2: string ) {\n    super( url, UserToken1, UserToken2 )\n\n    this.payloads = []\n  }\n\n  async fetch( ...args: any ) {\n    const i = this.payloads.length\n    this.payloads.push( null )\n    const payload = await super.fetch( ...args )\n    this.payloads[i] = payload\n    return payload\n  }\n\n  toJSON() {\n    return this.payloads\n  }\n}\n"]}