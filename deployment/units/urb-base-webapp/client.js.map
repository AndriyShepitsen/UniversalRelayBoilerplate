{"version":3,"sources":["../../../units/urb-base-webapp/client.js"],"names":["fetcher","window","__RELAY_PAYLOADS__","data","Viewer","UserToken2","resolver","historyProtocol","historyMiddlewares","routeConfig","render","Router","appData","document","getElementById","ssStyles","parentNode","removeChild"],"mappings":";;;AAGA;;AAEA,0D;AACA,4E;AACA,4B;AACA,mC;;AAEA,8C;AACA;AACA,6C;;;AAGC,CAAC;;AAEMA,OAFN,CAEgB;AACd,UADc;AAEdC,OAAOC,kBAFO;AAGdD,OAAOC,kBAAP,CAA0B,CAA1B,EAA6BC,IAA7B,CAAkCC,MAAlC,CAAyCC,UAH3B,CAFhB;;AAOMC,QAPN,CAOiB,2BAAeN,OAAf,CAPjB;;AASqB,uCAAyB;AAC5CO,gBAAiB,+BAD2B;AAE5CC,6CAF4C;AAG5CC,+BAH4C;AAI5CH,iBAJ4C;AAK5CI,qBAL4C,CAAzB,CATrB,SASMC,MATN;;;AAiBA,mBAASD,MAAT;;AAEE,iDAAS,QAASE,OAAlB;AACE,8BAAC,MAAD,EAAQ,SAAUN,QAAlB,EADF,CAFF;;AAKEO,SAASC,cAAT,CAAwB,MAAxB,CALF;AAME,UAAM;;AAEJ,GAAMC,UAAWF,SAASC,cAAT,CAAwB,oBAAxB,CAAjB;;AAEAC,SAASC,UAAT,CAAoBC,WAApB,CAAgCF,QAAhC;AACD,CAXH,EAjBA,yDAAD","file":"client.js","sourcesContent":["// @flow\n\n// In order to use ES7 async/await\nimport 'babel-polyfill'\n\nimport BrowserProtocol from 'farce/lib/BrowserProtocol'\nimport createInitialFarceRouter from 'found/lib/createInitialFarceRouter'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport FetcherClient from './fetcherClient'\nimport { createResolver, historyMiddlewares, render, routeConfig } from './router'\nimport Wrapper from './components/Wrapper'\n\n//\n;(async () => {\n  // eslint-disable-next-line no-underscore-dangle\n  const fetcher = new FetcherClient(\n    '/graphql',\n    window.__RELAY_PAYLOADS__,\n    window.__RELAY_PAYLOADS__[0].data.Viewer.UserToken2, // It is critical that the app frame has UserToken2 retrieved\n  )\n  const resolver = createResolver(fetcher)\n\n  const Router = await createInitialFarceRouter({\n    historyProtocol: new BrowserProtocol(),\n    historyMiddlewares,\n    routeConfig,\n    resolver,\n    render,\n  })\n\n  ReactDOM.render(\n    // $FlowIssue - appData will be provided as variable by the isomorphic renderer\n    <Wrapper appData={appData}>\n      <Router resolver={resolver} />\n    </Wrapper>,\n    document.getElementById('root'),\n    () => {\n      // We don't need the static css any more once we have launched our application.\n      const ssStyles = document.getElementById('server-side-styles')\n      // $FlowIssue it is guaranteed to be there\n      ssStyles.parentNode.removeChild(ssStyles)\n    },\n  )\n})()\n"]}