{"version":3,"sources":["../../../../units/urb-base-webapp/components/Link.jsx"],"names":["styles","root","color","textDecoration","primary","theme","palette","accent","A400","Link","props","ComponentProp","component","classes","className","variant","to","other","Component","propTypes","object","isRequired","string","oneOfType","func","oneOf"],"mappings":";;AAEA,4B;AACA,qC;AACA,sC;AACA;AACA,0C;;AAEA,GAAMA,QAAS,QAATA,OAAS,cAAU;AACvBC,KAAM;AACJC,MAAO,SADH;AAEJC,eAAgB,MAFZ;AAGJ,UAAW;AACTA,eAAgB,WADP,CAHP,CADiB;;;AAQvBC,QAAS;AACPF,MAAOG,MAAMC,OAAN,CAAcF,OAAd,CAAsB,GAAtB,CADA,CARc;;AAWvBG,OAAQ;AACNL,MAAOG,MAAMC,OAAN,CAAcC,MAAd,CAAqBC,IADtB,CAXe,CAAV,EAAf;;;;AAgBA,QAASC,KAAT,CAAeC,KAAf,CAAuB;;AAERC,aAFQ;;;;;;AAQjBD,KARiB,CAEnBE,SAFmB,CAGnBC,OAHmB,CAQjBH,KARiB,CAGnBG,OAHmB,CAInBC,SAJmB,CAQjBJ,KARiB,CAInBI,SAJmB,CAKnBC,OALmB,CAQjBL,KARiB,CAKnBK,OALmB,CAMnBC,EANmB,CAQjBN,KARiB,CAMnBM,EANmB,CAOhBC,KAPgB,0BAQjBP,KARiB;;AAUrB,GAAIQ,iBAAJ;;AAEA,GAAKP,aAAL,CAAqB;AACnBO,UAAYP,aAAZ;AACD,CAFD,IAEO,IAAKK,EAAL,CAAU;AACfE;AACD,CAFM,IAEA;AACLA,UAAY,GAAZ;AACD;;AAED;AACE,8BAAC,SAAD;AACE,GAAIF,EADN;AAEE,UAAW;AACTH,QAAQZ,IADC;;AAGNY,QAAQT,OAHF,CAGYW,UAAY,SAHxB;AAINF,QAAQN,MAJF,CAIWQ,UAAY,QAJvB;;AAMTD,SANS,CAFb;;AAUMG,KAVN,EADF;;;AAcD;;AAEDR,KAAKU,SAAL,CAAiB;AACfN,QAAS,oBAAUO,MAAV,CAAiBC,UADX;AAEfP,UAAW,oBAAUQ,MAFN;AAGfV,UAAW,oBAAUW,SAAV,CAAoB,CAAE,oBAAUD,MAAZ,CAAoB,oBAAUE,IAA9B,CAApB,CAHI;AAIfR,GAAI,oBAAUM,MAJC;AAKfP,QAAS,oBAAUU,KAAV,CAAgB,CAAE,SAAF,CAAa,QAAb,CAAhB,CALM,CAAjB,C;;;AAQe,uBAAYzB,MAAZ,EAAsBS,IAAtB,C","file":"Link.js","sourcesContent":["// @flow\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { Link as LinkRouter } from 'found'\nimport { withStyles } from 'material-ui/styles'\n\nconst styles = theme => ({\n  root: {\n    color: 'inherit',\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n  primary: {\n    color: theme.palette.primary[500],\n  },\n  accent: {\n    color: theme.palette.accent.A400,\n  },\n})\n\nfunction Link( props ) {\n  const {\n    component: ComponentProp,\n    classes,\n    className,\n    variant,\n    to,\n    ...other\n  } = props\n\n  let Component\n\n  if ( ComponentProp ) {\n    Component = ComponentProp\n  } else if ( to ) {\n    Component = LinkRouter\n  } else {\n    Component = 'a'\n  }\n\n  return (\n    <Component\n      to={to}\n      className={classNames(\n        classes.root,\n        {\n          [classes.primary]: variant === 'primary',\n          [classes.accent]: variant === 'accent',\n        },\n        className\n      )}\n      {...other}\n    />\n  )\n}\n\nLink.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  component: PropTypes.oneOfType([ PropTypes.string, PropTypes.func ]),\n  to: PropTypes.string,\n  variant: PropTypes.oneOf([ 'primary', 'accent' ]),\n}\n\nexport default withStyles( styles )( Link )\n"]}