{"version":3,"sources":["../../../../units/urb-base-webapp/components/NewUserScreen.jsx"],"names":["styleSheet","card","minWidth","NewUserScreen","props","context","_handle_onClick_Create","state","AccountName","AccountPassword","setState","currentOperation","loc","window","location","host","protocol","hostname","port","fetch","method","credentials","headers","body","JSON","stringify","User_AccountName","User_AccountPassword","response","json","responseData","console","log","success","errorMessage","error","message","_handle_onClick_CancelCreation","_handle_onClick_TryAgain","_handle_onClick_Continue","router","push","classes","event","target","value","renderPrompt","renderCreating","renderSuccess","renderFailure","Component","contextTypes","object","isRequired","propTypes"],"mappings":"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","file":"NewUserScreen.js","sourcesContent":["// @flow\n\nimport AddIcon from 'material-ui-icons/Add'\nimport Button from 'material-ui/Button'\nimport Card, { CardActions, CardHeader } from 'material-ui/Card'\nimport { LinearProgress } from 'material-ui/Progress'\nimport { createStyleSheet, withStyles } from 'material-ui/styles'\nimport TextField from 'material-ui/TextField'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport Typography from 'material-ui/Typography'\n\nimport ResponsiveContentArea from '../../urb-base-webapp/components/ResponsiveContentArea'\n\nconst styleSheet = createStyleSheet(theme => ({\n  card: {\n    minWidth: 275,\n  },\n}))\n\nclass NewUserScreen extends React.Component {\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n  }\n\n  static propTypes = {\n    classes: PropTypes.object.isRequired,\n  }\n\n  state: {\n    currentOperation: string,\n    errorMessage: string,\n    AccountName: string,\n    AccountPassword: string,\n  }\n\n  constructor(props: Object, context: Object) {\n    super(props, context)\n\n    this.state = {\n      currentOperation: 'prompt',\n      errorMessage: '',\n      AccountName: '',\n      AccountPassword: '',\n    }\n  }\n\n  _handle_onClick_Create = async () => {\n    const { AccountName, AccountPassword } = this.state\n\n    this.setState({\n      currentOperation: 'creating',\n      AccountPassword: '', // In order to prevent the password from being accessed later\n    })\n\n    try {\n      const loc = window.location\n      const host = loc.protocol + '//' + loc.hostname + ':' + loc.port\n\n      const response = await fetch(host + '/auth/createuser', {\n        method: 'POST',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          User_AccountName: AccountName,\n          User_AccountPassword: AccountPassword,\n        }),\n      })\n\n      const responseData = await response.json()\n\n      console.log('CREATE USER RESPONSE')\n      console.log(responseData)\n\n      if (responseData.success) {\n        // In case of success, notify user\n        this.setState({ currentOperation: 'success' })\n      } else {\n        // In case of error, tell user what the error is\n        this.setState({ currentOperation: 'failure', errorMessage: responseData.error })\n      }\n    } catch (err) {\n      // In case response could not be received properly, tell the user\n      // In case of error, tell user what the error is\n      this.setState({\n        currentOperation: 'failure',\n        errorMessage:\n          'Did not receive proper response from server. Please try again. Message:' + err.message,\n      })\n    }\n  }\n\n  _handle_onClick_CancelCreation = () => {\n    this.setState({\n      currentOperation: 'failure',\n      errorMessage: 'User creation has been canceled',\n    })\n  }\n\n  _handle_onClick_TryAgain = () => {\n    this.setState({\n      currentOperation: 'prompt',\n      errorMessage: '',\n    })\n  }\n\n  _handle_onClick_Continue = () => {\n    this.context.router.push('/')\n  }\n\n  renderCreating() {\n    const classes = this.props.classes\n    const { AccountName } = this.state\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"Creating user\" />\n        <Typography component=\"p\">\n          Creating user\n          <br />\n          {AccountName}\n          <br />\n          Please wait.\n        </Typography>\n        <LinearProgress mode=\"query\" />\n        <CardActions>\n          <Button onClick={this._handle_onClick_CancelCreation}>Cancel</Button>\n        </CardActions>\n      </Card>\n    )\n  }\n\n  renderSuccess() {\n    const classes = this.props.classes\n    const { AccountName, errorMessage } = this.state\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"Creating user\" />\n        <Typography component=\"p\">\n          Created user\n          <br />\n          {AccountName}\n        </Typography>\n        <CardActions>\n          <Button onClick={this._handle_onClick_Continue}>Continue</Button>\n        </CardActions>\n      </Card>\n    )\n  }\n\n  renderFailure() {\n    const classes = this.props.classes\n    const { AccountName, errorMessage } = this.state\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"Creating user\" />\n        <Typography component=\"p\">\n          Failed creating user\n          <br />\n          {AccountName}\n          <br />\n          Reason: {errorMessage}\n        </Typography>\n        <CardActions>\n          <Button onClick={this._handle_onClick_TryAgain}>Try Again</Button>\n        </CardActions>\n      </Card>\n    )\n  }\n\n  renderPrompt() {\n    const classes = this.props.classes\n    const { AccountName, AccountPassword } = this.state\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"Create New User\" />\n        <TextField\n          label=\"Account Name\"\n          fullWidth={true}\n          value={AccountName}\n          onChange={event => this.setState({ AccountName: event.target.value })}\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          fullWidth={true}\n          value={AccountPassword}\n          onChange={event => this.setState({ AccountPassword: event.target.value })}\n        />\n        <CardActions>\n          <Button onClick={this._handle_onClick_Create}>Create</Button>\n        </CardActions>\n      </Card>\n    )\n  }\n\n  render() {\n    const { currentOperation } = this.state\n\n    return (\n      <ResponsiveContentArea>\n        {currentOperation === 'prompt' && this.renderPrompt()}\n        {currentOperation === 'creating' && this.renderCreating()}\n        {currentOperation === 'success' && this.renderSuccess()}\n        {currentOperation === 'failure' && this.renderFailure()}\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default withStyles(styleSheet)(NewUserScreen)\n"]}