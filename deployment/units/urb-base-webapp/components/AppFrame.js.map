{"version":3,"sources":["../../../../units/urb-base-webapp/components/AppFrame.jsx"],"names":["styles","html","boxSizing","body","margin","background","theme","palette","default","color","text","primary","lineHeight","overflowX","WebkitFontSmoothing","MozOsxFontSmoothing","img","maxWidth","height","width","appFrame","display","alignItems","minHeight","grow","flex","title","marginLeft","appBar","transition","transitions","create","breakpoints","up","drawer","appBarShift","navIconHide","AppFrame","props","context","handleDrawerClose","setState","drawerOpen","handleDrawerToggle","state","children","classes","Viewer","drawerDocked","appBarClassName","navIconClassName","icon","appBarHome"],"mappings":"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","file":"AppFrame.js","sourcesContent":["// @flow\n\nimport AppBar from 'material-ui/AppBar'\nimport IconButton from 'material-ui/IconButton'\nimport MenuIcon from 'material-ui-icons/Menu'\nimport React, { Component } from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\nimport { withStyles } from 'material-ui/styles'\nimport Toolbar from 'material-ui/Toolbar'\nimport Typography from 'material-ui/Typography'\n\nimport AppDrawer from './AppDrawer'\nimport NavBarLoginButton from '../../urb-account-management-webapp/components/NavBarLoginButton'\n\nconst styles = theme => ({\n  '@global': {\n    html: {\n      boxSizing: 'border-box',\n    },\n    '*, *:before, *:after': {\n      boxSizing: 'inherit',\n    },\n    body: {\n      margin: 0,\n      background: theme.palette.background.default,\n      color: theme.palette.text.primary,\n      lineHeight: '1.2',\n      overflowX: 'hidden',\n      WebkitFontSmoothing: 'antialiased', // Antialiasing.\n      MozOsxFontSmoothing: 'grayscale', // Antialiasing.\n    },\n    img: {\n      maxWidth: '100%',\n      height: 'auto',\n      width: 'auto',\n    },\n  },\n  appFrame: {\n    display: 'flex',\n    alignItems: 'stretch',\n    minHeight: '100vh',\n    width: '100%',\n  },\n  grow: {\n    flex: '1 1 auto',\n  },\n  title: {\n    marginLeft: 24,\n    flex: '0 1 auto',\n  },\n  appBar: {\n    transition: theme.transitions.create('width'),\n  },\n  // appBarHome: {\n  //   backgroundColor: 'transparent',\n  //   boxShadow: 'none',\n  // },\n  [theme.breakpoints.up('lg')]: {\n    drawer: {\n      width: '250px',\n    },\n    appBarShift: {\n      width: 'calc(100% - 250px)',\n    },\n    navIconHide: {\n      display: 'none',\n    },\n  },\n})\n\nclass AppFrame extends Component<any, { drawerOpen: boolean }> {\n  constructor(props: Object, context: Object) {\n    super(props, context)\n\n    this.state = { drawerOpen: false }\n  }\n\n  handleDrawerClose = () => {\n    this.setState({ drawerOpen: false })\n  }\n\n  handleDrawerToggle = () => {\n    this.setState({ drawerOpen: !this.state.drawerOpen })\n  }\n\n  render() {\n    const { children, classes, width, Viewer } = this.props\n\n    let drawerDocked = false\n\n    let appBarClassName = classes.appBar\n    let navIconClassName = classes.icon\n\n    if (drawerDocked) {\n      navIconClassName += ` ${classes.navIconHide}`\n      appBarClassName += ` ${classes.appBarShift}`\n    } else {\n      appBarClassName += ` ${classes.appBarHome}`\n    }\n\n    const title = 'Hello World'\n\n    return (\n      <div className={classes.appFrame}>\n        <AppBar className={appBarClassName}>\n          <Toolbar>\n            <IconButton\n              color=\"contrast\"\n              onClick={this.handleDrawerToggle}\n              className={navIconClassName}\n            >\n              <MenuIcon />\n            </IconButton>\n            {title !== null &&\n              <Typography className={classes.title} type=\"title\" color=\"inherit\" noWrap>\n                {title}\n              </Typography>}\n            <div className={classes.grow} />\n            <NavBarLoginButton Viewer={Viewer} />\n          </Toolbar>\n        </AppBar>\n        <AppDrawer\n          className={classes.drawer}\n          docked={drawerDocked}\n          onRequestClose={this.handleDrawerClose}\n          open={drawerDocked || this.state.drawerOpen}\n        />\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles(styles)(AppFrame),\n  graphql`\n    fragment AppFrame_Viewer on Viewer {\n      UserToken2\n      ...NavBarLoginButton_Viewer\n    }\n  `,\n)\n"]}