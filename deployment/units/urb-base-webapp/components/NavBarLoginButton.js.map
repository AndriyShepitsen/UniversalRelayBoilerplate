{"version":3,"sources":["../../../../units/urb-base-webapp/components/NavBarLoginButton.jsx"],"names":["styleSheet","NavBarLoginButton","props","context","_handle_onClick_Login","setState","loginDialogIsOpen","_handle_Login_Close","_handle_Login_LogIn","_handle_Login_NewUser","router","push","state","classes","Component","contextTypes","object","isRequired","propTypes","Viewer","relay"],"mappings":";;AAEA,0C;AACA;AACA,qC;AACA,4B;AACA;;AAEA,0C;;AAEA,GAAMA,YAAa,6BAAiB,sBAAU,EAAV,EAAjB,CAAnB,C;;AAEMC,iB;;;;;;;;;;;;;;;AAeJ,2BAAYC,KAAZ,CAA2BC,OAA3B,CAA4C;AACpCD,KADoC,CAC7BC,OAD6B;;;;;AAM5CC,qBAN4C,CAMpB,UAAM;AAC5B,MAAKC,QAAL,CAAc,CAAEC,kBAAmB,IAArB,CAAd;AACD,CAR2C;;AAU5CC,mBAV4C,CAUtB,UAAM;AAC1B,MAAKF,QAAL,CAAc,CAAEC,kBAAmB,KAArB,CAAd;AACD,CAZ2C;;AAc5CE,mBAd4C,CActB,UAAM;AAC1B,MAAKH,QAAL,CAAc,CAAEC,kBAAmB,KAArB,CAAd;AACD,CAhB2C;;AAkB5CG,qBAlB4C,CAkBpB,UAAM;AAC5B,MAAKJ,QAAL,CAAc,CAAEC,kBAAmB,KAArB,CAAd;;AAEA,MAAKH,OAAL,CAAaO,MAAb,CAAoBC,IAApB,CAAyB,WAAzB;AACD,CAtB2C,CAG1C,MAAKC,KAAL,CAAa,CAAEN,kBAAmB,KAArB,CAAb,CAH0C,aAI3C,C;;AAoBQ;AACP,GAAMO,SAAU,KAAKX,KAAL,CAAWW,OAA3B;;AAEA;AACE;AACE,gDAAQ,MAAM,UAAd,CAAyB,QAAS,KAAKT,qBAAvC,UADF;;;AAIE;AACE,KAAM,KAAKQ,KAAL,CAAWN,iBADnB;AAEE,aAAc,KAAKC,mBAFrB;AAGE,aAAc,KAAKC,mBAHrB;AAIE,eAAgB,KAAKC,qBAJvB,EAJF,CADF;;;;AAaD,C,+BAvD6B,gBAAMK,S,EAAhCb,iB,CACGc,Y,CAAe,CACpBL,OAAQ,oBAAUM,MAAV,CAAiBC,UADL,C,CADlBhB,iB,CAKGiB,S,CAAY,CACjBL,QAAS,oBAAUG,MAAV,CAAiBC,UADT,CAEjBE,OAAQ,oBAAUH,MAAV,CAAiBC,UAFR,CAGjBG,MAAO,oBAAUJ,MAAV,CAAiBC,UAHP,C;;;AAqDN;AACb,uBAAWjB,UAAX,EAAuBC,iBAAvB,CADa,iG","file":"NavBarLoginButton.js","sourcesContent":["// @flow\n\nimport Button from 'material-ui/Button'\nimport { createStyleSheet, withStyles } from 'material-ui/styles'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport LoginDialog from './LoginDialog'\n\nconst styleSheet = createStyleSheet(theme => ({}))\n\nclass NavBarLoginButton extends React.Component {\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n  }\n\n  static propTypes = {\n    classes: PropTypes.object.isRequired,\n    Viewer: PropTypes.object.isRequired,\n    relay: PropTypes.object.isRequired,\n  }\n\n  state: {\n    loginDialogIsOpen: boolean,\n  }\n\n  constructor(props: Object, context: Object) {\n    super(props, context)\n\n    this.state = { loginDialogIsOpen: false }\n  }\n\n  _handle_onClick_Login = () => {\n    this.setState({ loginDialogIsOpen: true })\n  }\n\n  _handle_Login_Close = () => {\n    this.setState({ loginDialogIsOpen: false })\n  }\n\n  _handle_Login_LogIn = () => {\n    this.setState({ loginDialogIsOpen: false })\n  }\n\n  _handle_Login_NewUser = () => {\n    this.setState({ loginDialogIsOpen: false })\n\n    this.context.router.push('/user/new')\n  }\n\n  render() {\n    const classes = this.props.classes\n\n    return (\n      <div>\n        <Button color=\"contrast\" onClick={this._handle_onClick_Login}>\n          Login\n        </Button>\n        <LoginDialog\n          open={this.state.loginDialogIsOpen}\n          handlerClose={this._handle_Login_Close}\n          handlerLogIn={this._handle_Login_LogIn}\n          handlerNewUser={this._handle_Login_NewUser}\n        />\n      </div>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles(styleSheet)(NavBarLoginButton),\n  graphql`\n    fragment NavBarLoginButton_Viewer on Viewer {\n      id\n    }\n  `,\n)\n"]}