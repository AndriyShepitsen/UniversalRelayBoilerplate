{"version":3,"sources":["../../../../units/urb-base-webapp/components/AppDrawerNavItem.jsx"],"names":["styleSheet","button","theme","mixins","gutters","borderRadius","justifyContent","textTransform","width","transition","transitions","create","duration","shortest","textDecoration","navItem","typography","body2","display","paddingTop","paddingBottom","navLink","fontWeight","fontWeightRegular","navLinkButton","color","palette","text","secondary","textIndent","fontSize","activeButton","primary","AppDrawerNavItem","state","open","handleClick","setState","props","openImmediately","children","classes","title","to","onClick","defaultProps","propTypes","node","object","isRequired","func","bool","string"],"mappings":";;AAEA,4B;AACA,qC;AACA,sC;AACA;AACA;AACA,0C;AACA,0D;;AAEA,GAAMA,YAAa,6BAAiB,kBAAjB,CAAqC,sBAAU;AAChEC,OAAQC,MAAMC,MAAN,CAAaC,OAAb,CAAqB;AAC3BC,aAAc,CADa;AAE3BC,eAAgB,YAFW;AAG3BC,cAAe,MAHY;AAI3BC,MAAO,MAJoB;AAK3BC,WAAYP,MAAMQ,WAAN,CAAkBC,MAAlB,CAAyB,kBAAzB,CAA6C;AACvDC,SAAUV,MAAMQ,WAAN,CAAkBE,QAAlB,CAA2BC,QADkB,CAA7C,CALe;;AAQ3B,UAAW;AACTC,eAAgB,MADP,CARgB,CAArB,CADwD;;;AAahEC;AACKb,MAAMc,UAAN,CAAiBC,KADtB;AAEEC,QAAS,OAFX;AAGEC,WAAY,CAHd;AAIEC,cAAe,CAJjB,EAbgE;;AAmBhEC,QAAS;AACPC,WAAYpB,MAAMc,UAAN,CAAiBO,iBADtB;AAEPL,QAAS,MAFF;AAGPC,WAAY,CAHL;AAIPC,cAAe,CAJR,CAnBuD;;AAyBhEI,cAAe;AACbC,MAAOvB,MAAMwB,OAAN,CAAcC,IAAd,CAAmBC,SADb;AAEbC,WAAY,EAFC;AAGbC,SAAU,EAHG,CAzBiD;;AA8BhEC,aAAc;AACZN,MAAOvB,MAAMwB,OAAN,CAAcC,IAAd,CAAmBK,OADd,CA9BkD,CAAV,EAArC,CAAnB,C;;;;AAmCMC,gB;;;;;AAKJC,K,CAAQ;AACNC,KAAM,KADA,C;;;;;;;;;AAURC,W,CAAc,UAAM;AAClB,MAAKC,QAAL,CAAc,CAAEF,KAAM,CAAC,MAAKD,KAAL,CAAWC,IAApB,CAAd;AACD,C,4IARoB,CACnB,GAAI,KAAKG,KAAL,CAAWC,eAAf,CAAgC,CAC9B,KAAKF,QAAL,CAAc,CAAEF,KAAM,IAAR,CAAd,EACD,CACF,C;;AAMQ;AACkC,KAAKG,KADvC,CACCE,QADD,QACCA,QADD,CACWC,OADX,QACWA,OADX,CACoBC,KADpB,QACoBA,KADpB,CAC2BC,EAD3B,QAC2BA,EAD3B;;AAGP,GAAIA,EAAJ,CAAQ;AACN;AACE,8CAAU,UAAWF,QAAQpB,OAA7B,CAAsC,mBAAtC;AACE;AACE,GAAIsB,EADN;AAEE,UAAW,yBAAWF,QAAQxC,MAAnB,CAA2BwC,QAAQjB,aAAnC,CAFb;AAGE,gBAAiBiB,QAAQV,YAH3B;AAIE,kBAJF;AAKE,QAAS,KAAKO,KAAL,CAAWM,OALtB;;AAOGF,KAPH,CADF,CADF;;;;AAaD;;AAED;AACE,8CAAU,UAAWD,QAAQ1B,OAA7B,CAAsC,mBAAtC;AACE,gDAAQ,UAAW0B,QAAQxC,MAA3B,CAAmC,QAAS,KAAKmC,WAAjD;AACGM,KADH,CADF;;AAIE,kDAAU,KAAI,KAAKR,KAAL,CAAWC,IAAzB,CAA+B,mBAAmB,MAAlD,CAAyD,kBAAzD;AACGK,QADH,CAJF,CADF;;;;AAUD,C,gDAhDGP,gB,CACGY,Y,CAAe,CACpBN,gBAAiB,KADG,C;;;AAkDxBN,iBAAiBa,SAAjB,CAA6B;AAC3BN,SAAU,oBAAUO,IADO;AAE3BN,QAAS,oBAAUO,MAAV,CAAiBC,UAFC;AAG3BL,QAAS,oBAAUM,IAHQ;AAI3BX,gBAAiB,oBAAUY,IAJA;AAK3BT,MAAO,oBAAUU,MAAV,CAAiBH,UALG;AAM3BN,GAAI,oBAAUS,MANa,CAA7B,C;;;AASe,uBAAWpD,UAAX,EAAuBiC,gBAAvB,C","file":"AppDrawerNavItem.js","sourcesContent":["// @flow\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { withStyles, createStyleSheet } from 'material-ui/styles'\nimport { ListItem } from 'material-ui/List'\nimport Button from 'material-ui/Button'\nimport Collapse from 'material-ui/transitions/Collapse'\n\nconst styleSheet = createStyleSheet('AppDrawerNavItem', theme => ({\n  button: theme.mixins.gutters({\n    borderRadius: 0,\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    width: '100%',\n    transition: theme.transitions.create('background-color', {\n      duration: theme.transitions.duration.shortest,\n    }),\n    '&:hover': {\n      textDecoration: 'none',\n    },\n  }),\n  navItem: {\n    ...theme.typography.body2,\n    display: 'block',\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  navLink: {\n    fontWeight: theme.typography.fontWeightRegular,\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  navLinkButton: {\n    color: theme.palette.text.secondary,\n    textIndent: 24,\n    fontSize: 13,\n  },\n  activeButton: {\n    color: theme.palette.text.primary,\n  },\n}))\n\nclass AppDrawerNavItem extends Component {\n  static defaultProps = {\n    openImmediately: false,\n  }\n\n  state = {\n    open: false,\n  }\n\n  componentWillMount() {\n    if (this.props.openImmediately) {\n      this.setState({ open: true })\n    }\n  }\n\n  handleClick = () => {\n    this.setState({ open: !this.state.open })\n  }\n\n  render() {\n    const { children, classes, title, to } = this.props\n\n    if (to) {\n      return (\n        <ListItem className={classes.navLink} disableGutters>\n          <Button\n            to={to}\n            className={classNames(classes.button, classes.navLinkButton)}\n            activeClassName={classes.activeButton}\n            disableRipple\n            onClick={this.props.onClick}\n          >\n            {title}\n          </Button>\n        </ListItem>\n      )\n    }\n\n    return (\n      <ListItem className={classes.navItem} disableGutters>\n        <Button className={classes.button} onClick={this.handleClick}>\n          {title}\n        </Button>\n        <Collapse in={this.state.open} transitionDuration=\"auto\" unmountOnExit>\n          {children}\n        </Collapse>\n      </ListItem>\n    )\n  }\n}\n\nAppDrawerNavItem.propTypes = {\n  children: PropTypes.node,\n  classes: PropTypes.object.isRequired,\n  onClick: PropTypes.func,\n  openImmediately: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  to: PropTypes.string,\n}\n\nexport default withStyles(styleSheet)(AppDrawerNavItem)\n"]}