{"version":3,"sources":["../../../../units/urb-base-webapp/components/AppDrawerNavItem.jsx"],"names":["styles","button","theme","mixins","gutters","borderRadius","justifyContent","textTransform","width","transition","transitions","create","duration","shortest","textDecoration","navItem","typography","body2","display","paddingTop","paddingBottom","navLink","fontWeight","fontWeightRegular","navLinkButton","color","palette","text","secondary","textIndent","fontSize","activeButton","primary","AppDrawerNavItem","state","open","handleClick","setState","props","openImmediately","children","classes","title","to","onClick","Component","defaultProps"],"mappings":";;AAEA,sC;AACA,4B;AACA,0C;AACA,0D;AACA;AACA;;AAEA,4B;;AAEA,GAAMA,QAAS,QAATA,OAAS,cAAU;AACvBC,OAAQC,MAAMC,MAAN,CAAaC,OAAb,CAAqB;AAC3BC,aAAc,CADa;AAE3BC,eAAgB,YAFW;AAG3BC,cAAe,MAHY;AAI3BC,MAAO,MAJoB;AAK3BC,WAAYP,MAAMQ,WAAN,CAAkBC,MAAlB,CAA0B,kBAA1B,CAA8C;AACxDC,SAAUV,MAAMQ,WAAN,CAAkBE,QAAlB,CAA2BC,QADmB,CAA9C,CALe;;AAQ3B,UAAW;AACTC,eAAgB,MADP,CARgB,CAArB,CADe;;;AAavBC;AACKb,MAAMc,UAAN,CAAiBC,KADtB;AAEEC,QAAS,OAFX;AAGEC,WAAY,CAHd;AAIEC,cAAe,CAJjB,EAbuB;;AAmBvBC,QAAS;AACPC,WAAYpB,MAAMc,UAAN,CAAiBO,iBADtB;AAEPL,QAAS,MAFF;AAGPC,WAAY,CAHL;AAIPC,cAAe,CAJR,CAnBc;;AAyBvBI,cAAe;AACbC,MAAOvB,MAAMwB,OAAN,CAAcC,IAAd,CAAmBC,SADb;AAEbC,WAAY,EAFC;AAGbC,SAAU,EAHG,CAzBQ;;AA8BvBC,aAAc;AACZN,MAAOvB,MAAMwB,OAAN,CAAcC,IAAd,CAAmBK,OADd,CA9BS,CAAV,EAAf,C;;;;AAmCMC,gB;;;;;;;;;;;;;;;AAeJC,K,CAAQ;AACNC,KAAM,KADA,C;;;;;;;;;AAURC,W,CAAc,UAAM;AAClB,MAAKC,QAAL,CAAc,CAAEF,KAAM,CAAC,MAAKD,KAAL,CAAWC,IAApB,CAAd;AACD,C,4IARoB,CACnB,GAAK,KAAKG,KAAL,CAAWC,eAAhB,CAAkC,CAChC,KAAKF,QAAL,CAAc,CAAEF,KAAM,IAAR,CAAd,EACD,CACF,C;;AAMQ;AACkC,KAAKG,KADvC,CACCE,QADD,QACCA,QADD,CACWC,OADX,QACWA,OADX,CACoBC,KADpB,QACoBA,KADpB,CAC2BC,EAD3B,QAC2BA,EAD3B;;AAGP,GAAKA,EAAL,CAAU;AACR;AACE,8CAAU,UAAWF,QAAQpB,OAA7B,CAAsC,mBAAtC;AACE;AACE,wBADF;AAEE,GAAIsB,EAFN;AAGE,UAAW,yBAAYF,QAAQxC,MAApB,CAA4BwC,QAAQjB,aAApC,CAHb;AAIE,gBAAiBiB,QAAQV,YAJ3B;AAKE,kBALF;AAME,QAAS,KAAKO,KAAL,CAAWM,OANtB;;AAQGF,KARH,CADF,CADF;;;;AAcD;;AAED;AACE,8CAAU,UAAWD,QAAQ1B,OAA7B,CAAsC,mBAAtC;AACE,gDAAQ,UAAW0B,QAAQxC,MAA3B,CAAmC,QAAS,KAAKmC,WAAjD;AACGM,KADH,CADF;;AAIE,kDAAU,KAAI,KAAKR,KAAL,CAAWC,IAAzB,CAA+B,mBAAmB,MAAlD,CAAyD,kBAAzD;AACGK,QADH,CAJF,CADF;;;;AAUD,C,8BA3D4B,gBAAMK,S,EAA/BZ,gB,CAWGa,Y,CAAe,CACpBP,gBAAiB,KADG,C;;;AAmDT,uBAAYvC,MAAZ,EAAsBiC,gBAAtB,C","file":"AppDrawerNavItem.js","sourcesContent":["// @flow\n\nimport classNames from 'classnames'\nimport React from 'react'\nimport Button from 'material-ui/Button'\nimport Collapse from 'material-ui/transitions/Collapse'\nimport { withStyles } from 'material-ui/styles'\nimport { ListItem } from 'material-ui/List'\n\nimport Link from './Link'\n\nconst styles = theme => ({\n  button: theme.mixins.gutters({\n    borderRadius: 0,\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    width: '100%',\n    transition: theme.transitions.create( 'background-color', {\n      duration: theme.transitions.duration.shortest,\n    }),\n    '&:hover': {\n      textDecoration: 'none',\n    },\n  }),\n  navItem: {\n    ...theme.typography.body2,\n    display: 'block',\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  navLink: {\n    fontWeight: theme.typography.fontWeightRegular,\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  navLinkButton: {\n    color: theme.palette.text.secondary,\n    textIndent: 24,\n    fontSize: 13,\n  },\n  activeButton: {\n    color: theme.palette.text.primary,\n  },\n})\n\nclass AppDrawerNavItem extends React.Component<\n  {\n    children: Object,\n    classes: Object,\n    onClick: Function,\n    openImmediately: boolean,\n    title: string,\n    to: string\n  },\n  { open: boolean }\n> {\n  static defaultProps = {\n    openImmediately: false,\n  }\n\n  state = {\n    open: false,\n  }\n\n  componentWillMount() {\n    if ( this.props.openImmediately ) {\n      this.setState({ open: true })\n    }\n  }\n\n  handleClick = () => {\n    this.setState({ open: !this.state.open })\n  }\n\n  render() {\n    const { children, classes, title, to } = this.props\n\n    if ( to ) {\n      return (\n        <ListItem className={classes.navLink} disableGutters>\n          <Button\n            component={Link}\n            to={to}\n            className={classNames( classes.button, classes.navLinkButton )}\n            activeClassName={classes.activeButton}\n            disableRipple\n            onClick={this.props.onClick}\n          >\n            {title}\n          </Button>\n        </ListItem>\n      )\n    }\n\n    return (\n      <ListItem className={classes.navItem} disableGutters>\n        <Button className={classes.button} onClick={this.handleClick}>\n          {title}\n        </Button>\n        <Collapse in={this.state.open} transitionDuration=\"auto\" unmountOnExit>\n          {children}\n        </Collapse>\n      </ListItem>\n    )\n  }\n}\n\nexport default withStyles( styles )( AppDrawerNavItem )\n"]}