{"version":3,"sources":["../../../../../units/urb-example-todo-server/graphql/mutation/ToDoListUpdateMarkAll.js"],"names":["name","inputFields","ToDo_Complete","type","outputFields","changedToDos","resolve","args","context","arr_local_ids_Changed_ToDos","objectManager","rootValue","map","getOneObject","id","local_id","Viewer","parent","getViewerUserId","mutateAndGetPayload"],"mappings":";;AAEA;AACA;;AAEA,sE;AACA,0C;AACA,qF;;AAEe,+CAA6B;AAC1CA,KAAM,uBADoC;;AAG1CC,YAAa;AACXC,cAAe,CAAEC,KAAM,oDAAR,CADJ,CAH6B;;;AAO1CC,aAAc;AACZC,aAAc;AACZF,KAAM,4CADM;AAEZG,QAAS,sBAAkCC,IAAlC,CAAwCC,OAAxC,WAAGC,4BAAH,MAAGA,2BAAH,IAA8DC,cAA9D,OAAmDC,SAAnD;AACPF,4BAA4BG,GAA5B,CAAgC;AAC9BF,cAAcG,YAAd,CAA2B,MAA3B,CAAmC,CAAEC,GAAIC,QAAN,CAAnC,CAD8B,GAAhC,CADO,GAFG,CADF;;;;AASZC,OAAQ;AACNb,yBADM;AAENG,QAAS,iBAACW,MAAD,CAASV,IAAT,CAAeC,OAAf,WAAqCE,cAArC,OAA0BC,SAA1B;AACPD,cAAcG,YAAd,CAA2B,MAA3B,CAAmC,CAAEC,GAAIJ,cAAcQ,eAAd,EAAN,CAAnC,CADO,GAFH,CATI,CAP4B;;;;AAuB1CC,oBAAqB,mCAA0BX,OAA1B,WAASN,cAAT,OAASA,aAAT,IAAgDQ,cAAhD,OAAqCC,SAArC;AACuB,oCAAsBD,aAAtB,CAAqCR,aAArC,CADvB,SACbO,2BADa;;AAGZ,CAAEA,uDAAF,CAHY,2DAvBqB,CAA7B,C","file":"ToDoListUpdateMarkAll.js","sourcesContent":["// @flow weak\n\nimport { mutationWithClientMutationId } from 'graphql-relay'\nimport { GraphQLBoolean, GraphQLList, GraphQLNonNull } from 'graphql'\n\nimport ToDoListUpdateMarkAll from '../helper/ToDoListUpdateMarkAll'\nimport ToDoType from '../type/ToDoType'\nimport ViewerType from '../../../../units/urb-base-server/graphql/type/ViewerType'\n\nexport default mutationWithClientMutationId({\n  name: 'ToDoListUpdateMarkAll',\n\n  inputFields: {\n    ToDo_Complete: { type: new GraphQLNonNull(GraphQLBoolean) },\n  },\n\n  outputFields: {\n    changedToDos: {\n      type: new GraphQLList(ToDoType),\n      resolve: ({ arr_local_ids_Changed_ToDos }, args, context, { rootValue: objectManager }) =>\n        arr_local_ids_Changed_ToDos.map(local_id =>\n          objectManager.getOneObject('ToDo', { id: local_id }),\n        ),\n    },\n\n    Viewer: {\n      type: ViewerType,\n      resolve: (parent, args, context, { rootValue: objectManager }) =>\n        objectManager.getOneObject('User', { id: objectManager.getViewerUserId() }),\n    },\n  },\n\n  mutateAndGetPayload: async ({ ToDo_Complete }, context, { rootValue: objectManager }) => {\n    const arr_local_ids_Changed_ToDos = await ToDoListUpdateMarkAll(objectManager, ToDo_Complete)\n\n    return { arr_local_ids_Changed_ToDos }\n  },\n})\n"]}