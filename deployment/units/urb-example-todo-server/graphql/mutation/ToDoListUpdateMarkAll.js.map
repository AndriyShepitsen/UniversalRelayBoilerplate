{"version":3,"sources":["../../../../../units/urb-example-todo-server/graphql/mutation/ToDoListUpdateMarkAll.js"],"names":["name","inputFields","ToDo_Complete","type","outputFields","changedToDos","resolve","args","context","arr_local_ids_Changed_ToDos","objectManager","rootValue","map","getOneObject","id","local_id","Viewer","parent","getViewerUserId","mutateAndGetPayload"],"mappings":";;AAEA;AACA;;AAEA,sE;AACA,0C;AACA,qF;;AAEe,+CAA6B;AAC1CA,KAAM,uBADoC;;AAG1CC,YAAa;AACXC,cAAe,CAAEC,KAAM,oDAAR,CADJ,CAH6B;;;AAO1CC,aAAc;AACZC,aAAc;AACZF,KAAM,4CADM;AAEZG,QAAS;;AAEPC,IAFO;AAGPC,OAHO,WACLC,4BADK,MACLA,2BADK;AAIMC,aAJN,OAILC,SAJK;;AAMPF,4BAA4BG,GAA5B,CAAiC;AAC/BF,cAAcG,YAAd,CAA4B,MAA5B,CAAoC,CAAEC,GAAIC,QAAN,CAApC,CAD+B,GAAjC,CANO,GAFG,CADF;;;;AAcZC,OAAQ;AACNb,yBADM;AAENG,QAAS,iBAAEW,MAAF,CAAUV,IAAV,CAAgBC,OAAhB,WAAsCE,cAAtC,OAA2BC,SAA3B;AACPD,cAAcG,YAAd,CAA4B,MAA5B,CAAoC;AAClCC,GAAIJ,cAAcQ,eAAd,EAD8B,CAApC,CADO,GAFH,CAdI,CAP4B;;;;;AA8B1CC,oBAAqB;;AAEnBX,OAFmB,WACjBN,cADiB,OACjBA,aADiB;AAGNQ,aAHM,OAGjBC,SAHiB;;AAKuB;AACxCD,aADwC;AAExCR,aAFwC,CALvB,SAKbO,2BALa;;;AAUZ,CAAEA,uDAAF,CAVY,2DA9BqB,CAA7B,C","file":"ToDoListUpdateMarkAll.js","sourcesContent":["// @flow weak\n\nimport { mutationWithClientMutationId } from 'graphql-relay'\nimport { GraphQLBoolean, GraphQLList, GraphQLNonNull } from 'graphql'\n\nimport ToDoListUpdateMarkAll from '../helper/ToDoListUpdateMarkAll'\nimport ToDoType from '../type/ToDoType'\nimport ViewerType from '../../../../units/urb-base-server/graphql/type/ViewerType'\n\nexport default mutationWithClientMutationId({\n  name: 'ToDoListUpdateMarkAll',\n\n  inputFields: {\n    ToDo_Complete: { type: new GraphQLNonNull( GraphQLBoolean ) },\n  },\n\n  outputFields: {\n    changedToDos: {\n      type: new GraphQLList( ToDoType ),\n      resolve: (\n        { arr_local_ids_Changed_ToDos },\n        args,\n        context,\n        { rootValue: objectManager }\n      ) =>\n        arr_local_ids_Changed_ToDos.map( local_id =>\n          objectManager.getOneObject( 'ToDo', { id: local_id })\n        ),\n    },\n\n    Viewer: {\n      type: ViewerType,\n      resolve: ( parent, args, context, { rootValue: objectManager }) =>\n        objectManager.getOneObject( 'User', {\n          id: objectManager.getViewerUserId(),\n        }),\n    },\n  },\n\n  mutateAndGetPayload: async(\n    { ToDo_Complete },\n    context,\n    { rootValue: objectManager }\n  ) => {\n    const arr_local_ids_Changed_ToDos = await ToDoListUpdateMarkAll(\n      objectManager,\n      ToDo_Complete\n    )\n\n    return { arr_local_ids_Changed_ToDos }\n  },\n})\n"]}