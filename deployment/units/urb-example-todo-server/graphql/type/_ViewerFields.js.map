{"version":3,"sources":["../../../../../units/urb-example-todo-server/graphql/type/_ViewerFields.js"],"names":["ToDos","type","connectionType","args","status","defaultValue","resolve","obj","context","objectManager","rootValue","getObjectList","ToDo_User_id","getViewerUserId","arr","filter","a_ToDo","ToDo_Complete","ToDo_TotalCount","length","ToDo_CompletedCount"],"mappings":";;AAEA;AACA;;AAEA,kD;;AAEe;AACbA,MAAO;AACLC,KAAM,0BAAgBC,cADjB;;AAGLC;AACEC,OAAQ;AACNH,2BADM;AAENI,aAAc,KAFR,CADV,+BAHK;;;;;AAWLC,QAAS,iBAAOC,GAAP,MAAiCC,OAAjC,WAAcJ,OAAd,MAAcA,MAAd,CAAyBD,IAAzB,8CAAuDM,cAAvD,OAA4CC,SAA5C;AACWD,cAAcE,aAAd,CAA4B,MAA5B,CAAoC;AACpDC,aAAcH,cAAcI,eAAd,EADsC,CAApC,CADX,SACDC,GADC;;;AAKA;AACLA,IAAIC,MAAJ,CAAW,uBAAUX,UAAW,KAAX,EAAoBY,OAAOC,aAAP,IAA0Bb,SAAW,WAArC,CAA9B,EAAX,CADK;AAELD,IAFK,CALA,2DAXJ,CADM;;;;;AAwBbe,gBAAiB;AACfjB,wBADe;;AAGfK,QAAS,iBAAOC,GAAP,OAAyBC,OAAzB,WAAiBL,KAAjB,uCAA+CM,cAA/C,OAAoCC,SAApC;AACWD,cAAcE,aAAd,CAA4B,MAA5B,CAAoC;AACpDC,aAAcH,cAAcI,eAAd,EADsC,CAApC,CADX,SACDC,GADC;;;AAKAA,IAAIK,MALJ,4DAHM,CAxBJ;;;;AAoCbC,oBAAqB;AACnBnB,wBADmB;;AAGnBK,QAAS,iBAAOC,GAAP,OAAyBC,OAAzB,WAAiBL,KAAjB,uCAA+CM,cAA/C,OAAoCC,SAApC;AACWD,cAAcE,aAAd,CAA4B,MAA5B,CAAoC;AACpDC,aAAcH,cAAcI,eAAd,EADsC,CAApC,CADX,SACDC,GADC;;;AAKAA,IAAIC,MAAJ,CAAW,uBAAUC,QAAOC,aAAjB,EAAX,EAA2CE,MAL3C,4DAHU,CApCR,C","file":"_ViewerFields.js","sourcesContent":["// @flow weak\n\nimport { GraphQLInt, GraphQLString } from 'graphql'\nimport { connectionArgs, connectionFromArray } from 'graphql-relay'\n\nimport ToDosConnection from './ToDosConnection'\n\nexport default {\n  ToDos: {\n    type: ToDosConnection.connectionType,\n\n    args: {\n      status: {\n        type: GraphQLString,\n        defaultValue: 'any',\n      },\n      ...connectionArgs,\n    },\n\n    resolve: async (obj, { status, ...args }, context, { rootValue: objectManager }) => {\n      const arr = await objectManager.getObjectList('ToDo', {\n        ToDo_User_id: objectManager.getViewerUserId(),\n      })\n\n      return connectionFromArray(\n        arr.filter(a_ToDo => status === 'any' || a_ToDo.ToDo_Complete === (status === 'completed')),\n        args,\n      )\n    },\n  },\n\n  ToDo_TotalCount: {\n    type: GraphQLInt,\n\n    resolve: async (obj, { ...args }, context, { rootValue: objectManager }) => {\n      const arr = await objectManager.getObjectList('ToDo', {\n        ToDo_User_id: objectManager.getViewerUserId(),\n      })\n\n      return arr.length\n    },\n  },\n\n  ToDo_CompletedCount: {\n    type: GraphQLInt,\n\n    resolve: async (obj, { ...args }, context, { rootValue: objectManager }) => {\n      const arr = await objectManager.getObjectList('ToDo', {\n        ToDo_User_id: objectManager.getViewerUserId(),\n      })\n\n      return arr.filter(a_ToDo => a_ToDo.ToDo_Complete).length\n    },\n  },\n}\n"]}