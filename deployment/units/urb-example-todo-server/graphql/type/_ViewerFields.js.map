{"version":3,"sources":["../../../../../units/urb-example-todo-server/graphql/type/_ViewerFields.js"],"names":["ToDos","type","connectionType","args","status","defaultValue","resolve","obj","context","objectManager","rootValue","getObjectList","ToDo_User_id","getViewerUserId","arr","filter","a_ToDo","ToDo_Complete","ToDo_TotalCount","length","ToDo_CompletedCount"],"mappings":";;AAEA;AACA;;AAEA,kD;;AAEe;AACbA,MAAO;AACLC,KAAM,0BAAgBC,cADjB;;AAGLC;AACEC,OAAQ;AACNH,2BADM;AAENI,aAAc,KAFR,CADV,+BAHK;;;;;AAWLC,QAAS;AACPC,GADO;;AAGPC,OAHO,WAELJ,OAFK,MAELA,MAFK,CAEMD,IAFN;AAIMM,aAJN,OAILC,SAJK;;AAMWD,cAAcE,aAAd,CAA4B,MAA5B,CAAoC;AACpDC,aAAcH,cAAcI,eAAd,EADsC,CAApC,CANX,SAMDC,GANC;;;AAUA;AACLA,IAAIC,MAAJ;AACE;AACEX,SAAW,KAAX;AACAY,OAAOC,aAAP,IAA0Bb,SAAW,WAArC,CAFF,GADF,CADK;;AAMLD,IANK,CAVA,2DAXJ,CADM;;;;;AAiCbe,gBAAiB;AACfjB,wBADe;;AAGfK,QAAS;AACPC,GADO;;AAGPC,OAHO,WAEFL,KAFE;AAIMM,aAJN,OAILC,SAJK;;AAMWD,cAAcE,aAAd,CAA4B,MAA5B,CAAoC;AACpDC,aAAcH,cAAcI,eAAd,EADsC,CAApC,CANX,SAMDC,GANC;;;AAUAA,IAAIK,MAVJ,4DAHM,CAjCJ;;;;AAkDbC,oBAAqB;AACnBnB,wBADmB;;AAGnBK,QAAS;AACPC,GADO;;AAGPC,OAHO,WAEFL,KAFE;AAIMM,aAJN,OAILC,SAJK;;AAMWD,cAAcE,aAAd,CAA4B,MAA5B,CAAoC;AACpDC,aAAcH,cAAcI,eAAd,EADsC,CAApC,CANX,SAMDC,GANC;;;AAUAA,IAAIC,MAAJ,CAAW,uBAAUC,QAAOC,aAAjB,EAAX,EAA2CE,MAV3C,4DAHU,CAlDR,C","file":"_ViewerFields.js","sourcesContent":["// @flow weak\n\nimport { GraphQLInt, GraphQLString } from 'graphql'\nimport { connectionArgs, connectionFromArray } from 'graphql-relay'\n\nimport ToDosConnection from './ToDosConnection'\n\nexport default {\n  ToDos: {\n    type: ToDosConnection.connectionType,\n\n    args: {\n      status: {\n        type: GraphQLString,\n        defaultValue: 'any',\n      },\n      ...connectionArgs,\n    },\n\n    resolve: async(\n      obj,\n      { status, ...args },\n      context,\n      { rootValue: objectManager }\n    ) => {\n      const arr = await objectManager.getObjectList('ToDo', {\n        ToDo_User_id: objectManager.getViewerUserId(),\n      })\n\n      return connectionFromArray(\n        arr.filter(\n          a_ToDo =>\n            status === 'any' ||\n            a_ToDo.ToDo_Complete === (status === 'completed')\n        ),\n        args\n      )\n    },\n  },\n\n  ToDo_TotalCount: {\n    type: GraphQLInt,\n\n    resolve: async(\n      obj,\n      { ...args },\n      context,\n      { rootValue: objectManager }\n    ) => {\n      const arr = await objectManager.getObjectList('ToDo', {\n        ToDo_User_id: objectManager.getViewerUserId(),\n      })\n\n      return arr.length\n    },\n  },\n\n  ToDo_CompletedCount: {\n    type: GraphQLInt,\n\n    resolve: async(\n      obj,\n      { ...args },\n      context,\n      { rootValue: objectManager }\n    ) => {\n      const arr = await objectManager.getObjectList('ToDo', {\n        ToDo_User_id: objectManager.getViewerUserId(),\n      })\n\n      return arr.filter(a_ToDo => a_ToDo.ToDo_Complete).length\n    },\n  },\n}\n"]}