{"version":3,"sources":["../../../../units/urb-example-todo-client/relay/ToDoDeleteMutation.js"],"names":["mutation","sharedUpdater","store","user","deletedId","userProxy","get","id","forEach","connection","getConnection","status","deleteNode","commit","environment","aToDo","variables","input","updater","payload","getRootField","getValue","optimisticUpdater","ToDo_TotalCount","setValue","ToDo_CompletedCount","ToDo_Complete"],"mappings":";;AAEA;AACA;;AAEA,GAAMA,4FAAN;;;;;;;;;;;;AAYA,QAASC,cAAT,CAAwBC,KAAxB,CAA+BC,IAA/B,CAAqCC,SAArC,CAAiD;AAC/C,GAAMC,WAAYH,MAAMI,GAAN,CAAWH,KAAKI,EAAhB,CAAlB;AACC,CAAE,KAAF,CAAS,QAAT,CAAmB,WAAnB,EAAiCC,OAAjC,CAA0C,gBAAU;AACnD,GAAMC,YAAa,gCAAkBC,aAAlB;AACjBL,SADiB;AAEjB,gBAFiB;AAGjB,CAAEM,aAAF,CAHiB,CAAnB;;AAKA,GAAKF,UAAL,CAAkB;AAChB,gCAAkBG,UAAlB,CAA8BH,UAA9B,CAA0CL,SAA1C;AACD;AACF,CATA;AAUF;;AAED,QAASS,OAAT,CAAiBC,WAAjB,CAA8BX,IAA9B,CAAoCY,KAApC,CAA4C;AAC1C,MAAO,+BAAgBD,WAAhB,CAA6B;AAClCd,iBADkC;AAElCgB,UAAW;AACTC,MAAO,CAAEV,GAAIQ,MAAMR,EAAZ,CADE,CAFuB;;;AAMlCW,OANkC,kBAMzBhB,KANyB,CAMjB;AACf,GAAMiB,SAAUjB,MAAMkB,YAAN,CAAoB,YAApB,CAAhB;AACAnB,cAAeC,KAAf,CAAsBC,IAAtB,CAA4BgB,QAAQE,QAAR,CAAkB,WAAlB,CAA5B;AACD,CATiC;;AAWlCC,iBAXkC,4BAWfpB,KAXe,CAWP;AACzBD,cAAeC,KAAf,CAAsBC,IAAtB,CAA4BY,MAAMR,EAAlC;;AAEA,GAAMF,WAAYH,MAAMI,GAAN,CAAWH,KAAKI,EAAhB,CAAlB;AACA,GAAMgB,iBAAkBlB,UAAUgB,QAAV,CAAoB,iBAApB,CAAxB;AACA,GAAKE,iBAAmB,IAAxB,CAA+B;AAC7BlB,UAAUmB,QAAV,CAAoBD,gBAAkB,CAAtC,CAAyC,iBAAzC;AACD;AACD,GAAME,qBAAsBpB,UAAUgB,QAAV,CAAoB,qBAApB,CAA5B;AACA,GAAKI,qBAAuB,IAA5B,CAAmC;AACjC,GAAKV,MAAMW,aAAN,EAAuB,IAA5B,CAAmC;AACjC,GAAKX,MAAMW,aAAX,CAA2B;AACzBrB,UAAUmB,QAAV,CAAoBC,oBAAsB,CAA1C,CAA6C,qBAA7C;AACD;AACF,CAJD,IAIO,IAAKF,iBAAmB,IAAxB,CAA+B;;AAEpC,GAAKA,gBAAkB,CAAlB,CAAsBE,mBAA3B,CAAiD;AAC/CpB,UAAUmB,QAAV,CAAoBD,gBAAkB,CAAtC,CAAyC,qBAAzC;AACD;AACF;AACF;AACF,CAhCiC,CAA7B,CAAP;;AAkCD,C;;AAEc,CAAEV,aAAF,C","file":"ToDoDeleteMutation.js","sourcesContent":["// @flow weak\n\nimport { commitMutation, graphql } from 'react-relay'\nimport { ConnectionHandler } from 'relay-runtime'\n\nconst mutation = graphql`\n  mutation ToDoDeleteMutation($input: ToDoDeleteInput!) {\n    ToDoDelete(input: $input) {\n      Viewer {\n        ToDo_TotalCount\n        ToDo_CompletedCount\n      }\n      deletedId\n    }\n  }\n`\n\nfunction sharedUpdater( store, user, deletedId ) {\n  const userProxy = store.get( user.id )\n  ;[ 'any', 'active', 'completed' ].forEach( status => {\n    const connection = ConnectionHandler.getConnection(\n      userProxy,\n      'ToDoList_ToDos',\n      { status }\n    )\n    if ( connection ) {\n      ConnectionHandler.deleteNode( connection, deletedId )\n    }\n  })\n}\n\nfunction commit( environment, user, aToDo ) {\n  return commitMutation( environment, {\n    mutation,\n    variables: {\n      input: { id: aToDo.id },\n    },\n\n    updater( store ) {\n      const payload = store.getRootField( 'ToDoDelete' )\n      sharedUpdater( store, user, payload.getValue( 'deletedId' ) )\n    },\n\n    optimisticUpdater( store ) {\n      sharedUpdater( store, user, aToDo.id )\n\n      const userProxy = store.get( user.id )\n      const ToDo_TotalCount = userProxy.getValue( 'ToDo_TotalCount' )\n      if ( ToDo_TotalCount != null ) {\n        userProxy.setValue( ToDo_TotalCount - 1, 'ToDo_TotalCount' )\n      }\n      const ToDo_CompletedCount = userProxy.getValue( 'ToDo_CompletedCount' )\n      if ( ToDo_CompletedCount != null ) {\n        if ( aToDo.ToDo_Complete != null ) {\n          if ( aToDo.ToDo_Complete ) {\n            userProxy.setValue( ToDo_CompletedCount - 1, 'ToDo_CompletedCount' )\n          }\n        } else if ( ToDo_TotalCount != null ) {\n          // Note this is the old ToDo_TotalCount.\n          if ( ToDo_TotalCount - 1 < ToDo_CompletedCount ) {\n            userProxy.setValue( ToDo_TotalCount - 1, 'ToDo_CompletedCount' )\n          }\n        }\n      }\n    },\n  })\n}\n\nexport default { commit }\n"]}