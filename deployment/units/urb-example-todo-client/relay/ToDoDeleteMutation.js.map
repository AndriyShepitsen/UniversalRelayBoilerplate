{"version":3,"sources":["../../../../units/urb-example-todo-client/relay/ToDoDeleteMutation.js"],"names":["mutation","sharedUpdater","store","user","deletedId","userProxy","get","id","forEach","connection","getConnection","status","deleteNode","commit","environment","aToDo","variables","input","updater","payload","getRootField","getValue","optimisticUpdater","ToDo_TotalCount","setValue","ToDo_CompletedCount","ToDo_Complete"],"mappings":";;AAEA;AACA;;AAEA,GAAMA,4FAAN;;;;;;;;;;;;AAYA,QAASC,cAAT,CAAuBC,KAAvB,CAA8BC,IAA9B,CAAoCC,SAApC,CAA+C;AAC7C,GAAMC,WAAYH,MAAMI,GAAN,CAAUH,KAAKI,EAAf,CAAlB;AACC,CAAE,KAAF,CAAS,QAAT,CAAmB,WAAnB,EAAiCC,OAAjC,CAAyC,gBAAU;AAClD,GAAMC,YAAa,gCAAkBC,aAAlB;AACjBL,SADiB;AAEjB,gBAFiB;AAGjB,CAAEM,aAAF,CAHiB,CAAnB;;AAKA,GAAIF,UAAJ,CAAgB;AACd,gCAAkBG,UAAlB,CAA6BH,UAA7B,CAAyCL,SAAzC;AACD;AACF,CATA;AAUF;;AAED,QAASS,OAAT,CAAgBC,WAAhB,CAA6BX,IAA7B,CAAmCY,KAAnC,CAA0C;AACxC,MAAO,+BAAeD,WAAf,CAA4B;AACjCd,iBADiC;AAEjCgB,UAAW;AACTC,MAAO,CAAEV,GAAIQ,MAAMR,EAAZ,CADE,CAFsB;;;AAMjCW,OANiC,kBAMzBhB,KANyB,CAMlB;AACb,GAAMiB,SAAUjB,MAAMkB,YAAN,CAAmB,YAAnB,CAAhB;AACAnB,cAAcC,KAAd,CAAqBC,IAArB,CAA2BgB,QAAQE,QAAR,CAAiB,WAAjB,CAA3B;AACD,CATgC;;AAWjCC,iBAXiC,4BAWfpB,KAXe,CAWR;AACvBD,cAAcC,KAAd,CAAqBC,IAArB,CAA2BY,MAAMR,EAAjC;;AAEA,GAAMF,WAAYH,MAAMI,GAAN,CAAUH,KAAKI,EAAf,CAAlB;AACA,GAAMgB,iBAAkBlB,UAAUgB,QAAV,CAAmB,iBAAnB,CAAxB;AACA,GAAIE,iBAAmB,IAAvB,CAA6B;AAC3BlB,UAAUmB,QAAV,CAAmBD,gBAAkB,CAArC,CAAwC,iBAAxC;AACD;AACD,GAAME,qBAAsBpB,UAAUgB,QAAV,CAAmB,qBAAnB,CAA5B;AACA,GAAII,qBAAuB,IAA3B,CAAiC;AAC/B,GAAIV,MAAMW,aAAN,EAAuB,IAA3B,CAAiC;AAC/B,GAAIX,MAAMW,aAAV,CAAyB;AACvBrB,UAAUmB,QAAV,CAAmBC,oBAAsB,CAAzC,CAA4C,qBAA5C;AACD;AACF,CAJD,IAIO,IAAIF,iBAAmB,IAAvB,CAA6B;;AAElC,GAAIA,gBAAkB,CAAlB,CAAsBE,mBAA1B,CAA+C;AAC7CpB,UAAUmB,QAAV,CAAmBD,gBAAkB,CAArC,CAAwC,qBAAxC;AACD;AACF;AACF;AACF,CAhCgC,CAA5B,CAAP;;AAkCD,C;;AAEc,CAAEV,aAAF,C","file":"ToDoDeleteMutation.js","sourcesContent":["// @flow weak\n\nimport { commitMutation, graphql } from 'react-relay'\nimport { ConnectionHandler } from 'relay-runtime'\n\nconst mutation = graphql`\n  mutation ToDoDeleteMutation($input: ToDoDeleteInput!) {\n    ToDoDelete(input: $input) {\n      Viewer {\n        ToDo_TotalCount\n        ToDo_CompletedCount\n      }\n      deletedId\n    }\n  }\n`\n\nfunction sharedUpdater(store, user, deletedId) {\n  const userProxy = store.get(user.id)\n  ;[ 'any', 'active', 'completed' ].forEach(status => {\n    const connection = ConnectionHandler.getConnection(\n      userProxy,\n      'ToDoList_ToDos',\n      { status }\n    )\n    if (connection) {\n      ConnectionHandler.deleteNode(connection, deletedId)\n    }\n  })\n}\n\nfunction commit(environment, user, aToDo) {\n  return commitMutation(environment, {\n    mutation,\n    variables: {\n      input: { id: aToDo.id },\n    },\n\n    updater(store) {\n      const payload = store.getRootField('ToDoDelete')\n      sharedUpdater(store, user, payload.getValue('deletedId'))\n    },\n\n    optimisticUpdater(store) {\n      sharedUpdater(store, user, aToDo.id)\n\n      const userProxy = store.get(user.id)\n      const ToDo_TotalCount = userProxy.getValue('ToDo_TotalCount')\n      if (ToDo_TotalCount != null) {\n        userProxy.setValue(ToDo_TotalCount - 1, 'ToDo_TotalCount')\n      }\n      const ToDo_CompletedCount = userProxy.getValue('ToDo_CompletedCount')\n      if (ToDo_CompletedCount != null) {\n        if (aToDo.ToDo_Complete != null) {\n          if (aToDo.ToDo_Complete) {\n            userProxy.setValue(ToDo_CompletedCount - 1, 'ToDo_CompletedCount')\n          }\n        } else if (ToDo_TotalCount != null) {\n          // Note this is the old ToDo_TotalCount.\n          if (ToDo_TotalCount - 1 < ToDo_CompletedCount) {\n            userProxy.setValue(ToDo_TotalCount - 1, 'ToDo_CompletedCount')\n          }\n        }\n      }\n    },\n  })\n}\n\nexport default { commit }\n"]}