{"version":3,"sources":["../../../../units/urb-example-todo-client/relay/ToDoUpdateStatusMutation.js"],"names":["mutation","sharedUpdater","store","user","proxyToDo","userProxy","get","id","status","getValue","connection","getConnection","deleteNode","commit","environment","aToDo","ToDo_Complete","variables","input","updater","payload","getRootField","getLinkedRecord","optimisticUpdater","setValue","ToDo_CompletedCount"],"mappings":";;AAEA;AACA;;AAEA,GAAMA,kGAAN;;;;;;;;;;;;;;;AAeA,QAASC,cAAT,CAAwBC,KAAxB,CAA+BC,IAA/B,CAAqCC,SAArC,CAAiD;;;AAG/C,GAAMC,WAAYH,MAAMI,GAAN,CAAWH,KAAKI,EAAhB,CAAlB;AACA,GAAMC,QAASJ,UAAUK,QAAV,CAAoB,UAApB,EAAmC,QAAnC,CAA8C,WAA7D;AACA,GAAMC,YAAa,gCAAkBC,aAAlB;AACjBN,SADiB;AAEjB,gBAFiB;AAGjB,CAAEG,aAAF,CAHiB,CAAnB;;AAKA,GAAKE,UAAL,CAAkB;AAChB,gCAAkBE,UAAlB,CAA8BF,UAA9B,CAA0CN,UAAUK,QAAV,CAAoB,IAApB,CAA1C;AACD;AACF;;AAED,QAASI,OAAT,CAAiBC,WAAjB,CAA8BX,IAA9B,CAAoCY,KAApC,CAA2CC,aAA3C,CAA2D;AACzD,MAAO,+BAAgBF,WAAhB,CAA6B;AAClCd,iBADkC;AAElCiB,UAAW;AACTC,MAAO,CAAEX,GAAIQ,MAAMR,EAAZ,CAAgBS,2BAAhB,CADE,CAFuB;;;AAMlCG,OANkC,kBAMzBjB,KANyB,CAMjB;AACf,GAAMkB,SAAUlB,MAAMmB,YAAN,CAAoB,kBAApB,CAAhB;AACApB,cAAeC,KAAf,CAAsBC,IAAtB,CAA4BiB,QAAQE,eAAR,CAAyB,MAAzB,CAA5B;AACD,CATiC;;AAWlCC,iBAXkC,4BAWfrB,KAXe,CAWP;AACzB,GAAME,WAAYF,MAAMI,GAAN,CAAWS,MAAMR,EAAjB,CAAlB;AACAH,UAAUoB,QAAV,CAAoBR,aAApB,CAAmC,UAAnC;AACAf,cAAeC,KAAf,CAAsBC,IAAtB,CAA4BC,SAA5B;;AAEA,GAAMC,WAAYH,MAAMI,GAAN,CAAWH,KAAKI,EAAhB,CAAlB;AACA,GAAMkB,qBAAsBpB,UAAUI,QAAV,CAAoB,qBAApB,CAA5B;AACA,GAAKgB,qBAAuB,IAA5B,CAAmC;AACjCpB,UAAUmB,QAAV;AACEC,qBAAwBT,cAAgB,CAAhB,CAAoB,CAAC,CAA7C,CADF;AAEE,qBAFF;;AAID;AACF,CAxBiC,CAA7B,CAAP;;AA0BD,C;;AAEc,CAAEH,aAAF,C","file":"ToDoUpdateStatusMutation.js","sourcesContent":["// @flow weak\n\nimport { commitMutation, graphql } from 'react-relay'\nimport { ConnectionHandler } from 'relay-runtime'\n\nconst mutation = graphql`\n  mutation ToDoUpdateStatusMutation($input: ToDoUpdateStatusInput!) {\n    ToDoUpdateStatus(input: $input) {\n      Viewer {\n        id\n        ToDo_CompletedCount\n      }\n      ToDo {\n        id\n        ToDo_Complete\n      }\n    }\n  }\n`\n\nfunction sharedUpdater( store, user, proxyToDo ) {\n  // In principle this could add to the active connection, but such an\n  // interaction is not possible from the front end.\n  const userProxy = store.get( user.id )\n  const status = proxyToDo.getValue( 'complete' ) ? 'active' : 'completed'\n  const connection = ConnectionHandler.getConnection(\n    userProxy,\n    'ToDoList_ToDos',\n    { status }\n  )\n  if ( connection ) {\n    ConnectionHandler.deleteNode( connection, proxyToDo.getValue( 'id' ) )\n  }\n}\n\nfunction commit( environment, user, aToDo, ToDo_Complete ) {\n  return commitMutation( environment, {\n    mutation,\n    variables: {\n      input: { id: aToDo.id, ToDo_Complete },\n    },\n\n    updater( store ) {\n      const payload = store.getRootField( 'ToDoUpdateStatus' )\n      sharedUpdater( store, user, payload.getLinkedRecord( 'ToDo' ) )\n    },\n\n    optimisticUpdater( store ) {\n      const proxyToDo = store.get( aToDo.id )\n      proxyToDo.setValue( ToDo_Complete, 'complete' )\n      sharedUpdater( store, user, proxyToDo )\n\n      const userProxy = store.get( user.id )\n      const ToDo_CompletedCount = userProxy.getValue( 'ToDo_CompletedCount' )\n      if ( ToDo_CompletedCount != null ) {\n        userProxy.setValue(\n          ToDo_CompletedCount + ( ToDo_Complete ? 1 : -1 ),\n          'ToDo_CompletedCount'\n        )\n      }\n    },\n  })\n}\n\nexport default { commit }\n"]}