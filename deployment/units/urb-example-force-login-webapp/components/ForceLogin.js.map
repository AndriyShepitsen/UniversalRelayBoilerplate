{"version":3,"sources":["../../../../units/urb-example-force-login-webapp/components/ForceLogin.jsx"],"names":["styles","card","minWidth","ForceLogin","props","classes","Viewer","User_IsAnonymous","Component"],"mappings":";;AAEA,sC;AACA;AACA,4B;AACA;AACA,kD;;AAEA,6G;AACA,6F;;AAEA,GAAMA,QAAS,QAATA,OAAS,cAAU;AACvBC,KAAM;AACJC,SAAU,GADN,CADiB,CAAV,EAAf,C;;;;AAMMC,U;AACK;AACqB,KAAKC,KAD1B,CACCC,OADD,QACCA,OADD,CACUC,MADV,QACUA,MADV;;AAGP,GAAKA,OAAOC,gBAAZ;AACE,MAAO,qEAAP,CADF;;AAGE;AACE;AACE,8CAAM,UAAWF,QAAQJ,IAAzB;AACE;AACE,MAAM,iBADR;AAEE,UAAU,iCAFZ,EADF;;AAKE;AACE,oDAAY,cAAZ,qCADF,CALF,CADF,CADF;;;;;;;AAeH,C,wBAtBsB,gBAAMO,S;;;AAyBhB;AACb,uBAAYR,MAAZ,EAAsBG,UAAtB,CADa,0F","file":"ForceLogin.js","sourcesContent":["// @flow\n\nimport Card, { CardHeader, CardContent } from 'material-ui/Card'\nimport { withStyles } from 'material-ui/styles'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\nimport Typography from 'material-ui/Typography'\n\nimport RequiresAuthenticationNotice from '../../urb-account-management-webapp/components/RequiresAuthentication'\nimport ResponsiveContentArea from '../../urb-base-webapp/components/ResponsiveContentArea'\n\nconst styles = theme => ({\n  card: {\n    minWidth: 275,\n  },\n})\n\nclass ForceLogin extends React.Component<{ classes: Object, Viewer: Object }> {\n  render() {\n    const { classes, Viewer } = this.props\n\n    if ( Viewer.User_IsAnonymous )\n      return <RequiresAuthenticationNotice /> // Anonymous users do not get to have a profile\n    else\n      return (\n        <ResponsiveContentArea>\n          <Card className={classes.card}>\n            <CardHeader\n              title=\"Only Authorized\"\n              subheader=\"Only users who log in see this.\"\n            />\n            <CardContent>\n              <Typography paragraph>\n                Content seen by authorized users\n              </Typography>\n            </CardContent>\n          </Card>\n        </ResponsiveContentArea>\n      )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles( styles )( ForceLogin ),\n  graphql`\n    fragment ForceLogin_Viewer on Viewer {\n      User_IsAnonymous\n    }\n  `\n)\n"]}